{"version":3,"sources":["components/Button.js","images/illustration-working-brown.svg","components/Home Page/HeroBox.js","components/Home Page/HomePage.js","components/NavBar/MobileNavBar.js","components/Task Manager/TaskNavBar.js","components/functions/reverseArray.js","components/Task Manager/Dates.js","components/Task Manager/CreateTask.js","components/Task Manager/TaskCard.js","images/Mordecai-Rigby-enjoying.png","components/Task Manager/EmptyTasks.js","components/Task Manager/Tasks.js","images/Mordecai-Rigby-working.png","components/Task Manager/CompletedTasks.js","components/Tag Manager/CreateTag.js","components/Tag Manager/TagCard.js","images/Mordecai-Rigby-pointing.png","components/Tag Manager/Tags.js","components/Task Manager/TaskManager.js","components/Session Manager/CreateSession.js","components/Session Manager/SessionCard.js","images/Rigby-reading.png","components/Session Manager/SessionManager.js","components/Timer Page/CurrentTask.js","sounds/end-sound.wav","components/Timer Page/Timer.js","components/Timer Page/CloseWarningMessage.js","components/Timer Page/TimerPage.js","components/Pomodoro/Pomodoro.js","components/Stats Page/TagDistribution.js","components/Stats Page/StatsCard.js","images/Mordecai-Rigby-benson.png","components/Stats Page/AccuracyMeter.js","components/Stats Page/TimeDistribution.js","components/Stats Page/StatsPage.js","images/illustration-woman-online-mobile.svg","components/NavBar/SideDrawer.js","components/NavBar/Overlay.js","App.js","index.js"],"names":["Button","props","state","handleClick","text","to","href","className","onClick","this","Component","HeroBox","greeting","userName","hour","Date","getHours","setState","src","HeroBoxImage","alt","class","HomePage","useEffect","JSON","parse","localStorage","getItem","length","statsData","tasks","totalTasks","completedTasks","taskCompletion","avgTaskDuration","taskEstimateAccuracy","time","totalActiveTime","totalHours","Array","fill","sessions","totalSession","totalIntervals","avgIntervals","days","currentDay","streak","setItem","stringify","MobileNavBar","sidemenuClickHandle","TaskNavBar","reverseArray","array","reversedArray","reverse","getDate","date","day","String","padStart","month","toLocaleString","n","Number","getOrdinalNum","CreateTask","setCreateTask","tagsData","useState","taskTitle","setTaskTitle","taskTag","setTaskTag","taskEstimate","setTaskEstimate","taskDesc","setTaskDesc","taskTagsData","errorMessage","setErrorMessage","map","error","htmlFor","type","name","id","placeholder","onChange","e","target","value","selected","disabled","hidden","tag","cols","rows","preventDefault","valid","errors","push","parseInt","obj","task_title","task_tag","task_intervals","task_estimate","task_desc","task_isCompleted","task_startDate","task_endDate","task_id","Math","random","toFixed","updatedStatsData","TaskCard","task","tagStyles","forEach","color","colour","setTasks","style","updatedTasks","accuracy","guess","actual","abs","calcAccuracy","newTasks","filter","EmptyTasks","styles","height","width","image","objectFit","Tasks","tasksData","createTask","pendingTasks","RegularShowEnjoy","CompletedTasks","RegularShowWork","CreateTag","setTagData","tagData","tagColour","setTagColour","tagName","setTagName","paddingLeft","paddingTop","setCreateTag","console","log","newTag","tagTotalTime","TagCard","colorStyles","backgroundColor","newTagData","Tags","createTag","RegularShowPoint","data","TaskManager","path","component","CreateSession","sessionData","setSessionData","setCreateSession","sessionTitle","setSessionTitle","sessionActiveTime","setSessionActiveTime","sessionShortBreak","setSessionShortBreak","sessionLongBreak","setSessionLongBreak","sessionTask","setSessionTask","sessionInterval","setSessionInterval","sessionDescription","setSessionDescription","sessionTag","setSessionTag","sessionTaskId","setSessionTaskId","defaultValue","min","max","index","selectedIndex","childNodes","getAttribute","sessionInfo","title","activeTime","shortBreak","longBreak","intervals","description","taskId","isStarted","isFinished","currentInterval","SessionCard","session","sessionIsStarted","setSessionIsStarted","setCurrentSession","currentSession","updatedSessionData","SessionManager","createSession","RegularShowReading","CurrentTask","Timer","minutes","setMinutes","seconds","setSeconds","counter","setCounter","currentBlock","setCurrentBlock","blocks","totalBlocks","isRunning","setIsRunning","isReseted","setIsReseted","sessionTime","setSessionTime","setTotalHours","isSession","setIsSession","setTimerIsStarted","intervalId","setInterval","Audio","EndSound","play","updatedTasksData","updatedTagsData","toDateString","today","diff","item","i","clearInterval","CloseWarningMessage","TimerPage","updatedSessionsData","timerIsStarted","Pomodoro","TagDistribution","tagLabels","setTagLabels","tagTime","setTagTime","tagColours","setTagColours","tagBorderColours","setTagBorderColours","labels","datasets","borderColor","borderWidth","options","responsive","layout","padding","plugins","legend","position","maxWidth","boxWidth","boxHeight","display","StatsCard","AccuracyMeter","num","estimateAccuracy","parseFloat","accuracyData","label","cutout","tooltip","enabled","TimeDistribution","ratio","apply","size","round","scales","x","grid","y","StatsPage","hasStats","setHasStats","setTaskCompletion","setAvgTaskDuration","totalSessions","setTotalSessions","setAvgIntervals","totalHoursActive","setTotalHoursActive","setEstimateAccuracy","setStreak","iconStyles","fontSize","duration","estimateArray","totalAccuracy","reduce","total","currentValue","RegularShowBenson","SideDrawer","activeIconStyles","location","useLocation","pathname","linkClickHandle","ProductivePerson","Overlay","overlayClickHandle","App","sideDrawerStyle","overlayStyle","isSideDrawerOpen","setIsSideDrawerOpen","sideMenuHandle","exact","ReactDOM","render","document","getElementById"],"mappings":"iOAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,YAAaF,EAAME,YACnBC,KAAMH,EAAMG,KACZC,GAAIJ,EAAMI,IALK,E,0CASnB,WACE,OACE,mBACEC,KAAK,qBACLC,UAAU,uBACVC,QAASC,KAAKP,MAAMC,YACpBE,GAAII,KAAKP,MAAMG,GAJjB,SAMGI,KAAKR,MAAMG,W,GAlBgBM,aCHrB,MAA0B,uDCIpBC,E,kDACnB,aAAe,IAAD,8BACZ,gBACKT,MAAQ,CACXU,SAAU,GACVC,SAAU,YAJA,E,qDAQd,WACE,IACMC,GADE,IAAIC,MACGC,WAEXF,GAAQ,GAAKA,EAAO,GACtBL,KAAKQ,SAAS,CACZL,SAAU,iBAEHE,GAAQ,IAAMA,EAAO,GAC9BL,KAAKQ,SAAS,CACZL,SAAU,mBAGZH,KAAKQ,SAAS,CACZL,SAAU,mB,oBAKhB,WACE,OACE,sBAAKL,UAAU,WAAf,UACE,oBAAIA,UAAU,WAAd,SAA0BE,KAAKP,MAAMU,WAErC,qBACEM,IAAKC,EACLC,IAAI,6CACJb,UAAU,oBAEZ,oBAAGA,UAAU,wBAAb,yDAEE,sBAAMc,MAAM,YAAZ,mC,GAxC2BX,aCgDtBY,MA/Cf,WAgCE,OA/BAC,qBAAU,WAER,GAA6B,IADPC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MACpDC,OAAc,CAC9B,IAAMC,EAAY,CAChB,CACEC,MAAO,CACLC,WAAY,EACZC,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,EACjBC,qBAAsB,IAExBC,KAAM,CACJC,gBAAiB,EACjBC,WAAYC,MAAM,IAAIC,KAAK,IAE7BC,SAAU,CACRC,aAAc,EACdC,eAAgB,EAChBC,aAAc,GAEhBC,KAAM,CACJC,WAAY,IACZC,OAAQ,KAIdrB,aAAasB,QAAQ,YAAaxB,KAAKyB,UAAUpB,OAElD,IAGD,sBAAKtB,UAAU,WAAf,UACE,cAAC,EAAD,IACA,sBAAKc,MAAM,oBAAX,UACE,cAAC,IAAD,CAAMhB,GAAG,4BAAT,SACE,cAAC,EAAD,CAAQD,KAAK,YAEf,cAAC,IAAD,CAAMC,GAAG,sBAAT,SACE,cAAC,EAAD,CAAQD,KAAK,wBC1CF8C,E,kDACnB,WAAYjD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXiD,oBAAqBlD,EAAMkD,qBAHZ,E,0CAOnB,WACE,OACE,wBAAQ5C,UAAU,SAAlB,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,IAAD,CAAMF,GAAG,IAAT,SACE,8CAGJ,mBACEC,KAAK,qBACLC,UAAU,iBACVC,QAASC,KAAKP,MAAMiD,oBAHtB,SAKE,qBACEjC,IAAI,kEACJE,IAAI,sBACJb,UAAU,oC,GAzBkBG,aCArB0C,E,4JACnB,WACE,OACE,qBAAK7C,UAAU,eAAf,SACE,qBAAIA,UAAU,qBAAd,UACE,oBAAIA,UAAU,2BAAd,SACE,cAAC,IAAD,CACED,KAAK,qBACLC,UAAU,iCACVF,GAAG,sBAHL,qBAQF,oBAAIE,UAAU,2BAAd,SACE,cAAC,IAAD,CACED,KAAK,qBACLC,UAAU,iCACVF,GAAG,gCAHL,yBAQF,oBAAIE,UAAU,2BAAd,SACE,cAAC,IAAD,CACED,KAAK,qBACLC,UAAU,iCACVF,GAAG,qBAHL,6B,GAxB4BK,a,OCUzB2C,EAVM,SAAUC,GAE7B,IAAMC,EAAa,YAAOD,GAK1B,OAFAC,EAAcC,UAEPD,G,iBCDT,IAAME,EAAU,WACd,IAAMC,EAAO,IAAI3C,KACX4C,EAAMC,OAAOF,EAAKD,WAAWI,SAAS,EAAG,KACzCC,EAAQJ,EAAKK,eAAe,UAAW,CAAED,MAAO,SACtD,OAbF,SAAuBH,GACrB,IAAIK,EAAIC,OAAON,GACf,OACEK,GACCA,EAAI,EACD,CAAC,KAAM,KAAM,KAAM,MAAOA,EAAI,GAAKA,EAAI,IAAOA,EAAI,GAAK,EAAI,EAAIA,EAAI,IACnE,IAOCE,CAAcP,GAAO,KAAOG,GCyLtBK,MA9Lf,YAA+C,IAAzBrC,EAAwB,EAAxBA,MAAOsC,EAAiB,EAAjBA,cACrBC,EAAW7C,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAC1DE,EAAYL,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAAM,GAGxE,EAAkC2C,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,mBAAS,YAAID,IAArD,mBAAOU,EAAP,KACA,GADA,KACwCT,mBAAS,KAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KAOA,EAAsCX,oBAAS,GAA/C,mBA+EA,OA/EA,UAgFE,sBAAK/D,UAAU,cAAf,UACE,yBAAQA,UAAU,sBAAlB,UACE,oBAAIA,UAAU,uBAAd,yBACA,mBAAGD,KAAK,qBAAqBE,QAxFT,WACxB4D,EAAc,KAuFV,SACE,cAAC,IAAD,CAAW7D,UAAU,oBAIzB,oBAAIA,UAAU,SAAd,SACGyE,EAAaE,KAAI,SAAUC,GAC1B,OAAO,oBAAI5E,UAAU,kBAAd,SAAiC4E,SAI5C,uBAAM5E,UAAU,oBAAhB,UACE,wBAAO6E,QAAQ,SAAS7E,UAAU,2BAAlC,wBACa,sBAAMA,UAAU,qBAAhB,kBAEb,uBACE8E,KAAK,OACLC,KAAK,YACLC,GAAG,SACHC,YAAY,kBACZjF,UAAU,cACVkF,SAtGe,SAAUC,GAC/BlB,EAAakB,EAAEC,OAAOC,UAuGlB,wBAAOR,QAAQ,OAAO7E,UAAU,2BAAhC,iBACM,sBAAMA,UAAU,qBAAhB,kBAEN,yBACE+E,KAAK,UACLC,GAAG,OACHhF,UAAU,4BACVkF,SA3Gc,SAAUC,GAC9BhB,EAAWgB,EAAEC,OAAOC,QAsGhB,UAME,wBAAQA,MAAM,GAAGC,UAAQ,EAACC,UAAQ,EAACC,QAAM,IAEhB,IAAxBhB,EAAanD,OACZ,wBAAQkE,UAAQ,EAAhB,4BAEAf,EAAaG,KAAI,SAAUc,GACzB,OACE,wBAAQJ,MAAK,UAAKI,EAAIV,MAAQC,GAAIS,EAAIT,GAAtC,SACGS,EAAIV,aAMf,wBAAOF,QAAQ,YAAY7E,UAAU,2BAArC,4CACkC,IAChC,sBAAMA,UAAU,qBAAhB,kBAEF,uBACE8E,KAAK,SACLC,KAAK,eACLC,GAAG,YACHC,YAAY,YACZjF,UAAU,gBACVkF,SAjImB,SAAUC,GACnCd,EAAgBc,EAAEC,OAAOC,UAmIrB,uBAAOR,QAAQ,eAAe7E,UAAU,2BAAxC,yBAGA,0BACE+E,KAAK,kBACLC,GAAG,eACHU,KAAK,KACLC,KAAK,IACLV,YAAY,+BACZjF,UAAU,iCACVkF,SA1Ie,SAAUC,GAC/BZ,EAAYY,EAAEC,OAAOC,UA4IjB,wBACErF,UAAU,gBACV8E,KAAK,SACL7E,QA5IiB,SAAUkF,GACjCA,EAAES,iBAEF,IAAIC,GAAQ,EACNC,EAAS,GAwBf,GAvBApB,EAAgBoB,GAEE,KAAd9B,IACF8B,EAAOC,KAAK,iCACZF,GAAQ,GAEM,KAAZ3B,IACF4B,EAAOC,KAAK,4BACZF,GAAQ,GAEW,KAAjBzB,IACF0B,EAAOC,KAAK,0CACZF,GAAQ,GAGNG,SAAS5B,GAAgB,IAC3B0B,EAAOC,KAAK,sCACZF,GAAQ,GAENG,SAAS5B,GAAgB,KAC3B0B,EAAOC,KAAK,0CACZF,GAAQ,IAEI,IAAVA,EAAgB,CAClB,IAAMI,EAAM,GACZA,EAAIC,WAAalC,EACjBiC,EAAIE,SAAWjC,EACf+B,EAAIG,eAAiB,EACrBH,EAAII,cAAgBjC,EACpB6B,EAAIK,UAAYhC,EAChB2B,EAAIM,kBAAmB,EACvBN,EAAIO,eAAiBtD,IACrB+C,EAAIQ,aAAe,IACnBR,EAAIS,QAA0B,IAAhBC,KAAKC,SAGnBrF,EAAMwE,KAAKE,GACX9E,aAAasB,QAAQ,YAAaxB,KAAKyB,UAAUnB,IAIjDD,EAAUC,MAAMC,YAAc,EAC9B,IAAME,EACJJ,EAAUC,MAAME,eAAiBH,EAAUC,MAAMC,WACnDF,EAAUC,MAAMG,eAAiBA,EAAemF,QAAQ,GACxD,IAAMC,EAAmB,GAKzB,OAJAA,EAAiBf,KAAKzE,GACtBH,aAAasB,QAAQ,YAAaxB,KAAKyB,UAAUoE,SACjDjD,EAAc,IAKhBa,EAAgBoB,IA+EZ,SAKE,mBACE/F,KAAK,qBACLe,MAAM,sBAFR,SAKE,wD,qFCzEGiG,MA5Gf,SAAkBrH,GAChB,IAAMoE,EAAW7C,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAC1DE,EAAYL,KAAKC,MAAMC,aAAaC,QAAQ,cAAc,GAQhE,EAUI1B,EAAMsH,KATRb,EADF,EACEA,SACAD,EAFF,EAEEA,WACAI,EAHF,EAGEA,UACAF,EAJF,EAIEA,eACAC,EALF,EAKEA,cACAK,EANF,EAMEA,QACAF,EAPF,EAOEA,eACAC,EARF,EAQEA,aACAF,EATF,EASEA,iBAGIU,EAAY,GAEM,IAApBnD,EAASzC,QACXyC,EAASoD,SAAQ,SAAUzB,GACrBA,EAAIV,OAASoB,IACfc,EAAUE,MAAQ1B,EAAI2B,WAM5B,IAAQ7F,EAAoB7B,EAApB6B,MAAO8F,EAAa3H,EAAb2H,SAkCf,OACE,sBACErH,UAAS,qBACc,IAArBuG,EAA4B,uBAAyB,IAFzD,UAKE,sBAAKvG,UAAU,YAAf,UACE,mBAAGA,UAAU,iBAAiBsH,MAAOL,EAArC,SACGd,IAEH,oBAAInG,UAAU,kBAAd,SAAiCkG,IACjC,mBAAGlG,UAAU,kBAAb,SAAgCsG,OAElC,sBAAKtG,UAAU,qBAAf,UACE,wBAAQA,UAAU,6BAA6BC,QAxC9B,WACrB,IAAMsH,EAAehG,EAAMoD,KAAI,SAAUqC,GAKvC,OAJIN,IAAYM,EAAKN,UACnBM,EAAKT,kBAAmB,EACxBS,EAAKP,aAAevD,KAEf8D,KAKHQ,EAhDa,SAAUC,EAAOC,GACpC,IAAIF,EAAWb,KAAKgB,IAAIF,EAAQC,GAAUA,EAE1C,OADW,KAAO,EAAIF,GA8CLI,CAAaxB,EAAgBC,GAC9C/E,EAAUC,MAAMK,qBAAqBmE,KAAKyB,GAG1ClG,EAAUC,MAAME,gBAAkB,EAClCH,EAAUC,MAAMG,eACdJ,EAAUC,MAAME,eAAiBH,EAAUC,MAAMC,WACnD,IAAMsF,EAAmB,GACzBA,EAAiBf,KAAKzE,GACtBH,aAAasB,QAAQ,YAAaxB,KAAKyB,UAAUoE,IAEjD3F,aAAasB,QAAQ,YAAaxB,KAAKyB,UAAU6E,IACjDF,EAAS,YAAIE,KAiBT,SACE,cAAC,IAAD,CAAiBvH,UAAU,gCAE7B,wBAAQA,UAAU,6BAA6BC,QAjDhC,WACnB,IAAM4H,EAAWtG,EAAMuG,QAAO,SAACd,GAAD,OAAUN,IAAYM,EAAKN,WACzDvF,aAAasB,QAAQ,YAAaxB,KAAKyB,UAAUmF,IACjDR,EAAS,YAAIQ,KA8CT,SACE,cAAC,IAAD,CAAY7H,UAAU,qCAG1B,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAcA,UAAU,oBACxB,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,kBAAb,4BACA,mBAAGA,UAAU,mBAAb,SAAiCqG,OAEnC,cAAC,IAAD,CAAWrG,UAAU,oBACrB,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,kBAAb,mBACA,mBAAGA,UAAU,mBAAb,SAAiCwG,OAEnC,sBAAKxG,UAAU,YAAf,UACE,mBAAGA,UAAU,kBAAb,iBACA,mBAAGA,UAAU,mBAAb,SAAiCyG,cC9G5B,MAA0B,oDC6B1BsB,MAzBf,SAAoBrI,GAClB,IAAMsI,EAAS,CACbC,OAAQvI,EAAMuI,OACdC,MAAOxI,EAAMwI,OASf,OACE,sBAAKlI,UAAU,eAAesH,MAAOU,EAArC,UACE,qBACErH,IAAKjB,EAAMyI,MACXtH,IAAKnB,EAAMmB,IACXb,UAAU,oBACVsH,MAZc,CAClBW,OAAQ,OACRC,MAAO,OACPE,UAAW,WAWT,mBAAGpI,UAAU,qBAAb,SAAmCN,EAAMG,WCkDhCwI,MA7Df,WACE,IAAMC,EAAYrH,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAClE,EAA0B2C,mBAAS,YAAIuE,IAAvC,mBAAO/G,EAAP,KAAc8F,EAAd,KACA,EAAoCtD,mBAAS,IAA7C,mBAAOwE,EAAP,KAAmB1E,EAAnB,KAEM2E,EAAeF,EAAUR,QAAO,SAACd,GACrC,GAA6B,GAAzBA,EAAKT,iBACP,OAAOS,KAQX,OACE,cAAC,IAAD,UACE,sBAAKhH,UAAU,eAAf,UACE,yBAAQA,UAAU,uBAAlB,UACE,oBAAIA,UAAU,UAAd,mBACA,oBACED,KAAK,qBACLC,UAAU,WACVC,QAZe,WACvB4D,EAAc,cAAC,EAAD,CAAYtC,MAAOA,EAAOsC,cAAeA,MAQjD,UAKE,0CACA,cAAC,IAAD,CAAS7D,UAAU,yBAItBuI,EAEuB,GAAvBC,EAAanH,OACZ,cAAC,EAAD,CACE8G,MAAOM,EACP5I,KAAK,qDACLgB,IAAI,+BACJoH,OAAQ,MAGV,oBAAIjI,UAAU,YAAd,SACG8C,EAAavB,GAAOoD,KAAI,SAACqC,GACxB,OAA6B,GAAzBA,EAAKT,iBAEL,cAAC,EAAD,CAEES,KAAMA,EACNzF,MAAOA,EACP8F,SAAUA,GAHLL,EAAKN,SAOT,cCjEN,MAA0B,mDCgD1BgC,MAxCf,WACE,IAAMJ,EAAYrH,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAClE,EAA0B2C,mBAAS,YAAIuE,IAAvC,mBAAO/G,EAAP,KAAc8F,EAAd,KAEM5F,EAAiB6G,EAAUR,QAAO,SAACd,GACvC,GAA6B,GAAzBA,EAAKT,iBACP,OAAOS,KAIX,OACE,sBAAKhH,UAAU,eAAf,UACE,wBAAQA,UAAU,uBAAlB,SACE,oBAAIA,UAAU,UAAd,+BAEwB,GAAzByB,EAAeJ,OACd,cAAC,EAAD,CACE8G,MAAOQ,EACP9I,KAAK,2DACLgB,IAAI,8BACJoH,OAAQ,MAGV,oBAAIjI,UAAU,YAAd,SACG8C,EAAarB,GAAgBkD,KAAI,SAACqC,GACjC,OACE,cAAC,EAAD,CAEEA,KAAMA,EACNzF,MAAOA,EACP8F,SAAUA,GAHLL,EAAKN,kBC6EXkC,MA1Gf,SAAmBlJ,GACjB,IAAQmJ,EAAwBnJ,EAAxBmJ,WAAYC,EAAYpJ,EAAZoJ,QAEpB,EAAkC/E,mBAAS,QAA3C,mBAAOgF,EAAP,KAAkBC,EAAlB,KACA,EAA8BjF,mBAAS,IAAvC,mBAAOkF,EAAP,KAAgBC,EAAhB,KAEA,EAAwCnF,mBAAS,IAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KA+CA,OACE,qBAAK1E,UAAU,aAAf,SACE,uBAAMA,UAAU,mBAAhB,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,SAASsH,MAAO,CAAE6B,YAAa,KAAMC,WAAY,KAA/D,SACG3E,EAAaE,KAAI,SAAUC,GAC1B,OAAO,oBAAI5E,UAAU,kBAAd,SAAiC4E,SAG5C,wBAAOC,QAAQ,SAAS7E,UAAU,0BAAlC,sBACW,sBAAMA,UAAU,qBAAhB,kBAEX,uBACE8E,KAAK,OACLC,KAAK,UACLC,GAAG,SACHhF,UAAU,cACVkF,SA1DY,SAAUC,GAC9B+D,EAAW/D,EAAEC,OAAOC,UA2Dd,uBAAOR,QAAQ,WAAW7E,UAAU,0BAApC,wBAGA,qBAAKA,UAAU,gBAAf,SACE,uBACE8E,KAAK,QACLC,KAAK,YACLC,GAAG,WACHhF,UAAU,wBACVkF,SAjEY,SAAUC,GAChC6D,EAAa7D,EAAEC,OAAOC,eAoElB,qBAAKrF,UAAU,oBAAf,SACE,mBAAGD,KAAK,qBAAqBE,QA9EX,WACxBP,EAAM2J,aAAa,KA6Eb,SACE,cAAC,IAAD,QAGJ,qBAAKrJ,UAAU,qBAAf,SACE,wBACEA,UAAU,gBACV8E,KAAK,SACL7E,QA1Ec,SAAUkF,GAChCA,EAAES,iBAEF,IAAIC,GAAQ,EACNC,EAAS,GASf,GARApB,EAAgBoB,GAEA,KAAZmD,IACFK,QAAQC,IAAI,eACZzD,EAAOC,KAAK,iCACZF,GAAQ,IAGI,IAAVA,EAAgB,CAClB,IAAM2D,EAAS,CACbzE,KAAMkE,EACN7B,OAAQ2B,EACR/D,GAAoB,IAAhB2B,KAAKC,SACT6C,aAAc,GAQhB,OALAX,EAAQ/C,KAAKyD,GACbrI,aAAasB,QAAQ,WAAYxB,KAAKyB,UAAUoG,IAChDD,EAAW,YAAIC,SACfpJ,EAAM2J,aAAa,IAKrBC,QAAQC,IAAI,WACZ7E,EAAgBoB,IAyCV,SAKE,mBAAG/F,KAAK,qBAAqBe,MAAM,sBAAnC,SACE,wDCvEC4I,MA7Bf,YAA6D,IAA1C3E,EAAyC,EAAzCA,KAAMqC,EAAmC,EAAnCA,OAAQpC,EAA2B,EAA3BA,GAAI8D,EAAuB,EAAvBA,QAASD,EAAc,EAAdA,WAWtCc,EAAc,CAClBC,gBAAiBxC,GAGnB,OACE,sBAAKpH,UAAU,WAAf,UACE,qBAAKA,UAAU,mBAAmBsH,MAAOqC,IACzC,oBAAI3J,UAAU,iBAAd,SAAgC+E,IAChC,qBAAK/E,UAAU,kBAAf,SACE,cAAC,IAAD,CACEA,UAAU,wBACVC,QArBgB,WACtB,IAAM4J,EAAaf,EAAQhB,QAAO,SAAUrC,GAC1C,GAAIA,EAAIT,KAAOA,EACb,OAAOS,KAGXoD,EAAW,YAAIgB,IACf1I,aAAasB,QAAQ,WAAYxB,KAAKyB,UAAUmH,aCXrC,MAA0B,oDC+E1BC,MAlEf,WACE,MAAkC/F,mBAAS,QAA3C,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBACA,GADA,UACkCA,mBAAS,KAA3C,mBAAOgG,EAAP,KAAkBV,EAAlB,KAEMvF,EAAW7C,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAChE,EAA8B2C,mBAAS,YAAID,IAA3C,mBAAOgF,EAAP,KAAgBD,EAAhB,KAYA,OACE,cAAC,IAAD,UACE,sBAAK7I,UAAU,eAAf,UACE,yBAAQA,UAAU,uBAAlB,UACE,oBAAIA,UAAU,UAAd,kBACA,oBACED,KAAK,qBACLC,UAAU,WACVC,QAlBc,WACtBoJ,EACE,cAAC,EAAD,CACER,WAAYA,EACZC,QAASA,EACTO,aAAcA,MAUZ,UAKE,yCACA,cAAC,IAAD,CAASrJ,UAAU,yBAGvB,mBAAGA,UAAU,UAAb,qFAKC+J,EAEoB,IAApBjG,EAASzC,OACR,cAAC,EAAD,CACE8G,MAAO6B,EACPnK,KAAK,2EACLgB,IAAI,+BACJoH,OAAQ,MAGV,qBAAKjI,UAAU,cAAf,SACG8C,EAAagG,GAASnE,KAAI,SAAUsF,GACnC,OACE,cAAC,EAAD,CACElF,KAAMkF,EAAKlF,KACXqC,OAAQ6C,EAAK7C,OACbpC,GAAIiF,EAAKjF,GACT6D,WAAYA,EACZC,QAASA,eC1CZoB,MAlBf,WACE,OACE,cAAC,IAAD,UACE,sBAAKlK,UAAU,eAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmK,KAAK,sBAAsBC,UAAW/B,IAC7C,cAAC,IAAD,CACE8B,KAAK,gCACLC,UAAW1B,IAEb,cAAC,IAAD,CAAOyB,KAAK,qBAAqBC,UAAWN,aCwSvCO,MAtTf,YAA2E,IAAlDC,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,iBAE9ClJ,EAAYL,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAAM,GAElEkH,EAAYrH,KAAKC,MACrBC,aAAaC,QAAQ,cAAgB,MACrC0G,QAAO,SAAUd,GACjB,IAA8B,IAA1BA,EAAKT,iBACP,OAAOS,KAIX,EAAwCjD,mBAAS,IAAjD,mBAAO0G,EAAP,KAAqBC,EAArB,KACA,EAAkD3G,mBAAS,MAA3D,mBAAO4G,EAAP,KAA0BC,EAA1B,KACA,EAAkD7G,mBAAS,KAA3D,mBAAO8G,EAAP,KAA0BC,EAA1B,KACA,EAAgD/G,mBAAS,MAAzD,mBAAOgH,EAAP,KAAyBC,EAAzB,KACA,EAAsCjH,mBAAS,IAA/C,mBAAOkH,EAAP,KAAoBC,EAApB,KACA,EAA8CnH,mBAAS,KAAvD,mBAAOoH,EAAP,KAAwBC,EAAxB,KACA,EAAoDrH,mBAAS,IAA7D,mBAAOsH,EAAP,KAA2BC,EAA3B,KACA,EAAoCvH,mBAAS,IAA7C,mBAAOwH,EAAP,KAAmBC,EAAnB,KACA,EAA0CzH,mBAAS,IAAnD,mBAAO0H,EAAP,KAAsBC,EAAtB,KAEA,EAAwC3H,mBAAS,IAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KAkJA,OACE,sBAAK1E,UAAU,cAAf,UACE,yBAAQA,UAAU,yBAAlB,UACE,oBAAIA,UAAU,0BAAd,4BACA,mBAAGD,KAAK,qBAAqBE,QApJT,WACxBuK,EAAiB,KAmJb,SACE,cAAC,IAAD,CAAWxK,UAAU,oBAIzB,oBAAIA,UAAU,SAAd,SACGyE,EAAaE,KAAI,SAAUC,GAC1B,OAAO,oBAAI5E,UAAU,kBAAd,SAAiC4E,SAI5C,uBAAM5E,UAAU,uBAAhB,UACE,wBAAO6E,QAAQ,SAAS7E,UAAU,8BAAlC,2BACgB,sBAAMA,UAAU,qBAAhB,kBAEhB,uBACE8E,KAAK,OACLC,KAAK,eACLC,GAAG,SACHC,YAAY,qBACZjF,UAAU,cACVkF,SArKmB,SAAUC,GACnCuF,EAAgBvF,EAAEC,OAAOC,UAuKrB,wBAAOR,QAAQ,aAAa7E,UAAU,8BAAtC,yBACc,sBAAMA,UAAU,eAAhB,0BAAmD,IAC/D,sBAAMA,UAAU,qBAAhB,kBAEF,uBACE8E,KAAK,SACLC,KAAK,mBACLC,GAAG,aACHhF,UAAU,gBACVkF,SA9KwB,SAAUC,GACxCyF,EAAqBzF,EAAEC,OAAOC,QA8KxBsG,aAAa,KACbC,IAAI,KACJC,IAAI,QAGN,wBACEhH,QAAQ,kBACR7E,UAAU,8BAFZ,8BAImB,sBAAMA,UAAU,eAAhB,0BAAmD,IACpE,sBAAMA,UAAU,qBAAhB,kBAGF,uBACE8E,KAAK,SACLC,KAAK,wBACLC,GAAG,kBACHhF,UAAU,gBACVkF,SA9LwB,SAAUC,GACxC2F,EAAqB3F,EAAEC,OAAOC,QA8LxBsG,aAAa,IACbC,IAAI,IACJC,IAAI,OAGN,wBAAOhH,QAAQ,iBAAiB7E,UAAU,8BAA1C,6BACkB,sBAAMA,UAAU,eAAhB,0BAAmD,IACnE,sBAAMA,UAAU,qBAAhB,kBAGF,uBACE8E,KAAK,SACLC,KAAK,uBACLC,GAAG,iBACHhF,UAAU,gBACVkF,SA3MuB,SAAUC,GACvC6F,EAAoB7F,EAAEC,OAAOC,QA2MvBsG,aAAa,KACbC,IAAI,KACJC,IAAI,OAGN,wBAAOhH,QAAQ,QAAQ7E,UAAU,8BAAjC,kBACO,sBAAMA,UAAU,qBAAhB,kBAEP,yBACE+E,KAAK,cACLC,GAAG,QACHhF,UAAU,+BACVkF,SArNkB,SAAUC,GAClC+F,EAAe/F,EAAEC,OAAOC,OACxB,IAAIyG,EAAQ3G,EAAEC,OAAO2G,cAEjB/G,EADgBG,EAAEC,OAAO4G,WAAWF,GACjBG,aAAa,MAEpC3D,EAAUpB,SAAQ,SAAUF,GACtBA,EAAKN,SAAW1B,IAClBwG,EAAcxE,EAAKb,UACnBuF,EAAiB1E,EAAKN,cAwMtB,UAME,wBAAQrB,MAAM,GAAGC,UAAQ,EAACC,UAAQ,EAACC,QAAM,IAEnB,IAArB8C,EAAUjH,OACT,wBAAQkE,UAAQ,EAAhB,+BAEA+C,EAAU3D,KAAI,SAAUpD,GACtB,OACE,wBAAQ8D,MAAK,UAAK9D,EAAM2E,YAAclB,GAAIzD,EAAMmF,QAAhD,SACGnF,EAAM2E,mBAMjB,wBAAOrB,QAAQ,aAAa7E,UAAU,8BAAtC,iCACsB,sBAAMA,UAAU,qBAAhB,kBAEtB,uBACE8E,KAAK,SACLC,KAAK,mBACLC,GAAG,aACHhF,UAAU,gBACVkF,SAhOuB,SAAUC,GACvCiG,EAAmBjG,EAAEC,OAAOC,QAgOtBsG,aAAa,IACbC,IAAI,IACJC,IAAI,OAGN,uBAAOhH,QAAQ,eAAe7E,UAAU,8BAAxC,yBAGA,0BACE+E,KAAK,qBACLC,GAAG,eACHU,KAAK,KACLC,KAAK,IACLV,YAAY,kCACZjF,UAAU,oCACVkF,SA7OyB,SAAUC,GACzCmG,EAAsBnG,EAAEC,OAAOC,UA+O3B,wBACErF,UAAU,gBACV8E,KAAK,SACL7E,QA/OoB,SAAUkF,GACpCA,EAAES,iBAEF,IAAIC,GAAQ,EACNC,EAAS,GAkEf,GAjEApB,EAAgBoB,GAGK,KAAjB2E,IACF3E,EAAOC,KAAK,oCACZF,GAAQ,GAEgB,KAAtB8E,IACF7E,EAAOC,KAAK,wCACZF,GAAQ,GAENG,SAAS2E,GAAqB,IAChC7E,EAAOC,KAAK,wCACZF,GAAQ,GAENG,SAAS2E,GAAqB,MAChC7E,EAAOC,KAAK,8CACZF,GAAQ,GAGgB,KAAtBgF,IACF/E,EAAOC,KAAK,wCACZF,GAAQ,GAENG,SAAS6E,GAAqB,IAChC/E,EAAOC,KAAK,wCACZF,GAAQ,GAENG,SAAS6E,GAAqB,KAChC/E,EAAOC,KAAK,0CACZF,GAAQ,GAGe,KAArBkF,IACFjF,EAAOC,KAAK,uCACZF,GAAQ,GAENG,SAAS+E,GAAoB,IAC/BjF,EAAOC,KAAK,uCACZF,GAAQ,GAENG,SAAS+E,GAAoB,MAC/BjF,EAAOC,KAAK,0CACZF,GAAQ,GAGU,KAAhBoF,IACFnF,EAAOC,KAAK,6BACZF,GAAQ,GAGc,KAApBsF,IACFrF,EAAOC,KAAK,6CACZF,GAAQ,GAGNG,SAASmF,GAAmB,IAC9BrF,EAAOC,KAAK,yCACZF,GAAQ,GAENG,SAASmF,GAAmB,KAC9BrF,EAAOC,KAAK,6CACZF,GAAQ,IAGI,IAAVA,EAAgB,CAClB,IAAMqG,EAAc,GACpBA,EAAYlH,GAAqB,IAAhB2B,KAAKC,SACtBsF,EAAYC,MAAQ1B,EACpByB,EAAYE,WAAazB,EACzBuB,EAAYG,WAAaxB,EACzBqB,EAAYI,UAAYvB,EACxBmB,EAAYlF,KAAOiE,EACnBiB,EAAYK,UAAYpB,EACxBe,EAAYM,YAAcnB,EAC1Ba,EAAYzG,IAAM8F,EAClBW,EAAYO,OAAShB,EACrBS,EAAYQ,WAAY,EACxBR,EAAYS,YAAa,EACzBT,EAAYU,gBAAkB,EAE9BtC,EAAYvE,KAAKmG,GACjB3B,EAAe,YAAID,IACnBnJ,aAAasB,QAAQ,eAAgBxB,KAAKyB,UAAU4H,IAGpDhJ,EAAUY,SAASC,cAAgB,EACnCb,EAAUY,SAASE,gBAAkBsB,OAAOwI,EAAYK,WACxD,IAAMlK,EACJf,EAAUY,SAASE,eAAiBd,EAAUY,SAASC,aACzDb,EAAUY,SAASG,aAAeA,EAAawE,QAAQ,GAEvD,IAAMC,EAAmB,GAKzB,OAJAA,EAAiBf,KAAKzE,GACtBH,aAAasB,QAAQ,YAAaxB,KAAKyB,UAAUoE,SACjD0D,EAAiB,IAKnB9F,EAAgBoB,IAmIZ,SAKE,mBAAG/F,KAAK,qBAAqBe,MAAM,sBAAnC,SACE,2D,iBChMG+L,MA7Gf,SAAqBnN,GACDuB,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAAM,GAAxE,IAEA,EAYI1B,EAAMoN,QAXR9H,EADF,EACEA,GAKA2H,GANF,EAEEP,WAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEI,UALF,EAMEC,YACAR,EAPF,EAOEA,MACAnF,EARF,EAQEA,KACA4F,EATF,EASEA,gBACAL,EAVF,EAUEA,UACAC,EAXF,EAWEA,YAGF,EAAgDzI,mBAC9CrE,EAAMoN,QAAQJ,WADhB,mBAAOK,EAAP,KAAyBC,EAAzB,KAIQ1C,EAAgC5K,EAAhC4K,YAAaC,EAAmB7K,EAAnB6K,eAGG0C,GAAsBvN,EAAtCwN,eAAsCxN,EAAtBuN,mBA+BxB,OACE,sBAAKjN,UAAU,eAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,2BAAd,SAA0CmM,IAC1C,mBAAGnM,UAAU,2BAAb,SAAyCgH,IACzC,mBAAGhH,UAAU,kCAAb,SAAgDwM,OAElD,sBAAKxM,UAAU,wBAAf,UACE,wBACEA,UAAU,gCACVC,QAvCoB,WAC1B,IAAMkN,EAAqB7C,EAAYxC,QAAO,SAAUgF,GACtD,GAAI9H,IAAO8H,EAAQ9H,GACjB,OAAO8H,KAIXvC,EAAe,YAAI4C,IACnBhM,aAAasB,QAAQ,eAAgBxB,KAAKyB,UAAUyK,KA6BhD,SAIE,cAAC,IAAD,OAGc,IAAfR,EACC,cAAC,IAAD,CAAM7M,GAAG,kBAAT,SACE,wBACEE,UAAU,gCACVC,QArCc,WACxB+M,GAAoB,GAIpB,IAAMG,EAAqB7C,EAAYxC,QAAO,SAAUgF,GAItD,OAHI9H,IAAO8H,EAAQ9H,KACjB8H,EAAQJ,WAAY,GAEfI,KAGTvC,EAAe,YAAI4C,IACnBhM,aAAasB,QAAQ,eAAgBxB,KAAKyB,UAAUyK,IAEpDF,EAAkBvN,EAAMoN,UAoBhB,SAIE,cAAC,IAAD,QAIJ,2BAGJ,sBAAK9M,UAAU,uBAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,mBAAGA,UAAU,mCAAb,uBACgB,IAAf2M,EACC,mBAAG3M,UAAU,iFAAb,uBAGuB,IAArB+M,EACF,mBAAG/M,UAAU,gFAAb,qBAIA,mBAAGA,UAAU,oCAAb,4BAGJ,sBAAKA,UAAU,6BAAf,UACE,mBAAGA,UAAU,mCAAb,uBACA,oBAAGA,UAAU,oCAAb,UACG4M,EADH,IACqBL,eC3GhB,MAA0B,0CC+E1Ba,MAlEf,YAAgE,IAAtCF,EAAqC,EAArCA,eAAgBD,EAAqB,EAArBA,kBACxC,EAAoClJ,mBAAS,IAA7C,mBAAKuG,EAAL,KAAkBC,EAAlB,KACAvJ,qBAAU,WACRuJ,EAAe,YACVtJ,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,UAEvD,IAEH,MAA0C2C,mBAAS,IAAnD,mBAAOsJ,EAAP,KAAsB7C,EAAtB,KAYA,OACE,cAAC,IAAD,UACE,qBAAKxK,UAAU,eAAf,SACE,sBAAKA,UAAU,eAAf,UACE,yBAAQA,UAAU,uBAAlB,UACE,oBAAIA,UAAU,UAAd,sBACA,oBACED,KAAK,qBACLC,UAAU,WACVC,QAnBgB,WAC1BuK,EACE,cAAC,EAAD,CACEF,YAAaA,EACbC,eAAgBA,EAChBC,iBAAkBA,MAWd,UAKE,6CACA,cAAC,IAAD,CAASxK,UAAU,yBAItBqN,EAEuB,IAAvB/C,EAAYjJ,OACX,cAAC,EAAD,CACE8G,MAAOmF,EACPzN,KAAK,+CACLgB,IAAI,gBACJoH,OAAQ,MAGV,oBAAInH,MAAM,YAAV,SACGgC,EAAawH,GAAa3F,KAAI,SAAUmI,GACvC,OACE,cAAC,EAAD,CACEA,QAASA,EACTxC,YAAaA,EACbC,eAAgBA,EAChB2C,eAAgBA,EAChBD,kBAAmBA,iBCjElBM,E,kDACnB,WAAY7N,GAAQ,IAAD,8BACjB,gBACKC,MAAQ,CACXqH,KAAMtH,EAAMsH,MAHG,E,0CAOnB,WACE,OACE,sBAAKhH,UAAU,eAAf,UACE,oBAAIA,UAAU,wBAAd,0BACA,oBAAIA,UAAU,qBAAd,SAAoCE,KAAKP,MAAMqH,c,GAZd7G,aCF1B,OAA0B,sCCsP1BqN,OAlPf,SAAe9N,GACb,IAAM4B,EAAYL,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAAM,GAClEkH,EAAYrH,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAC5DS,EAAO,IAAIrB,KAEjB,EAA8BuD,mBAASrE,EAAM0M,YAA7C,mBAAOqB,EAAP,KAAgBC,EAAhB,KACA,EAA8B3J,mBAAS,GAAvC,mBAAO4J,EAAP,KAAgBC,EAAhB,KACA,EAA8B7J,mBAAS,GAAvC,mBAAO8J,EAAP,KAAgBC,EAAhB,KAEA,EAAwC/J,mBAASrE,EAAMqO,cAAvD,mBAAOA,EAAP,KAAqBC,EAArB,KACA,EAAsCjK,mBAASrE,EAAMuO,QAArD,mBAAOC,EAAP,KAEA,GAFA,KAEkCnK,oBAAS,IAA3C,mBAAOoK,EAAP,KAAkBC,EAAlB,KACA,EAAkCrK,oBAAS,GAA3C,mBAAOsK,EAAP,KAAkBC,EAAlB,KAGA,EAAsCvK,mBAAS,GAA/C,mBAAOwK,EAAP,KAAoBC,EAApB,KACA,EAAoCzK,mBAAS,YAAIzC,EAAUO,KAAKE,aAAhE,mBAAOA,EAAP,KAAmB0M,EAAnB,KAEQrC,EAAsC1M,EAAtC0M,WAAYC,EAA0B3M,EAA1B2M,WAAYC,EAAc5M,EAAd4M,UACxBY,EAAsCxN,EAAtCwN,eAAgBD,EAAsBvN,EAAtBuN,kBAChByB,EAA4BhP,EAA5BgP,UAAWC,EAAiBjP,EAAjBiP,aACXC,EAAsBlP,EAAtBkP,kBAsKR,OApKA5N,qBAAU,WACR,IAAI6N,EAuHJ,OArHkB,IAAdV,IACFS,GAAkB,GAClBC,EAAaC,aAAY,WACvB,GAAgB,IAAZnB,EAAe,CACjB,GAAgB,IAAZF,EAeG,CAIL,GAHiB,IAAIsB,MAAMC,IAClBC,QAES,IAAdP,EAAoB,CACtBxB,EAAeN,gBAAkBmB,EAAe,EAChDd,EAAkBC,GAClBc,GAAgB,SAACD,GAAD,OAAkBA,EAAe,KACjDO,GAAa,GACbK,GAAa,GAETZ,EAAe,GAAKG,IACtBhB,EAAeP,YAAa,GAK9B,IAAMuC,EAAmB5G,EAAU3D,KAAI,SAAUqC,GAI/C,OAHIA,EAAKN,SAAWwG,EAAeT,SACjCzF,EAAKZ,gBAAkB,GAElBY,KAGT7F,aAAasB,QACX,YACAxB,KAAKyB,UAAUwM,IAIjB,IAEMC,EAFWlO,KAAKC,MAAMC,aAAaC,QAAQ,aAEhBuD,KAAI,SAAUc,GAE7C,GADA6D,QAAQC,IAAI9D,EAAKyH,GACbzH,EAAIV,OAASmI,EAAezH,IAAK,CAEnCnE,EAAUO,KAAKC,iBAAmByM,EAGlC,IAAIhM,EAAajB,EAAUgB,KAAKC,WAChC,GAAkB,KAAdA,EAAmB,CAErBA,GADU,IAAI/B,MACC4O,eACf9N,EAAUgB,KAAKC,WAAaA,MACvB,CACL,IACM8M,GADI,IAAI7O,MACE4O,eACVE,EAAO9O,KAAKU,MAAMmO,GAAS7O,KAAKU,MAAMqB,GACxC8M,IAAU9M,IACR+M,GAAQ,MACVhO,EAAUgB,KAAKE,QAAU,EAEzBlB,EAAUgB,KAAKE,OAAS,EAE1BlB,EAAUgB,KAAKC,WAAa8M,GAIhC,IAAMvI,EAAmB,GACzBwC,QAAQC,IAAIxH,GACZT,EAAUO,KAAKE,WAAaA,EAC5B+E,EAAiBf,KAAKzE,GACtBH,aAAasB,QACX,YACAxB,KAAKyB,UAAUoE,IAGjBrB,EAAIgE,aAAehE,EAAIgE,aAAe8E,EACtCC,EAAe,GAEjB,OAAO/I,KAGTtE,aAAasB,QAAQ,WAAYxB,KAAKyB,UAAUyM,IAIlD,YADAf,GAAa,GA1FbV,EAAWD,EAAU,GACrBG,EAAW,KAEO,IAAdc,IACFF,EAAeD,EAAc,GAC7BE,EACE1M,EAAW4C,KAAI,SAAU4K,EAAMC,GAC7B,OAAIA,GAAK3N,EAAKpB,WACL8O,EAAO,EAETA,YAoFf3B,EAAWD,EAAU,IACH,IAAde,IACFF,EAAeD,EAAc,GAC7BE,EACE1M,EAAW4C,KAAI,SAAU4K,EAAMC,GAC7B,OAAIA,GAAK3N,EAAKpB,WACL8O,EAAO,EAETA,OAMfzB,GAAW,SAACD,GAAD,OAAaA,EAAU,OACjC,MAGE,WACL4B,cAAcZ,MAEf,CAACV,EAAWN,IA0Cb,sBAAK7N,UAAU,QAAf,UACE,qBAAIA,UAAU,eAAd,UACGyN,EAAU,GAAK,IAAM,GACrBA,EAFH,IAEaE,EAAU,GAAK,IAAM,GAC/BA,KAEH,oBAAG3N,UAAU,iBAAb,UACG+N,EADH,IACkBG,KAElB,sBAAKlO,UAAU,sBAAf,UACE,mBACED,KAAK,qBACLC,UAAU,uBACVC,QArDY,YACgB,IAA9BiN,EAAeP,YAAoC,GAAb0B,GACxCD,GAAa,IAgDX,mBAOA,mBACErO,KAAK,qBACLC,UAAU,uBACVC,QAtDY,YACgB,IAA9BiN,EAAeP,YACjByB,GAAa,IAiDX,sBASF,sBAAKtN,MAAM,qBAAX,UACE,mBACEf,KAAK,qBACLC,UAAU,oBACVC,QA1De,YACH,IAAdkO,IACFQ,GAAa,GACbjB,EAAWtB,GACXwB,EAAW,GACXU,GAAa,KAkDX,SAKE,4CAEF,mBACEvO,KAAK,qBACLC,UAAU,oBACVC,QAxDiB,YACL,IAAdkO,IACFQ,GAAa,GACbjB,EAAWrB,GACXuB,EAAW,GACXU,GAAa,KAgDX,SAKE,+CAEF,mBACEvO,KAAK,qBACLC,UAAU,oBACVC,QAtDgB,YACJ,IAAdkO,IACFQ,GAAa,GACbjB,EAAWpB,GACXsB,EAAW,GACXU,GAAa,KA8CX,SAKE,qD,oBClNKoB,OA1Bf,WACE,OACE,qBAAK1P,UAAU,UAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,yBAAb,+CAGA,sBAAKA,UAAU,wBAAf,UACE,cAAC,IAAD,CACEF,GAAG,mBACHE,UAAU,uEAFZ,uBAMA,cAAC,IAAD,CACEF,GAAG,4BACHE,UAAU,qEAFZ,8BCkEK2P,OA3Ef,YAA2D,IAAtCzC,EAAqC,EAArCA,eAAgBD,EAAqB,EAArBA,kBACnCjM,qBAAU,WACR,OAAO,WACL,IAIM4O,EAJe3O,KAAKC,MACxBC,aAAaC,QAAQ,iBAAmB,MAGDuD,KAAI,SAAUmI,GACrD,OAAII,EAAelI,KAAO8H,EAAQ9H,GACzBkI,EAEFJ,KAGT3L,aAAasB,QAAQ,eAAgBxB,KAAKyB,UAAUkN,OAErD,IAEH,IACExD,EAKEc,EALFd,WACAC,EAIEa,EAJFb,WACAC,EAGEY,EAHFZ,UACiByB,EAEfb,EAFFN,gBACWqB,EACTf,EADFX,UAGF,EAAkCxI,oBAAS,GAA3C,mBAAO2K,EAAP,KAAkBC,EAAlB,KACA,EAA4C5K,oBAAS,GAArD,mBAAO8L,EAAP,KAAuBjB,EAAvB,KAEA,OACE,cAAC,IAAD,UACE,sBAAK5O,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,IAAD,CACEF,GAAE,WACmB,IAAnB+P,EACI,4BACA,iCAJR,SAOE,cAAC,KAAD,QAIJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAO1F,KAAK,gCAAZ,SACE,cAAC,GAAD,SAIW,IAAduE,EACC,cAAC,EAAD,CAAa1H,KAAMkG,EAAelG,OAElC,sBAAKhH,UAAU,aAAf,UACE,4CACA,kDAGJ,cAAC,GAAD,CACEoM,WAAYA,EACZC,WAAYA,EACZC,UAAWA,EACXyB,aAAcA,EACdE,OAAQA,EACRf,eAAgBA,EAChBD,kBAAmBA,EACnByB,UAAWA,EACXC,aAAcA,EACdC,kBAAmBA,UC5CdkB,OA1Bf,WAEE,MAA4C/L,mBAAS,IAArD,mBAAOmJ,EAAP,KAAuBD,EAAvB,KAEA,OACE,cAAC,IAAD,UACE,qBAAKjN,UAAU,WAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmK,KAAK,4BAAZ,SACE,cAAC,EAAD,CACE+C,eAAgBA,EAChBD,kBAAmBA,MAGvB,cAAC,IAAD,CAAO9C,KAAK,kBAAZ,SACE,cAAC,GAAD,CACE+C,eAAgBA,EAChBD,kBAAmBA,c,iBCuFlB8C,OAzGf,SAAyBrQ,GACvB,MAAkCqE,mBAAS,IAA3C,mBAAOiM,EAAP,KAAkBC,EAAlB,KACA,EAA8BlM,mBAAS,IAAvC,mBAAOmM,EAAP,KAAgBC,EAAhB,KACA,EAAoCpM,mBAAS,IAA7C,mBAAOqM,EAAP,KAAmBC,EAAnB,KACA,EAAgDtM,mBAAS,IAAzD,mBAAOuM,EAAP,KAAyBC,EAAzB,KA6BA,OA3BAvP,qBAAU,WACR,IAAM8H,EAAU7H,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAE/D6O,EACEnH,EAAQnE,KAAI,SAAUc,GACpB,OAAOA,EAAIV,SAIfoL,EACErH,EAAQnE,KAAI,SAAUc,GACpB,OAAOA,EAAIgE,aAAe,OAI9B4G,EACEvH,EAAQnE,KAAI,SAAUc,GACpB,OAAOA,EAAI2B,OAAS,SAGxBmJ,EACEzH,EAAQnE,KAAI,SAAUc,GACpB,OAAOA,EAAI2B,aAGd,IAGD,qBAAKpH,UAAU,mBAAf,SACE,cAAC,KAAD,CAMEiI,OAAQ,IACRC,MAAO,IACP+B,KAAM,CACJuG,OAAQR,EACRS,SAAU,CACR,CACExG,KAAMiG,EACNtG,gBAAiBwG,EACjBM,YAAaJ,EACbK,YAAa,KA8BnBC,QAAS,CACPC,YAAY,EACZC,OAAQ,CACNC,QAAS,GAEXC,QAAS,CACPC,OAAQ,CACNC,SAAU,MACVC,SAAU,IACVX,OAAQ,CACNY,SAAU,GACVC,UAAW,KAGflF,MAAO,CACLmF,SAAS,EACTzR,KAAM,2BC1FL0R,OATf,SAAmB7R,GACjB,OACE,sBAAKM,UAAU,OAAf,UACE,mBAAGA,UAAU,aAAb,SAA2BN,EAAMqF,OACjC,oBAAI/E,UAAU,cAAd,SAA6BN,EAAM2F,YCN1B,OAA0B,kD,gFC0F1BmM,OArFf,SAAuB9R,GACrBsB,qBAAU,WACUC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAAM,KACvE,IAEH,IAII+F,EAJEsK,EAAM/R,EAAMgS,iBACZlK,EAAWmK,WAAWF,GAAK5K,QAAQ,GACnC+K,EAAe,CAACpK,EAAU,IAAMA,GAetC,OAVIA,GAAY,KACdL,EAAQ,yBAENK,GAAY,IAAMA,EAAW,KAC/BL,EAAQ,yBAENK,EAAW,KACbL,EAAQ,yBAIR,sBAAKnH,UAAU,iBAAf,UACE,qBAAIA,UAAU,wBAAd,UACGwH,EACY,OAAZA,EAAoB,GAAK,OAE5B,cAAC,KAAD,CAMES,OAAQ,IACRC,MAAO,IAYP+B,KAAM,CACJuG,OAAQ,CAAC,GAAI,IACbC,SAAU,CACR,CACEoB,MAAO,aACP5H,KAAM2H,EACNhI,gBAAiB,CAACzC,EA3CP,yBA4CXuJ,YAAa,CAAC,WACdC,YAAa,KAInBC,QAAS,CACPkB,OAAQ,GACRjB,YAAY,EACZC,OAAQ,CACNC,QAAS,GAEXC,QAAS,CACPC,OAAQ,CACNK,SAAS,EACTJ,SAAU,MACVC,SAAU,IACVX,OAAQ,CACNY,SAAU,GACVC,UAAW,KAGfU,QAAS,CACPC,SAAS,W,oBCkCRC,OAhHf,WACE,IACMlQ,EADYd,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAAM,GAC3CS,KAAKE,WAE5BmQ,EAAQvL,KAAKkF,IAAIsG,MAAMxL,KAAM5E,GAAc,IAC3CqQ,EAAOrQ,EAAWV,OACpBmO,EAAI,EAER,IAAKA,EAAI,EAAGA,EAAI4C,EAAM5C,IACpBzN,EAAWyN,GAAK7I,KAAK0L,MAAMtQ,EAAWyN,GAAK0C,GAG7C,OACE,qBAAKlS,UAAU,oBAAf,SACE,cAAC,KAAD,CAMEiI,OAAQ,IACRC,MAAO,IAYP+B,KAAM,CACJuG,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEFC,SAAU,CACR,CACExG,KAAMlI,EACN6H,gBAAiB,CAAC,WAClB+G,YAAa,KAInBC,QAAS,CACP0B,OAAQ,CACNC,EAAG,CACDpG,MAAO,CACLmF,SAAS,GAEX1F,IAAK,EACLC,IAAK,GACL2G,KAAM,CACJlB,SAAS,IAGbmB,EAAG,CACDnB,SAAS,EACTkB,KAAM,CACJlB,SAAS,KAIfT,YAAY,EACZC,OAAQ,CACNC,QAAS,GAEXC,QAAS,CACPC,OAAQ,CACNK,SAAS,EACTJ,SAAU,MACVC,SAAU,IACVX,OAAQ,CACNY,SAAU,GACVC,UAAW,KAGflF,MAAO,CACLmF,SAAS,EACTzR,KAAM,2BCgFL6S,OA1Kf,WACE,MAAgC3O,oBAAS,GAAzC,mBAAO4O,EAAP,KAAiBC,EAAjB,KAEA,EAA4C7O,mBAAS,KAArD,mBAAOrC,EAAP,KAAuBmR,EAAvB,KACA,EAA8C9O,mBAAS,KAAvD,mBAAOpC,EAAP,KAAwBmR,EAAxB,KACA,EAA0C/O,mBAAS,KAAnD,mBAAOgP,EAAP,KAAsBC,EAAtB,KACA,EAAwCjP,mBAAS,KAAjD,mBAAO1B,EAAP,KAAqB4Q,EAArB,KACA,EAAgDlP,mBAAS,KAAzD,mBAAOmP,EAAP,KAAyBC,EAAzB,KACA,EAAgDpP,mBAAS,OAAzD,mBAAO2N,EAAP,KAAyB0B,EAAzB,KACA,EAA4BrP,mBAAS,GAArC,mBAAOvB,EAAP,KAAe6Q,EAAf,KAEMC,EAAa,CACjBC,SAAU,GACVtR,KAAM,WAgER,OA7DAjB,qBAAU,WAE8B,GADpBC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAAM,GAC1DS,KAAKC,iBACjB8Q,GAAY,KAEb,IAGH5R,qBAAU,WACR,IAAMM,EAAYL,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,IAAI,GACtE,GAAsC,GAAlCE,EAAUC,MAAMG,eAAqB,CACvC,IAAM+P,EAAuC,IAAjCnQ,EAAUC,MAAMG,eAC5BmR,EAAkBpB,EAAI5K,QAAQ,IAEhC,GAAsC,GAAlCvF,EAAUC,MAAME,eAAqB,CACvC,IAAI+R,EACFlS,EAAUO,KAAKC,gBAAkBR,EAAUC,MAAME,eACnD+R,GAAsB,KAEtBlS,EAAUC,MAAMI,gBAAkB6R,EAGhCV,EADEU,EAAW,EACMA,EAAS3M,QAAQ,GAEjB2M,EAAS3M,QAAQ,IAGxC,GAAsC,GAAlCvF,EAAUO,KAAKC,gBAAsB,CACvC,IAAMC,EAAaT,EAAUO,KAAKC,gBAAkB,KAGlDqR,EADEpR,EAAa,EACKA,EAAW8E,QAAQ,GAEnB9E,EAAW8E,QAAQ,IAc3C,GAVuC,GAAnCvF,EAAUY,SAASC,eACrB6Q,EAAiB1R,EAAUY,SAASC,cACpC8Q,EAAgB3R,EAAUY,SAASG,eAGR,GAAzBf,EAAUgB,KAAKE,QACjB6Q,EAAU/R,EAAUgB,KAAKE,QAIyB,IAAhDlB,EAAUC,MAAMK,qBAAqBP,OAAc,CACrD,IAAMoS,EAAgBnS,EAAUC,MAAMK,qBAChC8R,EACJD,EAAcE,QAAO,SAAUC,EAAOC,GACpC,OAAOD,EAAQC,IACd,GAAKJ,EAAcpS,OACxB+R,EAAoBM,GAGtB,IAAM5M,EAAmB,GACzBA,EAAiBf,KAAKzE,GACtBH,aAAasB,QAAQ,YAAaxB,KAAKyB,UAAUoE,MAChD,IAGD,sBAAK9G,UAAU,eAAf,UACE,wBAAQA,UAAU,uBAAlB,SACE,oBAAIA,UAAU,UAAd,sBAGY,IAAb2S,EACC,sBAAK3S,UAAU,aAAf,UACE,sBAAKA,UAAU,aAAagF,GAAG,mBAA/B,UACE,yBAAQhF,UAAU,qBAAlB,UACE,cAAC,KAAD,CAAcsH,MAAOgM,IACrB,oBAAItT,UAAU,8BAAd,iCAEF,cAAC,GAAD,OAGF,sBAAKA,UAAU,aAAagF,GAAG,mBAA/B,UACE,yBAAQhF,UAAU,qBAAlB,UACE,cAAC,KAAD,CAAcsH,MAAOgM,IACrB,oBAAItT,UAAU,8BAAd,iCAEF,cAAC,GAAD,OAGF,sBAAKA,UAAU,aAAagF,GAAG,cAA/B,UACE,yBAAQhF,UAAU,qBAAlB,UACE,cAAC,KAAD,CAAwBsH,MAAOgM,IAC/B,oBAAItT,UAAU,8BAAd,sBAEF,cAAC,GAAD,CACE+E,KAAK,kBACLM,MAAK,UAAK3D,GAAL,OAAyC,MAAnBA,EAAyB,GAAK,OAE3D,cAAC,GAAD,CACEqD,KAAK,qBACLM,MAAK,UAAK1D,GAAL,OACiB,MAApBA,EAA0B,GAAK,aAKrC,sBAAK3B,UAAU,aAAagF,GAAG,gBAA/B,UACE,yBAAQhF,UAAU,qBAAlB,UACE,cAAC,KAAD,CAAcsH,MAAOgM,IACrB,oBAAItT,UAAU,8BAAd,yBAEF,cAAC,GAAD,CAAW+E,KAAK,iBAAiBM,MAAO0N,IACxC,cAAC,GAAD,CAAWhO,KAAK,iBAAiBM,MAAOhD,OAG1C,sBAAKrC,UAAU,aAAagF,GAAG,iBAA/B,UACE,yBAAQhF,UAAU,qBAAlB,UACE,cAAC,KAAD,CAAesH,MAAOgM,IACtB,oBAAItT,UAAU,8BAAd,yBAEF,cAAC,GAAD,CACE+E,KAAK,qBACLM,MAAK,UAAK6N,GAAL,OACkB,MAArBA,EAA2B,GAAK,UAGpC,cAAC,GAAD,CACEnO,KAAK,aACLM,MAAK,UAAK7C,EAAL,eAA4B,GAAVA,EAAc,GAAK,UAI9C,sBAAKxC,UAAU,aAAagF,GAAG,oBAA/B,UACE,yBAAQhF,UAAU,qBAAlB,UACE,cAAC,KAAD,CAAkBsH,MAAOgM,IACzB,oBAAItT,UAAU,8BAAd,6CAIF,mBAAGA,UAAU,2BAAb,iGAIA,cAAC,GAAD,CAAe0R,iBAAkBA,UAIrC,cAAC,EAAD,CACEvJ,MAAO2L,GACPjU,KAAK,iEACLgB,IAAI,kCACJoH,OAAQ,U,oFCnLH,OAA0B,6DCsI1B8L,OA3Hf,SAAoBrU,GAClB,IAAM4T,EAAa,CACjBC,SAAU,GACVtR,KAAM,WAGF+R,EAAmB,CACvBT,SAAU,GACVtR,KAAM,WAGFgS,EAAWC,cAAcC,SAG/B,OAFA7K,QAAQC,IAAI0K,GAGV,sBAAKjU,UAAS,sBAAiBN,EAAMsI,QAArC,UACE,oBAAIhI,UAAU,uBAAd,kBACA,qBAAIA,UAAU,oBAAd,UACE,qBAAIA,UAAU,0BAAd,UACE,cAAC,KAAD,CAAUsH,MAAmB,KAAZ2M,EAAkBD,EAAmBV,IACtD,cAAC,IAAD,CAAMxT,GAAG,IAAT,SACE,mBACEE,UAAS,wCACK,KAAZiU,EAAkB,wCAA0C,IAE9DhU,QAASP,EAAM0U,gBAJjB,uBAUJ,qBAAIpU,UAAU,0BAAd,UACE,cAAC,KAAD,CACEsH,MACc,6BAAZ2M,EACID,EACAV,IAGR,cAAC,IAAD,CAAMxT,GAAG,4BAAT,SACE,mBACEE,UAAS,wCACK,6BAAZiU,EACI,wCACA,IAENhU,QAASP,EAAM0U,gBANjB,2BAYJ,qBAAIpU,UAAU,0BAAd,UACE,cAAC,KAAD,CACEsH,MACc,uBAAZ2M,GACY,iCAAZA,EACID,EACAV,IAGR,cAAC,IAAD,CAAMxT,GAAG,sBAAT,SACE,mBACEE,UAAS,wCACK,uBAAZiU,GACY,iCAAZA,EACI,wCACA,IAENhU,QAASP,EAAM0U,gBAPjB,wBAaJ,qBAAIpU,UAAU,0BAAd,UACE,cAAC,KAAD,CACEsH,MACc,sBAAZ2M,EAAmCD,EAAmBV,IAG1D,cAAC,IAAD,CAAMxT,GAAG,qBAAT,SACE,mBACEE,UAAS,wCACK,sBAAZiU,EACI,wCACA,IAENhU,QAASP,EAAM0U,gBANjB,uBAYJ,qBAAIpU,UAAU,0BAAd,UACE,cAAC,KAAD,CACEsH,MAAmB,UAAZ2M,EAAuBD,EAAmBV,IAEnD,cAAC,IAAD,CAAMxT,GAAG,SAAT,SACE,mBACEE,UAAS,wCACK,UAAZiU,EACI,wCACA,IAENhU,QAASP,EAAM0U,gBANjB,2BAaN,qBAAKpU,UAAU,gBACf,qBACEW,IAAK0T,GACLxT,IAAI,8BACJb,UAAU,uBAEZ,oBAAIA,UAAU,oBAAd,0BCtHSsU,OATf,SAAiB5U,GACf,OACE,qBACEM,UAAS,kBAAaN,EAAMsI,QAC5B/H,QAASP,EAAM6U,sBCsDNC,OA/Cf,WACE,IAmBIC,EACAC,EApBJ,EAAgD3Q,oBAAS,GAAzD,mBAAO4Q,EAAP,KAAyBC,EAAzB,KAEMC,EAAiB,WAErBD,GADaD,IA2Bf,OARyB,IAArBA,GACFF,EAAkB,oBAClBC,EAAe,kBACe,IAArBC,IACTF,EAAkB,qBAClBC,EAAe,kBAIf,sBAAK1U,UAAU,OAAf,UACE,cAAC,GAAD,CAAYgI,OAAQyM,EAAiBL,gBArBjB,WACtBS,OAqBE,cAAC,GAAD,CAASN,mBAlBc,WACzBM,KAiBmD7M,OAAQ0M,IAEzD,cAAC,EAAD,CAAc9R,oBA5BU,WAC1BiS,OA6BE,cAAC,IAAD,CAAO1K,KAAK,IAAI2K,OAAK,EAAC1K,UAAWrJ,IACjC,cAAC,IAAD,CAAOoJ,KAAK,gBAAgBC,UAAWF,IACvC,cAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAWgD,IAC1C,cAAC,IAAD,CAAOjD,KAAK,YAAYC,UAAW0F,KACnC,cAAC,IAAD,CAAO3F,KAAK,SAASC,UAAWsI,SCjDtCqC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6eb5b150.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      handleClick: props.handleClick,\r\n      text: props.text,\r\n      to: props.to,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        className=\"button button--basic\"\r\n        onClick={this.state.handleClick}\r\n        to={this.state.to}\r\n      >\r\n        {this.props.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/illustration-working-brown.24887bc9.svg\";","import React, { Component } from \"react\";\r\n\r\nimport HeroBoxImage from \"../../images/illustration-working-brown.svg\";\r\n\r\nexport default class HeroBox extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      greeting: \"\",\r\n      userName: \"Stranger\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var d = new Date();\r\n    const hour = d.getHours();\r\n\r\n    if (hour >= 0 && hour < 12) {\r\n      this.setState({\r\n        greeting: \"Good Morning\",\r\n      });\r\n    } else if (hour >= 12 && hour < 16) {\r\n      this.setState({\r\n        greeting: \"Good Afternoon\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        greeting: \"Good Evening\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero-box\">\r\n        <h3 className=\"greeting\">{this.state.greeting}</h3>\r\n        {/* <h2 className=\"user-name\">{this.state.userName}</h2> */}\r\n        <img\r\n          src={HeroBoxImage}\r\n          alt=\"Girl looking at computer, being productive\"\r\n          className=\"hero-box__image\"\r\n        />\r\n        <p className=\"hero-box__description\">\r\n          Pomodoro will make your work easier and more\r\n          <span class=\"bold-text\"> productive</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../Button\";\r\nimport HeroBox from \"./HeroBox\";\r\n\r\nfunction HomePage() {\r\n  useEffect(() => {\r\n    const tempStatsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\");\r\n    if (tempStatsData.length === 0) {\r\n      const statsData = [\r\n        {\r\n          tasks: {\r\n            totalTasks: 0,\r\n            completedTasks: 0,\r\n            taskCompletion: 0,\r\n            avgTaskDuration: 0,\r\n            taskEstimateAccuracy: [],\r\n          },\r\n          time: {\r\n            totalActiveTime: 0,\r\n            totalHours: Array(24).fill(0),\r\n          },\r\n          sessions: {\r\n            totalSession: 0,\r\n            totalIntervals: 0,\r\n            avgIntervals: 0,\r\n          },\r\n          days: {\r\n            currentDay: \"-\",\r\n            streak: 1,\r\n          },\r\n        },\r\n      ];\r\n      localStorage.setItem(\"statsData\", JSON.stringify(statsData));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <HeroBox />\r\n      <div class=\"homepage__buttons\">\r\n        <Link to=\"/pomodoro/session-manager\">\r\n          <Button text=\"Start\" />\r\n        </Link>\r\n        <Link to=\"/task-manager/tasks\">\r\n          <Button text=\"View Tasks\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class MobileNavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidemenuClickHandle: props.sidemenuClickHandle,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"mobile-navbar\">\r\n          <div className=\"app-name\">\r\n            <Link to=\"/\">\r\n              <h1>Pomodoro</h1>\r\n            </Link>\r\n          </div>\r\n          <a\r\n            href=\"javascript:void(0)\"\r\n            className=\"hamburger-menu\"\r\n            onClick={this.state.sidemenuClickHandle}\r\n          >\r\n            <img\r\n              src=\"https://img.icons8.com/material-outlined/24/000000/menu--v1.png\"\r\n              alt=\"Hamburger Menu Icon\"\r\n              className=\"hamburger-menu__icon\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class TaskNavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"task-nav-bar\">\r\n        <ul className=\"task-nav-bar__list\">\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/tasks\"\r\n            >\r\n              Tasks\r\n            </Link>\r\n          </li>\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/completed-tasks\"\r\n            >\r\n              Completed\r\n            </Link>\r\n          </li>\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/tags\"\r\n            >\r\n              Tags\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","// a function that takes an array and returns a\r\n// reverse array without affecting the original one\r\n\r\nconst reverseArray = function (array) {\r\n  // a copy of the original array\r\n  const reversedArray = [...array];\r\n\r\n  // reversing the copy array\r\n  reversedArray.reverse();\r\n\r\n  return reversedArray;\r\n};\r\n\r\nexport default reverseArray;\r\n","function getOrdinalNum(day) {\r\n  var n = Number(day);\r\n  return (\r\n    n +\r\n    (n > 0\r\n      ? [\"th\", \"st\", \"nd\", \"rd\"][(n > 3 && n < 21) || n % 10 > 3 ? 0 : n % 10]\r\n      : \"\")\r\n  );\r\n}\r\nconst getDate = function () {\r\n  const date = new Date();\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = date.toLocaleString(\"default\", { month: \"long\" });\r\n  return getOrdinalNum(day) + \", \" + month;\r\n};\r\n\r\nexport { getDate };\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { getDate } from \"./Dates\";\r\n\r\nimport isNumeric from \"../functions/isNumeric\";\r\n\r\nfunction CreateTask({ tasks, setCreateTask }) {\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n  // console.log(statsData);\r\n\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [taskTag, setTaskTag] = useState(\"\");\r\n  const [taskEstimate, setTaskEstimate] = useState(\"\");\r\n  const [taskDesc, setTaskDesc] = useState(\"\");\r\n  const [taskTagsData, setTaskTagsData] = useState([...tagsData]);\r\n  const [errorMessage, setErrorMessage] = useState([]);\r\n\r\n  const closeButtonHandle = function () {\r\n    setCreateTask(\"\");\r\n  };\r\n\r\n  // for form validation\r\n  const [isValidForm, setIsValidForm] = useState(false);\r\n\r\n  const taskNameHandle = function (e) {\r\n    setTaskTitle(e.target.value);\r\n  };\r\n\r\n  const taskTagHandle = function (e) {\r\n    setTaskTag(e.target.value);\r\n  };\r\n\r\n  const taskEstimateHandle = function (e) {\r\n    setTaskEstimate(e.target.value);\r\n  };\r\n\r\n  const taskDescHandle = function (e) {\r\n    setTaskDesc(e.target.value);\r\n  };\r\n\r\n  const taskSubmitHandle = function (e) {\r\n    e.preventDefault();\r\n\r\n    let valid = true;\r\n    const errors = [];\r\n    setErrorMessage(errors);\r\n\r\n    if (taskTitle === \"\") {\r\n      errors.push(\"You need to enter a Task Name\");\r\n      valid = false;\r\n    }\r\n    if (taskTag === \"\") {\r\n      errors.push(\"You need to choose a Tag\");\r\n      valid = false;\r\n    }\r\n    if (taskEstimate === \"\") {\r\n      errors.push(\"Task Estimate should be a valid number\");\r\n      valid = false;\r\n    }\r\n\r\n    if (parseInt(taskEstimate) < 1) {\r\n      errors.push(\"Task Estimate can't be less than 1\");\r\n      valid = false;\r\n    }\r\n    if (parseInt(taskEstimate) > 15) {\r\n      errors.push(\"Task Estimate can't be more than 15 ;)\");\r\n      valid = false;\r\n    }\r\n    if (valid === true) {\r\n      const obj = {};\r\n      obj.task_title = taskTitle;\r\n      obj.task_tag = taskTag;\r\n      obj.task_intervals = 0;\r\n      obj.task_estimate = taskEstimate;\r\n      obj.task_desc = taskDesc;\r\n      obj.task_isCompleted = false;\r\n      obj.task_startDate = getDate();\r\n      obj.task_endDate = \"-\";\r\n      obj.task_id = Math.random() * 100;\r\n\r\n      // storing the new task in localStorage\r\n      tasks.push(obj);\r\n      localStorage.setItem(\"tasksData\", JSON.stringify(tasks));\r\n      // submitTaskHandle(tasks);\r\n\r\n      // updating stats in localStorage\r\n      statsData.tasks.totalTasks += 1;\r\n      const taskCompletion =\r\n        statsData.tasks.completedTasks / statsData.tasks.totalTasks;\r\n      statsData.tasks.taskCompletion = taskCompletion.toFixed(3);\r\n      const updatedStatsData = [];\r\n      updatedStatsData.push(statsData);\r\n      localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n      setCreateTask(\"\");\r\n\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(errors);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-create\">\r\n      <header className=\"task-create__header\">\r\n        <h4 className=\"task-create__heading\">Create Task</h4>\r\n        <a href=\"javascript:void(0)\" onClick={closeButtonHandle}>\r\n          <CloseIcon className=\"close-icon\" />\r\n        </a>\r\n      </header>\r\n\r\n      <ul className=\"errors\">\r\n        {errorMessage.map(function (error) {\r\n          return <li className=\"errors__message\">{error}</li>;\r\n        })}\r\n      </ul>\r\n\r\n      <form className=\"task-create__form\">\r\n        <label htmlFor=\"ttitle\" className=\"task-create__form__label\">\r\n          Task Title <span className=\"important-asterisk\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"tasktitle\"\r\n          id=\"ttitle\"\r\n          placeholder=\"Your Task Title\"\r\n          className=\"input__text\"\r\n          onChange={taskNameHandle}\r\n        />\r\n        <label htmlFor=\"ttag\" className=\"task-create__form__label\">\r\n          Tag <span className=\"important-asterisk\">*</span>\r\n        </label>\r\n        <select\r\n          name=\"tasktag\"\r\n          id=\"ttag\"\r\n          className=\"task-create__form__select\"\r\n          onChange={taskTagHandle}\r\n        >\r\n          <option value=\"\" selected disabled hidden></option>\r\n\r\n          {taskTagsData.length === 0 ? (\r\n            <option disabled>Make some Tags</option>\r\n          ) : (\r\n            taskTagsData.map(function (tag) {\r\n              return (\r\n                <option value={`${tag.name}`} id={tag.id}>\r\n                  {tag.name}\r\n                </option>\r\n              );\r\n            })\r\n          )}\r\n        </select>\r\n        <label htmlFor=\"testimate\" className=\"task-create__form__label\">\r\n          Estimated Intervals to Complete{\" \"}\r\n          <span className=\"important-asterisk\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"taskestimate\"\r\n          id=\"testimate\"\r\n          placeholder=\"Intervals\"\r\n          className=\"input__number\"\r\n          onChange={taskEstimateHandle}\r\n        />\r\n\r\n        <label htmlFor=\"tdescription\" className=\"task-create__form__label\">\r\n          Description\r\n        </label>\r\n        <textarea\r\n          name=\"taskdescription\"\r\n          id=\"tdescription\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"Description for your Task...\"\r\n          className=\"task-create__form__description\"\r\n          onChange={taskDescHandle}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input__button\"\r\n          type=\"submit\"\r\n          onClick={taskSubmitHandle}\r\n        >\r\n          <a\r\n            href=\"javascript:void(0)\"\r\n            class=\"input__button__link\"\r\n            // onClick={submitTaskHandle}\r\n          >\r\n            <h4>Create Task</h4>\r\n          </a>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;\r\n","import React from \"react\";\r\n\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\n\r\nimport { getDate } from \"./Dates\";\r\n\r\nfunction TaskCard(props) {\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\"))[0];\r\n\r\n  const calcAccuracy = function (guess, actual) {\r\n    let accuracy = Math.abs(guess - actual) / actual;\r\n    accuracy = 100 * (1 - accuracy);\r\n    return accuracy;\r\n  };\r\n\r\n  const {\r\n    task_tag,\r\n    task_title,\r\n    task_desc,\r\n    task_intervals,\r\n    task_estimate,\r\n    task_id,\r\n    task_startDate,\r\n    task_endDate,\r\n    task_isCompleted,\r\n  } = props.task;\r\n\r\n  const tagStyles = {};\r\n\r\n  if (tagsData.length !== 0) {\r\n    tagsData.forEach(function (tag) {\r\n      if (tag.name === task_tag) {\r\n        tagStyles.color = tag.colour;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  const { tasks, setTasks } = props;\r\n\r\n  const deleteHandle = function () {\r\n    const newTasks = tasks.filter((task) => task_id !== task.task_id);\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(newTasks));\r\n    setTasks([...newTasks]);\r\n  };\r\n\r\n  const completeHandle = function () {\r\n    const updatedTasks = tasks.map(function (task) {\r\n      if (task_id === task.task_id) {\r\n        task.task_isCompleted = true;\r\n        task.task_endDate = getDate();\r\n      }\r\n      return task;\r\n    });\r\n\r\n    // calculate the accuracy and update it\r\n    // in the statsData in the localStorage\r\n    const accuracy = calcAccuracy(task_intervals, task_estimate);\r\n    statsData.tasks.taskEstimateAccuracy.push(accuracy);\r\n\r\n    // updating completed tasks in localStorage\r\n    statsData.tasks.completedTasks += 1;\r\n    statsData.tasks.taskCompletion =\r\n      statsData.tasks.completedTasks / statsData.tasks.totalTasks;\r\n    const updatedStatsData = [];\r\n    updatedStatsData.push(statsData);\r\n    localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(updatedTasks));\r\n    setTasks([...updatedTasks]);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`task-card ${\r\n        task_isCompleted === true ? \"task-card--completed\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"task-info\">\r\n        <p className=\"task-info__tag\" style={tagStyles}>\r\n          {task_tag}\r\n        </p>\r\n        <h4 className=\"task-info__name\">{task_title}</h4>\r\n        <p className=\"task-info__desc\">{task_desc}</p>\r\n      </div>\r\n      <div className=\"task-card__actions\">\r\n        <button className=\"task-card__actions__button\" onClick={completeHandle}>\r\n          <CheckCircleIcon className=\"task-icon task-icon--done\" />\r\n        </button>\r\n        <button className=\"task-card__actions__button\" onClick={deleteHandle}>\r\n          <DeleteIcon className=\"task-icon task-icon--delete\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"task-card__time\">\r\n        <ScheduleIcon className=\"task-icon--time\" />\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">Est. Intervals</p>\r\n          <p className=\"time-stat__value\">{task_estimate}</p>\r\n        </div>\r\n        <TodayIcon className=\"task-icon--time\" />\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">Start</p>\r\n          <p className=\"time-stat__value\">{task_startDate}</p>\r\n        </div>\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">End</p>\r\n          <p className=\"time-stat__value\">{task_endDate}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-enjoying.89e2f180.png\";","import React from \"react\";\r\n\r\nimport RegularShowEnjoy from \"../../images/Mordecai-Rigby-enjoying.png\";\r\n\r\nfunction EmptyTasks(props) {\r\n  const styles = {\r\n    height: props.height,\r\n    width: props.width,\r\n  };\r\n\r\n  const imageStyles = {\r\n    height: \"100%\",\r\n    width: \"auto\",\r\n    objectFit: \"cover\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"regular-show\" style={styles}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        className=\"regular-show__pic\"\r\n        style={imageStyles}\r\n      />\r\n      <p className=\"regular-show__text\">{props.text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyTasks;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport reverseArray from \"../functions/reverseArray\";\r\n\r\nimport CreateTask from \"./CreateTask\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport EmptyTasks from \"./EmptyTasks\";\r\n\r\nimport RegularShowEnjoy from \"../../images/Mordecai-Rigby-enjoying.png\";\r\n\r\nfunction Tasks() {\r\n  const tasksData = JSON.parse(localStorage.getItem(\"tasksData\") || \"[]\");\r\n  const [tasks, setTasks] = useState([...tasksData]);\r\n  const [createTask, setCreateTask] = useState(\"\");\r\n\r\n  const pendingTasks = tasksData.filter((task) => {\r\n    if (task.task_isCompleted == false) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  const renderCreateTask = function () {\r\n    setCreateTask(<CreateTask tasks={tasks} setCreateTask={setCreateTask} />);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-section\">\r\n        <header className=\"task-section__header\">\r\n          <h2 className=\"heading\">Tasks</h2>\r\n          <a\r\n            href=\"javascript:void(0)\"\r\n            className=\"add-task\"\r\n            onClick={renderCreateTask}\r\n          >\r\n            <h4>New Task</h4>\r\n            <AddIcon className=\"add-task__icon\" />\r\n          </a>\r\n        </header>\r\n\r\n        {createTask}\r\n\r\n        {pendingTasks.length == 0 ? (\r\n          <EmptyTasks\r\n            image={RegularShowEnjoy}\r\n            text=\"You have no tasks for now. Go and have some fun :)\"\r\n            alt=\"Moredecai and Rigby enjoying\"\r\n            height={280}\r\n          />\r\n        ) : (\r\n          <ul className=\"task-list\">\r\n            {reverseArray(tasks).map((task) => {\r\n              if (task.task_isCompleted == false) {\r\n                return (\r\n                  <TaskCard\r\n                    key={task.task_id}\r\n                    task={task}\r\n                    tasks={tasks}\r\n                    setTasks={setTasks}\r\n                  />\r\n                );\r\n              }\r\n              return \"\";\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-working.8610382c.png\";","import React, { Component, useState } from \"react\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport EmptyTasks from \"./EmptyTasks\";\r\n\r\nimport reverseArray from \"../functions/reverseArray\";\r\n\r\nimport RegularShowWork from \"../../images/Mordecai-Rigby-working.png\";\r\n\r\nfunction CompletedTasks() {\r\n  const tasksData = JSON.parse(localStorage.getItem(\"tasksData\") || \"[]\");\r\n  const [tasks, setTasks] = useState([...tasksData]);\r\n\r\n  const completedTasks = tasksData.filter((task) => {\r\n    if (task.task_isCompleted == true) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"task-section\">\r\n      <header className=\"task-section__header\">\r\n        <h2 className=\"heading\">Completed Tasks</h2>\r\n      </header>\r\n      {completedTasks.length == 0 ? (\r\n        <EmptyTasks\r\n          image={RegularShowWork}\r\n          text=\"You haven't completed any tasks. Now get back to work ;)\"\r\n          alt=\"Moredecai and Rigby Working\"\r\n          height={230}\r\n        />\r\n      ) : (\r\n        <ul className=\"task-list\">\r\n          {reverseArray(completedTasks).map((task) => {\r\n            return (\r\n              <TaskCard\r\n                key={task.task_id}\r\n                task={task}\r\n                tasks={tasks}\r\n                setTasks={setTasks}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompletedTasks;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { tagsData, updateTagData } from \"./TagsData\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction CreateTag(props) {\r\n  const { setTagData, tagData } = props;\r\n\r\n  const [tagColour, setTagColour] = useState(\"#000\");\r\n  const [tagName, setTagName] = useState(\"\");\r\n\r\n  const [errorMessage, setErrorMessage] = useState([]);\r\n\r\n  const closeButtonHandle = function () {\r\n    props.setCreateTag(\"\");\r\n  };\r\n\r\n  const tagNameHandle = function (e) {\r\n    setTagName(e.target.value);\r\n  };\r\n\r\n  const tagColourHandle = function (e) {\r\n    setTagColour(e.target.value);\r\n  };\r\n\r\n  const tagSubmitHandle = function (e) {\r\n    e.preventDefault();\r\n\r\n    let valid = true;\r\n    const errors = [];\r\n    setErrorMessage(errors);\r\n\r\n    if (tagName === \"\") {\r\n      console.log(\"where name?\");\r\n      errors.push(\"You need to enter a Task Name\");\r\n      valid = false;\r\n    }\r\n\r\n    if (valid === true) {\r\n      const newTag = {\r\n        name: tagName,\r\n        colour: tagColour,\r\n        id: Math.random() * 100,\r\n        tagTotalTime: 0,\r\n      };\r\n\r\n      tagData.push(newTag);\r\n      localStorage.setItem(\"tagsData\", JSON.stringify(tagData));\r\n      setTagData([...tagData]);\r\n      props.setCreateTag(\"\");\r\n\r\n      return;\r\n    }\r\n\r\n    console.log(\"erroror\");\r\n    setErrorMessage(errors);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-create\">\r\n      <form className=\"tag-create__form\">\r\n        <div className=\"tag-create__data\">\r\n          <ul className=\"errors\" style={{ paddingLeft: \"15\", paddingTop: \"0\" }}>\r\n            {errorMessage.map(function (error) {\r\n              return <li className=\"errors__message\">{error}</li>;\r\n            })}\r\n          </ul>\r\n          <label htmlFor=\"tgname\" className=\"tag-create__form__label\">\r\n            Tag Name <span className=\"important-asterisk\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"TagName\"\r\n            id=\"tgname\"\r\n            className=\"input__text\"\r\n            onChange={tagNameHandle}\r\n          />\r\n          <label htmlFor=\"tgcolour\" className=\"tag-create__form__label\">\r\n            Tag Colour\r\n          </label>\r\n          <div className=\"input__colour\">\r\n            <input\r\n              type=\"color\"\r\n              name=\"TagColour\"\r\n              id=\"tgcolour\"\r\n              className=\"input__colour__picker\"\r\n              onChange={tagColourHandle}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"tag-create__close\">\r\n          <a href=\"javascript:void(0)\" onClick={closeButtonHandle}>\r\n            <CloseIcon />\r\n          </a>\r\n        </div>\r\n        <div className=\"tag-create__submit\">\r\n          <button\r\n            className=\"input__button\"\r\n            type=\"submit\"\r\n            onClick={tagSubmitHandle}\r\n          >\r\n            <a href=\"javascript:void(0)\" class=\"input__button__link\">\r\n              <h4>Create Tag</h4>\r\n            </a>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTag;\r\n","import React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction TagCard({ name, colour, id, tagData, setTagData }) {\r\n  const deleteTagHandle = function () {\r\n    const newTagData = tagData.filter(function (tag) {\r\n      if (tag.id !== id) {\r\n        return tag;\r\n      }\r\n    });\r\n    setTagData([...newTagData]);\r\n    localStorage.setItem(\"tagsData\", JSON.stringify(newTagData));\r\n  };\r\n\r\n  const colorStyles = {\r\n    backgroundColor: colour,\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-card\">\r\n      <div className=\"tag-card__colour\" style={colorStyles}></div>\r\n      <h3 className=\"tag-card__name\">{name}</h3>\r\n      <div className=\"tag-card__close\">\r\n        <CloseIcon\r\n          className=\"tag-card__close__icon\"\r\n          onClick={deleteTagHandle}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-pointing.e3f7fdfd.png\";","import React, { Component, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport reverseArray from \"../functions/reverseArray\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateTag from \"./CreateTag\";\r\nimport TagCard from \"./TagCard\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\n\r\nimport RegularShowPoint from \"../../images/Mordecai-Rigby-pointing.png\";\r\n\r\nfunction Tags() {\r\n  const [tagColour, setTagColour] = useState(\"#000\");\r\n  const [tagName, setTagName] = useState(\"\");\r\n  const [createTag, setCreateTag] = useState(\"\");\r\n\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n  const [tagData, setTagData] = useState([...tagsData]);\r\n\r\n  const renderCreateTag = function () {\r\n    setCreateTag(\r\n      <CreateTag\r\n        setTagData={setTagData}\r\n        tagData={tagData}\r\n        setCreateTag={setCreateTag}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-section\">\r\n        <header className=\"task-section__header\">\r\n          <h2 className=\"heading\">Tags</h2>\r\n          <a\r\n            href=\"javascript:void(0)\"\r\n            className=\"add-task\"\r\n            onClick={renderCreateTag}\r\n          >\r\n            <h4>New Tag</h4>\r\n            <AddIcon className=\"add-task__icon\" />\r\n          </a>\r\n        </header>\r\n        <p className=\"warning\">\r\n          Recommended that you don't delete any tags and you choose a dark\r\n          colour\r\n        </p>\r\n\r\n        {createTag}\r\n\r\n        {tagsData.length === 0 ? (\r\n          <EmptyTasks\r\n            image={RegularShowPoint}\r\n            text=\"C'mon, create tags so you can track your tasks and be more productive :O\"\r\n            alt=\"Moredecai and Rigby Pointing\"\r\n            height={300}\r\n          />\r\n        ) : (\r\n          <div className=\"tag-gallery\">\r\n            {reverseArray(tagData).map(function (data) {\r\n              return (\r\n                <TagCard\r\n                  name={data.name}\r\n                  colour={data.colour}\r\n                  id={data.id}\r\n                  setTagData={setTagData}\r\n                  tagData={tagData}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Tags;\r\n","import React, { Component } from \"react\";\r\nimport TaskNavBar from \"./TaskNavBar\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Tasks from \"./Tasks\";\r\nimport CompletedTasks from \"./CompletedTasks\";\r\nimport Tags from \"../Tag Manager/Tags\";\r\n\r\nfunction TaskManager() {\r\n  return (\r\n    <Router>\r\n      <div className=\"task-manager\">\r\n        <TaskNavBar />\r\n        <Switch>\r\n          <Route path=\"/task-manager/tasks\" component={Tasks} />\r\n          <Route\r\n            path=\"/task-manager/completed-tasks\"\r\n            component={CompletedTasks}\r\n          />\r\n          <Route path=\"/task-manager/tags\" component={Tags} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TaskManager;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction CreateSession({ sessionData, setSessionData, setCreateSession }) {\r\n  // statsData from localStorage\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n\r\n  const tasksData = JSON.parse(\r\n    localStorage.getItem(\"tasksData\") || \"[]\"\r\n  ).filter(function (task) {\r\n    if (task.task_isCompleted === false) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  const [sessionTitle, setSessionTitle] = useState(\"\");\r\n  const [sessionActiveTime, setSessionActiveTime] = useState(\"25\");\r\n  const [sessionShortBreak, setSessionShortBreak] = useState(\"5\");\r\n  const [sessionLongBreak, setSessionLongBreak] = useState(\"30\");\r\n  const [sessionTask, setSessionTask] = useState(\"\");\r\n  const [sessionInterval, setSessionInterval] = useState(\"4\");\r\n  const [sessionDescription, setSessionDescription] = useState(\"\");\r\n  const [sessionTag, setSessionTag] = useState(\"\");\r\n  const [sessionTaskId, setSessionTaskId] = useState(\"\");\r\n\r\n  const [errorMessage, setErrorMessage] = useState([]);\r\n\r\n  const closeButtonHandle = function () {\r\n    setCreateSession(\"\");\r\n  };\r\n\r\n  const sessionTitleHandle = function (e) {\r\n    setSessionTitle(e.target.value);\r\n  };\r\n  const sessionActiveTimeHandle = function (e) {\r\n    setSessionActiveTime(e.target.value);\r\n  };\r\n  const sessionShortBreakHandle = function (e) {\r\n    setSessionShortBreak(e.target.value);\r\n  };\r\n  const sessionLongBreakHandle = function (e) {\r\n    setSessionLongBreak(e.target.value);\r\n  };\r\n  const sessionTaskHandle = function (e) {\r\n    setSessionTask(e.target.value);\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var id = optionElement.getAttribute(\"id\");\r\n\r\n    tasksData.forEach(function (task) {\r\n      if (task.task_id == id) {\r\n        setSessionTag(task.task_tag);\r\n        setSessionTaskId(task.task_id);\r\n      }\r\n    });\r\n  };\r\n  const sessionIntervalsHandle = function (e) {\r\n    setSessionInterval(e.target.value);\r\n  };\r\n  const sessionDescriptionHandle = function (e) {\r\n    setSessionDescription(e.target.value);\r\n  };\r\n\r\n  const sessionSubmitHandle = function (e) {\r\n    e.preventDefault();\r\n\r\n    let valid = true;\r\n    const errors = [];\r\n    setErrorMessage(errors);\r\n\r\n    // checking for form errors\r\n    if (sessionTitle === \"\") {\r\n      errors.push(\"You need to enter a Session Name\");\r\n      valid = false;\r\n    }\r\n    if (sessionActiveTime === \"\") {\r\n      errors.push(\"Active Time should be a valid number\");\r\n      valid = false;\r\n    }\r\n    if (parseInt(sessionActiveTime) < 1) {\r\n      errors.push(\"Active Time can't be less than 1 min\");\r\n      valid = false;\r\n    }\r\n    if (parseInt(sessionActiveTime) > 120) {\r\n      errors.push(\"Active Time can't be more than 120 mins ;)\");\r\n      valid = false;\r\n    }\r\n\r\n    if (sessionShortBreak === \"\") {\r\n      errors.push(\"Short Break should be a valid number\");\r\n      valid = false;\r\n    }\r\n    if (parseInt(sessionShortBreak) < 1) {\r\n      errors.push(\"Short Break can't be less than 1 min\");\r\n      valid = false;\r\n    }\r\n    if (parseInt(sessionShortBreak) > 60) {\r\n      errors.push(\"Short Break can't be more than 60 mins\");\r\n      valid = false;\r\n    }\r\n\r\n    if (sessionLongBreak === \"\") {\r\n      errors.push(\"Long Break should be a valid number\");\r\n      valid = false;\r\n    }\r\n    if (parseInt(sessionLongBreak) < 1) {\r\n      errors.push(\"Long Break can't be less than 1 min\");\r\n      valid = false;\r\n    }\r\n    if (parseInt(sessionLongBreak) > 120) {\r\n      errors.push(\"Long Break can't be more than 120 mins\");\r\n      valid = false;\r\n    }\r\n\r\n    if (sessionTask === \"\") {\r\n      errors.push(\"You need to choose a Task\");\r\n      valid = false;\r\n    }\r\n\r\n    if (sessionInterval === \"\") {\r\n      errors.push(\"Session Interval should be a valid number\");\r\n      valid = false;\r\n    }\r\n\r\n    if (parseInt(sessionInterval) < 1) {\r\n      errors.push(\"Session Interval can't be less than 1\");\r\n      valid = false;\r\n    }\r\n    if (parseInt(sessionInterval) > 15) {\r\n      errors.push(\"Session Interval can't be more than 15 ;)\");\r\n      valid = false;\r\n    }\r\n\r\n    if (valid === true) {\r\n      const sessionInfo = {};\r\n      sessionInfo.id = Math.random() * 100;\r\n      sessionInfo.title = sessionTitle;\r\n      sessionInfo.activeTime = sessionActiveTime;\r\n      sessionInfo.shortBreak = sessionShortBreak;\r\n      sessionInfo.longBreak = sessionLongBreak;\r\n      sessionInfo.task = sessionTask;\r\n      sessionInfo.intervals = sessionInterval;\r\n      sessionInfo.description = sessionDescription;\r\n      sessionInfo.tag = sessionTag;\r\n      sessionInfo.taskId = sessionTaskId;\r\n      sessionInfo.isStarted = false;\r\n      sessionInfo.isFinished = false;\r\n      sessionInfo.currentInterval = 0;\r\n\r\n      sessionData.push(sessionInfo);\r\n      setSessionData([...sessionData]);\r\n      localStorage.setItem(\"sessionsData\", JSON.stringify(sessionData));\r\n\r\n      // update statsData for session in localStorage\r\n      statsData.sessions.totalSession += 1;\r\n      statsData.sessions.totalIntervals += Number(sessionInfo.intervals);\r\n      const avgIntervals =\r\n        statsData.sessions.totalIntervals / statsData.sessions.totalSession;\r\n      statsData.sessions.avgIntervals = avgIntervals.toFixed(1);\r\n\r\n      const updatedStatsData = [];\r\n      updatedStatsData.push(statsData);\r\n      localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n      setCreateSession(\"\");\r\n\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(errors);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-create\">\r\n      <header className=\"session-create__header\">\r\n        <h4 className=\"session-create__heading\">Create Session</h4>\r\n        <a href=\"javascript:void(0)\" onClick={closeButtonHandle}>\r\n          <CloseIcon className=\"close-icon\" />\r\n        </a>\r\n      </header>\r\n\r\n      <ul className=\"errors\">\r\n        {errorMessage.map(function (error) {\r\n          return <li className=\"errors__message\">{error}</li>;\r\n        })}\r\n      </ul>\r\n\r\n      <form className=\"session-create__form\">\r\n        <label htmlFor=\"stitle\" className=\"session-create__form__label\">\r\n          Session Title <span className=\"important-asterisk\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"sessiontitle\"\r\n          id=\"stitle\"\r\n          placeholder=\"Your Session Title\"\r\n          className=\"input__text\"\r\n          onChange={sessionTitleHandle}\r\n        />\r\n\r\n        <label htmlFor=\"sstudytime\" className=\"session-create__form__label\">\r\n          Active Time <span className=\"light-italic\">(in minutes)</span>{\" \"}\r\n          <span className=\"important-asterisk\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionStudyTime\"\r\n          id=\"sstudytime\"\r\n          className=\"input__number\"\r\n          onChange={sessionActiveTimeHandle}\r\n          defaultValue=\"25\"\r\n          min=\"10\"\r\n          max=\"120\"\r\n        />\r\n\r\n        <label\r\n          htmlFor=\"sshortbreaktime\"\r\n          className=\"session-create__form__label\"\r\n        >\r\n          Short Break Time <span className=\"light-italic\">(in minutes)</span>{\" \"}\r\n          <span className=\"important-asterisk\">*</span>\r\n        </label>\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionShortBreakTime\"\r\n          id=\"sshortbreaktime\"\r\n          className=\"input__number\"\r\n          onChange={sessionShortBreakHandle}\r\n          defaultValue=\"5\"\r\n          min=\"5\"\r\n          max=\"20\"\r\n        />\r\n\r\n        <label htmlFor=\"slongbreaktime\" className=\"session-create__form__label\">\r\n          Long Break Time <span className=\"light-italic\">(in minutes)</span>{\" \"}\r\n          <span className=\"important-asterisk\">*</span>\r\n        </label>\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionLongBreakTime\"\r\n          id=\"slongbreaktime\"\r\n          className=\"input__number\"\r\n          onChange={sessionLongBreakHandle}\r\n          defaultValue=\"30\"\r\n          min=\"20\"\r\n          max=\"60\"\r\n        />\r\n\r\n        <label htmlFor=\"stask\" className=\"session-create__form__label\">\r\n          Task <span className=\"important-asterisk\">*</span>\r\n        </label>\r\n        <select\r\n          name=\"sessiontask\"\r\n          id=\"stask\"\r\n          className=\"session-create__form__select\"\r\n          onChange={sessionTaskHandle}\r\n        >\r\n          <option value=\"\" selected disabled hidden></option>\r\n\r\n          {tasksData.length === 0 ? (\r\n            <option disabled>Create some Tasks</option>\r\n          ) : (\r\n            tasksData.map(function (tasks) {\r\n              return (\r\n                <option value={`${tasks.task_title}`} id={tasks.task_id}>\r\n                  {tasks.task_title}\r\n                </option>\r\n              );\r\n            })\r\n          )}\r\n        </select>\r\n        <label htmlFor=\"sintervals\" className=\"session-create__form__label\">\r\n          Number of Intervals <span className=\"important-asterisk\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"sessionintervals\"\r\n          id=\"sintervals\"\r\n          className=\"input__number\"\r\n          onChange={sessionIntervalsHandle}\r\n          defaultValue=\"4\"\r\n          min=\"1\"\r\n          max=\"12\"\r\n        />\r\n\r\n        <label htmlFor=\"tdescription\" className=\"session-create__form__label\">\r\n          Description\r\n        </label>\r\n        <textarea\r\n          name=\"sessiondescription\"\r\n          id=\"tdescription\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"Description for your Session...\"\r\n          className=\"session-create__form__description\"\r\n          onChange={sessionDescriptionHandle}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input__button\"\r\n          type=\"submit\"\r\n          onClick={sessionSubmitHandle}\r\n        >\r\n          <a href=\"javascript:void(0)\" class=\"input__button__link\">\r\n            <h4>Create Session</h4>\r\n          </a>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateSession;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nfunction SessionCard(props) {\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n\r\n  const {\r\n    id,\r\n    activeTime,\r\n    shortBreak,\r\n    longBreak,\r\n    isStarted,\r\n    isFinished,\r\n    title,\r\n    task,\r\n    currentInterval,\r\n    intervals,\r\n    description,\r\n  } = props.session;\r\n\r\n  const [sessionIsStarted, setSessionIsStarted] = useState(\r\n    props.session.isStarted\r\n  );\r\n\r\n  const { sessionData, setSessionData } = props;\r\n\r\n  // to get the details of the current session\r\n  const { currentSession, setCurrentSession } = props;\r\n\r\n  const sessionDeleteHandle = function () {\r\n    const updatedSessionData = sessionData.filter(function (session) {\r\n      if (id !== session.id) {\r\n        return session;\r\n      }\r\n    });\r\n\r\n    setSessionData([...updatedSessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionData));\r\n  };\r\n\r\n  const gotoSessionHandle = function () {\r\n    setSessionIsStarted(true);\r\n\r\n    // need to update sessionIsStarted\r\n    // updates that data in the local storage as well\r\n    const updatedSessionData = sessionData.filter(function (session) {\r\n      if (id === session.id) {\r\n        session.isStarted = true;\r\n      }\r\n      return session;\r\n    });\r\n\r\n    setSessionData([...updatedSessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionData));\r\n\r\n    setCurrentSession(props.session);\r\n  };\r\n\r\n  return (\r\n    <div className=\"session-card\">\r\n      <div className=\"session-card__info\">\r\n        <h4 className=\"session-card__info__name\">{title}</h4>\r\n        <p className=\"session-card__info__task\">{task}</p>\r\n        <p className=\"session-card__info__description\">{description}</p>\r\n      </div>\r\n      <div className=\"session-card__actions\">\r\n        <button\r\n          className=\"session-card__actions__button\"\r\n          onClick={sessionDeleteHandle}\r\n        >\r\n          <DeleteIcon />\r\n        </button>\r\n\r\n        {isFinished === false ? (\r\n          <Link to=\"/pomodoro/timer\">\r\n            <button\r\n              className=\"session-card__actions__button\"\r\n              onClick={gotoSessionHandle}\r\n            >\r\n              <KeyboardArrowRightIcon />\r\n            </button>\r\n          </Link>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n      <div className=\"session-card__status\">\r\n        <div className=\"session-card__status__stat\">\r\n          <p className=\"session-card__status__stat__name\">Status: </p>\r\n          {isFinished === true ? (\r\n            <p className=\"session-card__status__stat__value session-card__status__stat__value--finished \">\r\n              Finished\r\n            </p>\r\n          ) : sessionIsStarted === true ? (\r\n            <p className=\"session-card__status__stat__value session-card__status__stat__value--started \">\r\n              Started\r\n            </p>\r\n          ) : (\r\n            <p className=\"session-card__status__stat__value\">Not Started</p>\r\n          )}\r\n        </div>\r\n        <div className=\"session-card__status__stat\">\r\n          <p className=\"session-card__status__stat__name\">Progress:</p>\r\n          <p className=\"session-card__status__stat__value\">\r\n            {currentInterval}/{intervals}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SessionCard;\r\n","export default __webpack_public_path__ + \"static/media/Rigby-reading.343b8b6a.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport reverseArray from \"../functions/reverseArray\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateSession from \"./CreateSession\";\r\nimport SessionCard from \"./SessionCard\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\n\r\nimport RegularShowReading from \"../../images/Rigby-reading.png\";\r\n\r\nfunction SessionManager({ currentSession, setCurrentSession }) {\r\n  let [sessionData, setSessionData] = useState([]);\r\n  useEffect(() => {\r\n    setSessionData([\r\n      ...JSON.parse(localStorage.getItem(\"sessionsData\") || \"[]\"),\r\n    ]);\r\n  }, []);\r\n\r\n  const [createSession, setCreateSession] = useState(\"\");\r\n\r\n  const renderCreateSession = function () {\r\n    setCreateSession(\r\n      <CreateSession\r\n        sessionData={sessionData}\r\n        setSessionData={setSessionData}\r\n        setCreateSession={setCreateSession}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-manager\">\r\n        <div className=\"task-section\">\r\n          <header className=\"task-section__header\">\r\n            <h2 className=\"heading\">Sessions</h2>\r\n            <a\r\n              href=\"javascript:void(0)\"\r\n              className=\"add-task\"\r\n              onClick={renderCreateSession}\r\n            >\r\n              <h4>New Session</h4>\r\n              <AddIcon className=\"add-task__icon\" />\r\n            </a>\r\n          </header>\r\n\r\n          {createSession}\r\n\r\n          {sessionData.length === 0 ? (\r\n            <EmptyTasks\r\n              image={RegularShowReading}\r\n              text=\"Create a session and let's get productive :D\"\r\n              alt=\"Rigby Reading\"\r\n              height={300}\r\n            />\r\n          ) : (\r\n            <ul class=\"task-list\">\r\n              {reverseArray(sessionData).map(function (session) {\r\n                return (\r\n                  <SessionCard\r\n                    session={session}\r\n                    sessionData={sessionData}\r\n                    setSessionData={setSessionData}\r\n                    currentSession={currentSession}\r\n                    setCurrentSession={setCurrentSession}\r\n                  />\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default SessionManager;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class CurrentTask extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      task: props.task,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"current-task\">\r\n        <h3 className=\"current-task__heading\">Current Task</h3>\r\n        <h4 className=\"current-task__name\">{this.state.task}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/end-sound.1154923f.wav\";","import React, { useState, useEffect } from \"react\";\r\n\r\nimport EndSound from \"../../sounds/end-sound.wav\";\r\n\r\nfunction Timer(props) {\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n  const tasksData = JSON.parse(localStorage.getItem(\"tasksData\") || \"[]\");\r\n  const time = new Date();\r\n\r\n  const [minutes, setMinutes] = useState(props.activeTime);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const [currentBlock, setCurrentBlock] = useState(props.currentBlock);\r\n  const [totalBlocks, settotalBlocks] = useState(props.blocks);\r\n\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isReseted, setIsReseted] = useState(true);\r\n\r\n  // total active time for this session\r\n  const [sessionTime, setSessionTime] = useState(0);\r\n  const [totalHours, setTotalHours] = useState([...statsData.time.totalHours]);\r\n\r\n  const { activeTime, shortBreak, longBreak } = props;\r\n  const { currentSession, setCurrentSession } = props;\r\n  const { isSession, setIsSession } = props;\r\n  const { setTimerIsStarted } = props;\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    if (isRunning === true) {\r\n      setTimerIsStarted(true);\r\n      intervalId = setInterval(() => {\r\n        if (seconds === 0) {\r\n          if (minutes !== 0) {\r\n            setMinutes(minutes - 1);\r\n            setSeconds(59);\r\n\r\n            if (isSession === true) {\r\n              setSessionTime(sessionTime + 1);\r\n              setTotalHours(\r\n                totalHours.map(function (item, i) {\r\n                  if (i == time.getHours()) {\r\n                    return item + 1;\r\n                  }\r\n                  return item;\r\n                })\r\n              );\r\n            }\r\n          } else {\r\n            const endSound = new Audio(EndSound);\r\n            endSound.play();\r\n\r\n            if (isSession === true) {\r\n              currentSession.currentInterval = currentBlock + 1;\r\n              setCurrentSession(currentSession);\r\n              setCurrentBlock((currentBlock) => currentBlock + 1);\r\n              setIsReseted(false);\r\n              setIsSession(false);\r\n\r\n              if (currentBlock + 1 == totalBlocks) {\r\n                currentSession.isFinished = true;\r\n              }\r\n\r\n              // increase number of intervals for the given task by 1\r\n\r\n              const updatedTasksData = tasksData.map(function (task) {\r\n                if (task.task_id == currentSession.taskId) {\r\n                  task.task_intervals += 1;\r\n                }\r\n                return task;\r\n              });\r\n\r\n              localStorage.setItem(\r\n                \"tasksData\",\r\n                JSON.stringify(updatedTasksData)\r\n              );\r\n\r\n              // update the tagsData in localstorage, by updating the tag time with sessionTime\r\n              const tagsData = JSON.parse(localStorage.getItem(\"tagsData\"));\r\n\r\n              const updatedTagsData = tagsData.map(function (tag) {\r\n                console.log(tag, currentSession);\r\n                if (tag.name === currentSession.tag) {\r\n                  // updating totalActiveTime in localStorage\r\n                  statsData.time.totalActiveTime += sessionTime;\r\n\r\n                  // checking for streaks\r\n                  let currentDay = statsData.days.currentDay;\r\n                  if (currentDay == \"-\") {\r\n                    const d = new Date();\r\n                    currentDay = d.toDateString();\r\n                    statsData.days.currentDay = currentDay;\r\n                  } else {\r\n                    const d = new Date();\r\n                    const today = d.toDateString();\r\n                    const diff = Date.parse(today) - Date.parse(currentDay);\r\n                    if (today !== currentDay) {\r\n                      if (diff <= 86400000) {\r\n                        statsData.days.streak += 1;\r\n                      } else {\r\n                        statsData.days.streak = 0;\r\n                      }\r\n                      statsData.days.currentDay = today;\r\n                    }\r\n                  }\r\n\r\n                  const updatedStatsData = [];\r\n                  console.log(totalHours);\r\n                  statsData.time.totalHours = totalHours;\r\n                  updatedStatsData.push(statsData);\r\n                  localStorage.setItem(\r\n                    \"statsData\",\r\n                    JSON.stringify(updatedStatsData)\r\n                  );\r\n\r\n                  tag.tagTotalTime = tag.tagTotalTime + sessionTime;\r\n                  setSessionTime(0);\r\n                }\r\n                return tag;\r\n              });\r\n\r\n              localStorage.setItem(\"tagsData\", JSON.stringify(updatedTagsData));\r\n            }\r\n\r\n            setIsRunning(false);\r\n            return;\r\n          }\r\n        } else {\r\n          setSeconds(seconds - 1);\r\n          if (isSession === true) {\r\n            setSessionTime(sessionTime + 1);\r\n            setTotalHours(\r\n              totalHours.map(function (item, i) {\r\n                if (i == time.getHours()) {\r\n                  return item + 1;\r\n                }\r\n                return item;\r\n              })\r\n            );\r\n          }\r\n        }\r\n\r\n        setCounter((counter) => counter + 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [isRunning, counter]);\r\n\r\n  const startHandle = function () {\r\n    if (currentSession.isFinished !== true && isReseted == true) {\r\n      setIsRunning(true);\r\n    }\r\n  };\r\n\r\n  const pauseHandle = function () {\r\n    if (currentSession.isFinished !== true) {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  const pomodoroHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(true);\r\n      setMinutes(activeTime);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  const shortBreakHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(false);\r\n      setMinutes(shortBreak);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  const longBreakHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(false);\r\n      setMinutes(longBreak);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <h1 className=\"timer__value\">\r\n        {minutes < 10 ? \"0\" : \"\"}\r\n        {minutes}:{seconds < 10 ? \"0\" : \"\"}\r\n        {seconds}\r\n      </h1>\r\n      <p className=\"timer__session\">\r\n        {currentBlock}/{totalBlocks}\r\n      </p>\r\n      <div className=\"timerpage__controls\">\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"button button--basic\"\r\n          onClick={startHandle}\r\n        >\r\n          Start\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"button button--basic\"\r\n          onClick={pauseHandle}\r\n        >\r\n          Pause\r\n        </a>\r\n      </div>\r\n\r\n      <div class=\"timerpage__buttons\">\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={pomodoroHandle}\r\n        >\r\n          <h4>Pomodoro</h4>\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={shortBreakHandle}\r\n        >\r\n          <h4>Short Break</h4>\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={longBreakHandle}\r\n        >\r\n          <h4>Long Break</h4>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CloseWarningMessage() {\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"close-warning\">\r\n        <p className=\"close-warning__message\">\r\n          Are you sure you want to go back?\r\n        </p>\r\n        <div className=\"close-warning__action\">\r\n          <Link\r\n            to=\"/pomodoro/timer/\"\r\n            className=\"close-warning__action__buttons close-warning__action__buttons--green\"\r\n          >\r\n            Stay Here\r\n          </Link>\r\n          <Link\r\n            to=\"/pomodoro/session-manager\"\r\n            className=\"close-warning__action__buttons close-warning__action__buttons--red\"\r\n          >\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CloseWarningMessage;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CurrentTask from \"./CurrentTask\";\r\nimport Timer from \"./Timer\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport CloseWarningMessage from \"./CloseWarningMessage\";\r\n\r\nfunction TimerPage({ currentSession, setCurrentSession }) {\r\n  useEffect(() => {\r\n    return () => {\r\n      const sessionsData = JSON.parse(\r\n        localStorage.getItem(\"sessionsData\") || \"[]\"\r\n      );\r\n\r\n      const updatedSessionsData = sessionsData.map(function (session) {\r\n        if (currentSession.id === session.id) {\r\n          return currentSession;\r\n        }\r\n        return session;\r\n      });\r\n\r\n      localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionsData));\r\n    };\r\n  }, []);\r\n\r\n  const {\r\n    activeTime,\r\n    shortBreak,\r\n    longBreak,\r\n    currentInterval: currentBlock,\r\n    intervals: blocks,\r\n  } = currentSession;\r\n\r\n  const [isSession, setIsSession] = useState(true);\r\n  const [timerIsStarted, setTimerIsStarted] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"timerpage\">\r\n        <div className=\"timerpage__back\">\r\n          <Link\r\n            to={`${\r\n              timerIsStarted === false\r\n                ? \"/pomodoro/session-manager\"\r\n                : \"/pomodoro/timer/close-message\"\r\n            }`}\r\n          >\r\n            <ArrowBackIosIcon />\r\n          </Link>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route path=\"/pomodoro/timer/close-message\">\r\n            <CloseWarningMessage />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {isSession === true ? (\r\n          <CurrentTask task={currentSession.task} />\r\n        ) : (\r\n          <div className=\"break-time\">\r\n            <h3>Break Time</h3>\r\n            <h4>Time for rest</h4>\r\n          </div>\r\n        )}\r\n        <Timer\r\n          activeTime={activeTime}\r\n          shortBreak={shortBreak}\r\n          longBreak={longBreak}\r\n          currentBlock={currentBlock}\r\n          blocks={blocks}\r\n          currentSession={currentSession}\r\n          setCurrentSession={setCurrentSession}\r\n          isSession={isSession}\r\n          setIsSession={setIsSession}\r\n          setTimerIsStarted={setTimerIsStarted}\r\n        />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TimerPage;\r\n","import React, { useState } from \"react\";\r\nimport SessionManager from \"../Session Manager/SessionManager\";\r\nimport TimerPage from \"../Timer Page/TimerPage\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction Pomodoro() {\r\n  // currentSession stores all the details of the session we click on\r\n  const [currentSession, setCurrentSession] = useState({});\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"pomodoro\">\r\n        <Switch>\r\n          <Route path=\"/pomodoro/session-manager\">\r\n            <SessionManager\r\n              currentSession={currentSession}\r\n              setCurrentSession={setCurrentSession}\r\n            />\r\n          </Route>\r\n          <Route path=\"/pomodoro/timer\">\r\n            <TimerPage\r\n              currentSession={currentSession}\r\n              setCurrentSession={setCurrentSession}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n","import { layouts } from \"chart.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction TagDistribution(props) {\r\n  const [tagLabels, setTagLabels] = useState([]);\r\n  const [tagTime, setTagTime] = useState([]);\r\n  const [tagColours, setTagColours] = useState([]);\r\n  const [tagBorderColours, setTagBorderColours] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const tagData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n\r\n    setTagLabels(\r\n      tagData.map(function (tag) {\r\n        return tag.name;\r\n      })\r\n    );\r\n\r\n    setTagTime(\r\n      tagData.map(function (tag) {\r\n        return tag.tagTotalTime / 60;\r\n      })\r\n    );\r\n\r\n    setTagColours(\r\n      tagData.map(function (tag) {\r\n        return tag.colour + \"cc\";\r\n      })\r\n    );\r\n    setTagBorderColours(\r\n      tagData.map(function (tag) {\r\n        return tag.colour;\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tag-distribution\">\r\n      <Doughnut\r\n        // defaults={{\r\n        //   layout: {\r\n        //     padding: 10,\r\n        //   },\r\n        // }}\r\n        height={250}\r\n        width={250}\r\n        data={{\r\n          labels: tagLabels,\r\n          datasets: [\r\n            {\r\n              data: tagTime,\r\n              backgroundColor: tagColours,\r\n              borderColor: tagBorderColours,\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }}\r\n        // data={{\r\n        //   labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n        //   datasets: [\r\n        //     {\r\n        //       label: \"# of Votes\",\r\n        //       data: [12, 19, 3, 5, 2, 3],\r\n        //       backgroundColor: [\r\n        //         \"rgba(255, 99, 132, 0.2)\",\r\n        //         \"rgba(54, 162, 235, 0.2)\",\r\n        //         \"rgba(255, 206, 86, 0.2)\",\r\n        //         \"rgba(75, 192, 192, 0.2)\",\r\n        //         \"rgba(153, 102, 255, 0.2)\",\r\n        //         \"rgba(255, 159, 64, 0.2)\",\r\n        //       ],\r\n        //       borderColor: [\r\n        //         \"rgba(255, 99, 132, 1)\",\r\n        //         \"rgba(54, 162, 235, 1)\",\r\n        //         \"rgba(255, 206, 86, 1)\",\r\n        //         \"rgba(75, 192, 192, 1)\",\r\n        //         \"rgba(153, 102, 255, 1)\",\r\n        //         \"rgba(255, 159, 64, 1)\",\r\n        //       ],\r\n        //       borderWidth: 1,\r\n        //     },\r\n        //   ],\r\n        // }}\r\n        options={{\r\n          responsive: false,\r\n          layout: {\r\n            padding: 0,\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              position: \"top\",\r\n              maxWidth: 120,\r\n              labels: {\r\n                boxWidth: 10,\r\n                boxHeight: 10,\r\n              },\r\n            },\r\n            title: {\r\n              display: false,\r\n              text: \"Tag Distribution\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagDistribution;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction StatsCard(props) {\r\n  return (\r\n    <div className=\"stat\">\r\n      <p className=\"stat__name\">{props.name}</p>\r\n      <h3 className=\"stat__value\">{props.value}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatsCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-benson.e45f5f0f.png\";","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction AccuracyMeter(props) {\r\n  useEffect(() => {\r\n    const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n  }, []);\r\n\r\n  const num = props.estimateAccuracy;\r\n  const accuracy = parseFloat(num).toFixed(2);\r\n  const accuracyData = [accuracy, 100 - accuracy];\r\n\r\n  let color;\r\n  let transparentColor = \"rgba(255, 99, 132, 0)\";\r\n\r\n  if (accuracy >= 90) {\r\n    color = \"rgba(75, 192, 192, 1)\";\r\n  }\r\n  if (accuracy >= 50 && accuracy < 90) {\r\n    color = \"rgba(255, 159, 64, 1)\";\r\n  }\r\n  if (accuracy < 50) {\r\n    color = \"rgba(255, 99, 132, 1)\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"accuracy-meter\">\r\n      <h1 className=\"accuracy-meter__value\">\r\n        {accuracy}\r\n        {accuracy == \"N/A\" ? \"\" : \"%\"}\r\n      </h1>\r\n      <Doughnut\r\n        // defaults={{\r\n        //   layout: {\r\n        //     padding: 10,\r\n        //   },\r\n        // }}\r\n        height={250}\r\n        width={250}\r\n        // data={{\r\n        //   labels: tagLabels,\r\n        //   datasets: [\r\n        //     {\r\n        //       data: tagTime,\r\n        //       backgroundColor: tagColours,\r\n        //       borderColor: tagBorderColours,\r\n        //       borderWidth: 1,\r\n        //     },\r\n        //   ],\r\n        // }}\r\n        data={{\r\n          labels: [\"\", \"\"],\r\n          datasets: [\r\n            {\r\n              label: \"# of Votes\",\r\n              data: accuracyData,\r\n              backgroundColor: [color, transparentColor],\r\n              borderColor: [\"#e6e6e6\"],\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          cutout: 90,\r\n          responsive: false,\r\n          layout: {\r\n            padding: 0,\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n              position: \"top\",\r\n              maxWidth: 120,\r\n              labels: {\r\n                boxWidth: 10,\r\n                boxHeight: 10,\r\n              },\r\n            },\r\n            tooltip: {\r\n              enabled: false,\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccuracyMeter;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nfunction TimeDistribution() {\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n  const totalHours = statsData.time.totalHours;\r\n\r\n  const ratio = Math.max.apply(Math, totalHours) / 100;\r\n  const size = totalHours.length;\r\n  let i = 0;\r\n\r\n  for (i = 0; i < size; i++) {\r\n    totalHours[i] = Math.round(totalHours[i] / ratio);\r\n  }\r\n\r\n  return (\r\n    <div className=\"time-distribution\">\r\n      <Bar\r\n        // defaults={{\r\n        //   layout: {\r\n        //     padding: 10,\r\n        //   },\r\n        // }}\r\n        height={250}\r\n        width={300}\r\n        // data={{\r\n        //   labels: tagLabels,\r\n        //   datasets: [\r\n        //     {\r\n        //       data: tagTime,\r\n        //       backgroundColor: tagColours,\r\n        //       borderColor: tagBorderColours,\r\n        //       borderWidth: 1,\r\n        //     },\r\n        //   ],\r\n        // }}\r\n        data={{\r\n          labels: [\r\n            \"0\",\r\n            \"1\",\r\n            \"2\",\r\n            \"3\",\r\n            \"4\",\r\n            \"5\",\r\n            \"6\",\r\n            \"7\",\r\n            \"8\",\r\n            \"9\",\r\n            \"10\",\r\n            \"11\",\r\n            \"12\",\r\n            \"13\",\r\n            \"14\",\r\n            \"15\",\r\n            \"16\",\r\n            \"17\",\r\n            \"18\",\r\n            \"19\",\r\n            \"20\",\r\n            \"21\",\r\n            \"22\",\r\n            \"23\",\r\n          ],\r\n          datasets: [\r\n            {\r\n              data: totalHours,\r\n              backgroundColor: [\"#fc9686\"],\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: false,\r\n              },\r\n              min: 0,\r\n              max: 23,\r\n              grid: {\r\n                display: false,\r\n              },\r\n            },\r\n            y: {\r\n              display: false,\r\n              grid: {\r\n                display: true,\r\n              },\r\n            },\r\n          },\r\n          responsive: true,\r\n          layout: {\r\n            padding: 0,\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n              position: \"top\",\r\n              maxWidth: 120,\r\n              labels: {\r\n                boxWidth: 10,\r\n                boxHeight: 10,\r\n              },\r\n            },\r\n            title: {\r\n              display: false,\r\n              text: \"Tag Distribution\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeDistribution;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport TagDistribution from \"./TagDistribution\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\nimport StatsCard from \"./StatsCard\";\r\n\r\nimport RegularShowBenson from \"../../images/Mordecai-Rigby-benson.png\";\r\n\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport TimelapseIcon from \"@material-ui/icons/Timelapse\";\r\nimport PieChartIcon from \"@material-ui/icons/PieChart\";\r\nimport AccuracyMeter from \"./AccuracyMeter\";\r\nimport TrackChangesIcon from \"@material-ui/icons/TrackChanges\";\r\nimport TimeDistribution from \"./TimeDistribution\";\r\n\r\nfunction StatsPage() {\r\n  const [hasStats, setHasStats] = useState(true);\r\n\r\n  const [taskCompletion, setTaskCompletion] = useState(\"-\");\r\n  const [avgTaskDuration, setAvgTaskDuration] = useState(\"-\");\r\n  const [totalSessions, setTotalSessions] = useState(\"-\");\r\n  const [avgIntervals, setAvgIntervals] = useState(\"-\");\r\n  const [totalHoursActive, setTotalHoursActive] = useState(\"-\");\r\n  const [estimateAccuracy, setEstimateAccuracy] = useState(\"N/A\");\r\n  const [streak, setStreak] = useState(0);\r\n\r\n  const iconStyles = {\r\n    fontSize: 19,\r\n    fill: \"#b8b8b8\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n    if (statsData.time.totalActiveTime == 0) {\r\n      setHasStats(false);\r\n    }\r\n  }, []);\r\n\r\n  // for getting the statsData from localStorage once the page loads\r\n  useEffect(() => {\r\n    const statsData = JSON.parse(localStorage.getItem(\"statsData\") || [])[0];\r\n    if (statsData.tasks.taskCompletion != 0) {\r\n      const num = statsData.tasks.taskCompletion * 100;\r\n      setTaskCompletion(num.toFixed(1));\r\n    }\r\n    if (statsData.tasks.completedTasks != 0) {\r\n      let duration =\r\n        statsData.time.totalActiveTime / statsData.tasks.completedTasks;\r\n      duration = duration / 3600;\r\n\r\n      statsData.tasks.avgTaskDuration = duration;\r\n\r\n      if (duration < 1) {\r\n        setAvgTaskDuration(duration.toFixed(2));\r\n      } else {\r\n        setAvgTaskDuration(duration.toFixed(1));\r\n      }\r\n    }\r\n    if (statsData.time.totalActiveTime != 0) {\r\n      const totalHours = statsData.time.totalActiveTime / 3600;\r\n\r\n      if (totalHours < 1) {\r\n        setTotalHoursActive(totalHours.toFixed(2));\r\n      } else {\r\n        setTotalHoursActive(totalHours.toFixed(1));\r\n      }\r\n    }\r\n\r\n    if (statsData.sessions.totalSession != 0) {\r\n      setTotalSessions(statsData.sessions.totalSession);\r\n      setAvgIntervals(statsData.sessions.avgIntervals);\r\n    }\r\n\r\n    if (statsData.days.streak != 0) {\r\n      setStreak(statsData.days.streak);\r\n    }\r\n\r\n    // for estimate accuracy\r\n    if (statsData.tasks.taskEstimateAccuracy.length !== 0) {\r\n      const estimateArray = statsData.tasks.taskEstimateAccuracy;\r\n      const totalAccuracy =\r\n        estimateArray.reduce(function (total, currentValue) {\r\n          return total + currentValue;\r\n        }, 0) / estimateArray.length;\r\n      setEstimateAccuracy(totalAccuracy);\r\n    }\r\n\r\n    const updatedStatsData = [];\r\n    updatedStatsData.push(statsData);\r\n    localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"task-section\">\r\n      <header className=\"task-section__header\">\r\n        <h2 className=\"heading\">Stats</h2>\r\n      </header>\r\n\r\n      {hasStats === true ? (\r\n        <div className=\"stats-grid\">\r\n          <div className=\"stats-card\" id=\"tag-distribution\">\r\n            <header className=\"stats-card__header\">\r\n              <PieChartIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">Tag Distribution</h2>\r\n            </header>\r\n            <TimeDistribution />\r\n          </div>\r\n\r\n          <div className=\"stats-card\" id=\"tag-distribution\">\r\n            <header className=\"stats-card__header\">\r\n              <PieChartIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">Tag Distribution</h2>\r\n            </header>\r\n            <TagDistribution />\r\n          </div>\r\n\r\n          <div className=\"stats-card\" id=\"tasks-stats\">\r\n            <header className=\"stats-card__header\">\r\n              <AssignmentTurnedInIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">Tasks</h2>\r\n            </header>\r\n            <StatsCard\r\n              name=\"Task Completion\"\r\n              value={`${taskCompletion}${taskCompletion === \"-\" ? \"\" : \"%\"}`}\r\n            />\r\n            <StatsCard\r\n              name=\"Avg. Task Duration\"\r\n              value={`${avgTaskDuration}${\r\n                avgTaskDuration === \"-\" ? \"\" : \" hrs\"\r\n              }`}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"stats-card\" id=\"session-stats\">\r\n            <header className=\"stats-card__header\">\r\n              <MenuBookIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">Sessions</h2>\r\n            </header>\r\n            <StatsCard name=\"Total Sessions\" value={totalSessions} />\r\n            <StatsCard name=\"Avg. Intervals\" value={avgIntervals} />\r\n          </div>\r\n\r\n          <div className=\"stats-card\" id=\"activity-stats\">\r\n            <header className=\"stats-card__header\">\r\n              <TimelapseIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">Activity</h2>\r\n            </header>\r\n            <StatsCard\r\n              name=\"Total Hours Active\"\r\n              value={`${totalHoursActive}${\r\n                totalHoursActive === \"-\" ? \"\" : \" hrs\"\r\n              }`}\r\n            />\r\n            <StatsCard\r\n              name=\"Day Streak\"\r\n              value={`${streak} day${streak == 1 ? \"\" : \"s\"}`}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"stats-card\" id=\"interval-estimate\">\r\n            <header className=\"stats-card__header\">\r\n              <TrackChangesIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">\r\n                Interval Estimation Accuracy\r\n              </h2>\r\n            </header>\r\n            <p className=\"stats-card__header__info\">\r\n              How accurately you can guess the number of intervals required for\r\n              completing a task\r\n            </p>\r\n            <AccuracyMeter estimateAccuracy={estimateAccuracy} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <EmptyTasks\r\n          image={RegularShowBenson}\r\n          text=\"Your stats will appear once you start completing your tasks :P\"\r\n          alt=\"Benson wants you to do your job\"\r\n          height={300}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatsPage;\r\n","export default __webpack_public_path__ + \"static/media/illustration-woman-online-mobile.0ec5a893.svg\";","import React from \"react\";\r\nimport { Link, NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\n\r\nimport ProductivePerson from \"../../images/illustration-woman-online-mobile.svg\";\r\n\r\nfunction SideDrawer(props) {\r\n  const iconStyles = {\r\n    fontSize: 21,\r\n    fill: \"#707070\",\r\n  };\r\n\r\n  const activeIconStyles = {\r\n    fontSize: 21,\r\n    fill: \"#3d3d3d\",\r\n  };\r\n\r\n  const location = useLocation().pathname;\r\n  console.log(location);\r\n\r\n  return (\r\n    <div className={`side-drawer ${props.styles}`}>\r\n      <h1 className=\"side-drawer__heading\">Menu</h1>\r\n      <ul className=\"side-drawer__list\">\r\n        <li className=\"side-drawer__list__item\">\r\n          <HomeIcon style={location == \"/\" ? activeIconStyles : iconStyles} />\r\n          <Link to=\"/\">\r\n            <a\r\n              className={`side-drawer__list__item__link ${\r\n                location == \"/\" ? \"side-drawer__list__item__link--active\" : \"\"\r\n              }`}\r\n              onClick={props.linkClickHandle}\r\n            >\r\n              Home\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li className=\"side-drawer__list__item\">\r\n          <MenuBookIcon\r\n            style={\r\n              location == \"/pomodoro/session-manager\"\r\n                ? activeIconStyles\r\n                : iconStyles\r\n            }\r\n          />\r\n          <Link to=\"/pomodoro/session-manager\">\r\n            <a\r\n              className={`side-drawer__list__item__link ${\r\n                location == \"/pomodoro/session-manager\"\r\n                  ? \"side-drawer__list__item__link--active\"\r\n                  : \"\"\r\n              }`}\r\n              onClick={props.linkClickHandle}\r\n            >\r\n              Sessions\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li className=\"side-drawer__list__item\">\r\n          <ListAltIcon\r\n            style={\r\n              location == \"/task-manager/tasks\" ||\r\n              location == \"/task-manager/completed-tasks\"\r\n                ? activeIconStyles\r\n                : iconStyles\r\n            }\r\n          />\r\n          <Link to=\"/task-manager/tasks\">\r\n            <a\r\n              className={`side-drawer__list__item__link ${\r\n                location == \"/task-manager/tasks\" ||\r\n                location == \"/task-manager/completed-tasks\"\r\n                  ? \"side-drawer__list__item__link--active\"\r\n                  : \"\"\r\n              }`}\r\n              onClick={props.linkClickHandle}\r\n            >\r\n              Tasks\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li className=\"side-drawer__list__item\">\r\n          <LocalOfferIcon\r\n            style={\r\n              location == \"/task-manager/tags\" ? activeIconStyles : iconStyles\r\n            }\r\n          />\r\n          <Link to=\"/task-manager/tags\">\r\n            <a\r\n              className={`side-drawer__list__item__link ${\r\n                location == \"/task-manager/tags\"\r\n                  ? \"side-drawer__list__item__link--active\"\r\n                  : \"\"\r\n              }`}\r\n              onClick={props.linkClickHandle}\r\n            >\r\n              Tags\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li className=\"side-drawer__list__item\">\r\n          <BarChartIcon\r\n            style={location == \"/stats\" ? activeIconStyles : iconStyles}\r\n          />\r\n          <Link to=\"/stats\">\r\n            <a\r\n              className={`side-drawer__list__item__link ${\r\n                location == \"/stats\"\r\n                  ? \"side-drawer__list__item__link--active\"\r\n                  : \"\"\r\n              }`}\r\n              onClick={props.linkClickHandle}\r\n            >\r\n              Stats\r\n            </a>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <div className=\"empty-space\"></div>\r\n      <img\r\n        src={ProductivePerson}\r\n        alt=\"Woman looking at big screen\"\r\n        className=\"side-drawer__image\"\r\n      />\r\n      <h1 className=\"side-drawer__name\">Pomodoro</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import React from \"react\";\r\n\r\nfunction Overlay(props) {\r\n  return (\r\n    <div\r\n      className={`overlay ${props.styles}`}\r\n      onClick={props.overlayClickHandle}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default Overlay;\r\n","import React, { Component, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"../src/css/style.css\";\nimport HomePage from \"./components/Home Page/HomePage\";\nimport MobileNavBar from \"./components/NavBar/MobileNavBar\";\nimport TaskManager from \"./components/Task Manager/TaskManager\";\nimport SessionManager from \"./components/Session Manager/SessionManager\";\nimport Pomodoro from \"./components/Pomodoro/Pomodoro\";\nimport StatsPage from \"./components/Stats Page/StatsPage\";\nimport SideDrawer from \"./components/NavBar/SideDrawer\";\nimport Overlay from \"./components/NavBar/Overlay\";\n\nfunction App() {\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\n\n  const sideMenuHandle = function () {\n    const val = !isSideDrawerOpen;\n    setIsSideDrawerOpen(val);\n  };\n\n  const sidemenuClickHandle = function () {\n    sideMenuHandle();\n  };\n\n  const linkClickHandle = function () {\n    sideMenuHandle();\n  };\n\n  const overlayClickHandle = function () {\n    sideMenuHandle();\n  };\n\n  let sideDrawerStyle;\n  let overlayStyle;\n\n  if (isSideDrawerOpen === true) {\n    sideDrawerStyle = \"side-drawer--open\";\n    overlayStyle = \"overlay--open\";\n  } else if (isSideDrawerOpen === false) {\n    sideDrawerStyle = \"side-drawer--close\";\n    overlayStyle = \"overlay--close\";\n  }\n\n  return (\n    <div className=\"main\">\n      <SideDrawer styles={sideDrawerStyle} linkClickHandle={linkClickHandle} />\n      <Overlay overlayClickHandle={overlayClickHandle} styles={overlayStyle} />\n\n      <MobileNavBar sidemenuClickHandle={sidemenuClickHandle} />\n\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/task-manager\" component={TaskManager} />\n      <Route path=\"/session-manager\" component={SessionManager} />\n      <Route path=\"/pomodoro\" component={Pomodoro} />\n      <Route path=\"/stats\" component={StatsPage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}