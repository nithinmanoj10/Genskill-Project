{"version":3,"sources":["components/Button.js","images/illustration-working-brown.svg","components/Home Page/HeroBox.js","components/Home Page/HomePage.js","components/NavBar/MobileNavBar.js","components/Task Manager/TaskNavBar.js","components/Task Manager/Dates.js","components/Task Manager/CreateTask.js","components/Task Manager/TaskCard.js","images/Mordecai-Rigby-enjoying.png","components/Task Manager/EmptyTasks.js","components/Tag Manager/CreateTag.js","components/Task Manager/Tasks.js","images/Mordecai-Rigby-working.png","components/Task Manager/CompletedTasks.js","components/Tag Manager/TagCard.js","images/Mordecai-Rigby-pointing.png","components/Tag Manager/Tags.js","components/Task Manager/TaskManager.js","components/Session Manager/CreateSession.js","components/Session Manager/SessionCard.js","images/Rigby-reading.png","components/Timer Page/CurrentTask.js","sounds/start-sound.wav","components/Timer Page/ControlButton.js","components/Timer Page/TimeButton.js","sounds/end-sound.wav","components/Timer Page/Timer.js","components/Timer Page/CloseWarningMessage.js","components/Timer Page/TimerPage.js","components/Session Manager/SessionManager.js","components/Pomodoro/Pomodoro.js","components/Stats Page/TagDistribution.js","components/Stats Page/StatsPage.js","App.js","index.js"],"names":["Button","props","state","handleClick","text","to","href","className","onClick","this","Component","HeroBox","greeting","userName","hour","Date","getHours","setState","src","HeroBoxImage","alt","class","HomePage","MobileNavBar","TaskNavBar","getDate","date","day","String","padStart","month","toLocaleString","n","Number","getOrdinalNum","CreateTask","tasks","submitTaskHandle","tagsData","JSON","parse","localStorage","getItem","useState","taskTitle","setTaskTitle","taskTag","setTaskTag","taskEstimate","setTaskEstimate","taskDesc","setTaskDesc","taskTagsData","htmlFor","type","name","id","placeholder","onChange","e","target","value","selected","disabled","hidden","length","map","tag","cols","rows","preventDefault","obj","task_title","task_tag","task_estimate","task_desc","task_isCompleted","task_startDate","task_endDate","task_id","Math","random","push","setItem","stringify","TaskCard","task","tagStyles","forEach","color","colour","setTasks","style","updatedTasks","newTasks","filter","EmptyTasks","image","CreateTag","tagColour","setTagColour","tagName","setTagName","setTagData","tagData","newTag","tagTotalTime","Tasks","tasksData","pendingTasks","path","Data","RegularShowEnjoy","CompletedTasks","completedTasks","RegularShowWork","TagCard","colorStyles","backgroundColor","newTagData","Tags","RegularShowPoint","data","TaskManager","component","CreateSession","sessionData","setSessionData","sessionInfo","activeTime","shortBreak","longBreak","intervals","isStarted","isFinished","currentInterval","optionSelectHandle","title","defaultValue","min","max","description","SessionCard","session","sessionIsStarted","setSessionIsStarted","setCurrentSession","currentSession","updatedSessionData","CurrentTask","Timer","minutes","setMinutes","seconds","setSeconds","counter","setCounter","currentBlock","setCurrentBlock","blocks","totalBlocks","isRunning","setIsRunning","isReseted","setIsReseted","sessionTime","setSessionTime","isSession","setIsSession","setTimerIsStarted","useEffect","intervalId","setInterval","Audio","EndSound","play","console","log","updatedTagsData","clearInterval","StartSound","setTimeout","CloseWarningMessage","TimerPage","updatedSessionsData","timerIsStarted","SessionManager","RegularShowReading","Pomodoro","TagDistribution","tagLabels","setTagLabels","tagTime","setTagTime","tagColours","setTagColours","height","width","labels","datasets","borderColor","borderWidth","options","responsive","plugins","legend","position","display","StatsPage","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.336f0545.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      handleClick: props.handleClick,\r\n      text: props.text,\r\n      to: props.to,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        className=\"button button--basic\"\r\n        onClick={this.state.handleClick}\r\n        to={this.state.to}\r\n      >\r\n        {this.props.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/illustration-working-brown.24887bc9.svg\";","import React, { Component } from \"react\";\r\n\r\nimport HeroBoxImage from \"../../images/illustration-working-brown.svg\";\r\n\r\nexport default class HeroBox extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      greeting: \"\",\r\n      userName: \"Stranger\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var d = new Date();\r\n    const hour = d.getHours();\r\n\r\n    if (hour >= 0 && hour < 12) {\r\n      this.setState({\r\n        greeting: \"Good Morning\",\r\n      });\r\n    } else if (hour >= 12 && hour < 16) {\r\n      this.setState({\r\n        greeting: \"Good Afternoon\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        greeting: \"Good Evening\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero-box\">\r\n        <h3 className=\"greeting\">{this.state.greeting}</h3>\r\n        <h2 className=\"user-name\">{this.state.userName}</h2>\r\n        <img\r\n          src={HeroBoxImage}\r\n          alt=\"Girl looking at computer, being productive\"\r\n          className=\"hero-box__image\"\r\n        />\r\n        <p className=\"hero-box__description\">\r\n          Pomodoro will make your work easier and more\r\n          <span class=\"bold-text\"> productive</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../Button\";\r\nimport HeroBox from \"./HeroBox\";\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <HeroBox />\r\n        <div class=\"homepage__buttons\">\r\n          <Link to=\"/pomodoro/session-manager\">\r\n            <Button text=\"Start\" />\r\n          </Link>\r\n          <Link to=\"/task-manager/tasks\">\r\n            <Button text=\"View Tasks\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class MobileNavBar extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"mobile-navbar\">\r\n          <div className=\"app-name\">\r\n            <Link to=\"/\">\r\n              <h1>Pomodoro</h1>\r\n            </Link>\r\n          </div>\r\n          <Link to=\"/stats\" className=\"hamburger-menu\">\r\n            <img\r\n              src=\"https://img.icons8.com/material-outlined/24/000000/menu--v1.png\"\r\n              alt=\"Hamburger Menu Icon\"\r\n              className=\"hamburger-menu__icon\"\r\n            />\r\n          </Link>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class TaskNavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"task-nav-bar\">\r\n        <ul className=\"task-nav-bar__list\">\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/tasks\"\r\n            >\r\n              Tasks\r\n            </Link>\r\n          </li>\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/completed-tasks\"\r\n            >\r\n              Completed\r\n            </Link>\r\n          </li>\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/tags\"\r\n            >\r\n              Tags\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","function getOrdinalNum(day) {\r\n  var n = Number(day);\r\n  return (\r\n    n +\r\n    (n > 0\r\n      ? [\"th\", \"st\", \"nd\", \"rd\"][(n > 3 && n < 21) || n % 10 > 3 ? 0 : n % 10]\r\n      : \"\")\r\n  );\r\n}\r\nconst getDate = function () {\r\n  const date = new Date();\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = date.toLocaleString(\"default\", { month: \"long\" });\r\n  return getOrdinalNum(day) + \", \" + month;\r\n};\r\n\r\nexport { getDate };\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { getDate } from \"./Dates\";\r\n\r\nfunction CreateTask({ tasks, submitTaskHandle }) {\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [taskTag, setTaskTag] = useState(\"\");\r\n  const [taskEstimate, setTaskEstimate] = useState(\"\");\r\n  const [taskDesc, setTaskDesc] = useState(\"\");\r\n  const [taskTagsData, setTaskTagsData] = useState([...tagsData]);\r\n\r\n  const taskNameHandle = function (e) {\r\n    setTaskTitle(e.target.value);\r\n  };\r\n\r\n  const taskTagHandle = function (e) {\r\n    setTaskTag(e.target.value);\r\n  };\r\n\r\n  const taskEstimateHandle = function (e) {\r\n    setTaskEstimate(e.target.value);\r\n  };\r\n\r\n  const taskDescHandle = function (e) {\r\n    setTaskDesc(e.target.value);\r\n  };\r\n\r\n  const taskSubmitHandle = function (e) {\r\n    e.preventDefault();\r\n\r\n    const obj = {};\r\n    obj.task_title = taskTitle;\r\n    obj.task_tag = taskTag;\r\n    obj.task_estimate = taskEstimate;\r\n    obj.task_desc = taskDesc;\r\n    obj.task_isCompleted = false;\r\n    obj.task_startDate = getDate();\r\n    obj.task_endDate = \"-\";\r\n    obj.task_id = Math.random() * 100;\r\n\r\n    tasks.push(obj);\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(tasks));\r\n    submitTaskHandle(tasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-create\">\r\n      <header className=\"task-create__header\">\r\n        <h4 className=\"task-create__heading\">Create Task</h4>\r\n        <Link to=\"/task-manager/tasks\">\r\n          <CloseIcon className=\"close-icon\" />\r\n        </Link>\r\n      </header>\r\n\r\n      <form className=\"task-create__form\">\r\n        <label htmlFor=\"ttitle\" className=\"task-create__form__label\">\r\n          Task Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"tasktitle\"\r\n          id=\"ttitle\"\r\n          placeholder=\"Your Task Title\"\r\n          className=\"input__text\"\r\n          onChange={taskNameHandle}\r\n        />\r\n        <label htmlFor=\"ttag\" className=\"task-create__form__label\">\r\n          Tag\r\n        </label>\r\n        <select\r\n          name=\"tasktag\"\r\n          id=\"ttag\"\r\n          className=\"task-create__form__select\"\r\n          onChange={taskTagHandle}\r\n        >\r\n          <option value=\"\" selected disabled hidden></option>\r\n\r\n          {taskTagsData.length === 0 ? (\r\n            <option disabled>Make some Tags</option>\r\n          ) : (\r\n            taskTagsData.map(function (tag) {\r\n              return (\r\n                <option value={`${tag.name}`} id={tag.id}>\r\n                  {tag.name}\r\n                </option>\r\n              );\r\n            })\r\n          )}\r\n        </select>\r\n        <label htmlFor=\"testimate\" className=\"task-create__form__label\">\r\n          Estimated Intervals to Complete\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"taskestimate\"\r\n          id=\"testimate\"\r\n          placeholder=\"Intervals\"\r\n          className=\"input__number\"\r\n          onChange={taskEstimateHandle}\r\n        />\r\n\r\n        <label htmlFor=\"tdescription\" className=\"task-create__form__label\">\r\n          Description\r\n        </label>\r\n        <textarea\r\n          name=\"taskdescription\"\r\n          id=\"tdescription\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"Description for your Task...\"\r\n          className=\"task-create__form__description\"\r\n          onChange={taskDescHandle}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input__button\"\r\n          type=\"submit\"\r\n          onClick={taskSubmitHandle}\r\n        >\r\n          <Link to=\"/task-manager/tasks\" class=\"input__button__link\">\r\n            <h4>Create Task</h4>\r\n          </Link>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;\r\n","import React from \"react\";\r\n\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\n\r\nimport { getDate } from \"./Dates\";\r\n\r\nfunction TaskCard(props) {\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n\r\n  const {\r\n    task_tag,\r\n    task_title,\r\n    task_desc,\r\n    task_estimate,\r\n    task_id,\r\n    task_startDate,\r\n    task_endDate,\r\n    task_isCompleted,\r\n  } = props.task;\r\n\r\n  const tagStyles = {};\r\n\r\n  if (tagsData.length !== 0) {\r\n    tagsData.forEach(function (tag) {\r\n      if (tag.name === task_tag) {\r\n        tagStyles.color = tag.colour;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  const { tasks, setTasks } = props;\r\n\r\n  const deleteHandle = function () {\r\n    const newTasks = tasks.filter((task) => task_id !== task.task_id);\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(newTasks));\r\n    setTasks([...newTasks]);\r\n  };\r\n\r\n  const completeHandle = function () {\r\n    const updatedTasks = tasks.map(function (task) {\r\n      if (task_id === task.task_id) {\r\n        task.task_isCompleted = true;\r\n        task.task_endDate = getDate();\r\n      }\r\n      return task;\r\n    });\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(updatedTasks));\r\n    setTasks([...updatedTasks]);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`task-card ${\r\n        task_isCompleted === true ? \"task-card--completed\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"task-info\">\r\n        <p className=\"task-info__tag\" style={tagStyles}>\r\n          {task_tag}\r\n        </p>\r\n        <h4 className=\"task-info__name\">{task_title}</h4>\r\n        <p className=\"task-info__desc\">{task_desc}</p>\r\n      </div>\r\n      <div className=\"task-card__actions\">\r\n        <button className=\"task-card__actions__button\" onClick={completeHandle}>\r\n          <CheckCircleIcon className=\"task-icon task-icon--done\" />\r\n        </button>\r\n        <button className=\"task-card__actions__button\" onClick={deleteHandle}>\r\n          <DeleteIcon className=\"task-icon task-icon--delete\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"task-card__time\">\r\n        <ScheduleIcon className=\"task-icon--time\" />\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">Estimated Time</p>\r\n          <p className=\"time-stat__value\">{task_estimate} mins</p>\r\n        </div>\r\n        <TodayIcon className=\"task-icon--time\" />\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">Start</p>\r\n          <p className=\"time-stat__value\">{task_startDate}</p>\r\n        </div>\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">End</p>\r\n          <p className=\"time-stat__value\">{task_endDate}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-enjoying.89e2f180.png\";","import React from \"react\";\r\n\r\nimport RegularShowEnjoy from \"../../images/Mordecai-Rigby-enjoying.png\";\r\n\r\nfunction EmptyTasks(props) {\r\n  return (\r\n    <div className=\"regular-show\">\r\n      <img src={props.image} alt={props.alt} className=\"regular-show__pic\" />\r\n      <p className=\"regular-show__text\">{props.text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyTasks;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { tagsData, updateTagData } from \"./TagsData\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction CreateTag(props) {\r\n  const { tagColour, setTagColour, tagName, setTagName, setTagData, tagData } =\r\n    props;\r\n\r\n  const tagNameHandle = function (e) {\r\n    setTagName(e.target.value);\r\n  };\r\n\r\n  const tagColourHandle = function (e) {\r\n    setTagColour(e.target.value);\r\n  };\r\n\r\n  const tagSubmitHandle = function () {\r\n    const newTag = {\r\n      name: tagName,\r\n      colour: tagColour,\r\n      id: Math.random() * 100,\r\n      tagTotalTime: 0,\r\n    };\r\n\r\n    tagData.push(newTag);\r\n    localStorage.setItem(\"tagsData\", JSON.stringify(tagData));\r\n    setTagData([...tagData]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-create\">\r\n      <form className=\"tag-create__form\">\r\n        <div className=\"tag-create__data\">\r\n          <label htmlFor=\"tgname\" className=\"tag-create__form__label\">\r\n            Tag Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"TagName\"\r\n            id=\"tgname\"\r\n            className=\"input__text\"\r\n            onChange={tagNameHandle}\r\n          />\r\n          <label htmlFor=\"tgcolour\" className=\"tag-create__form__label\">\r\n            Tag Colour\r\n          </label>\r\n          <div className=\"input__colour\">\r\n            <input\r\n              type=\"color\"\r\n              name=\"TagColour\"\r\n              id=\"tgcolour\"\r\n              className=\"input__colour__picker\"\r\n              onChange={tagColourHandle}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"tag-create__close\">\r\n          <Link to=\"/task-manager/tags\">\r\n            <CloseIcon />\r\n          </Link>\r\n        </div>\r\n        <div className=\"tag-create__submit\">\r\n          <button\r\n            className=\"input__button\"\r\n            type=\"submit\"\r\n            onClick={tagSubmitHandle}\r\n          >\r\n            <Link to=\"/task-manager/tags\" class=\"input__button__link\">\r\n              <h4>Create Tag</h4>\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTag;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CreateTask from \"./CreateTask\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport EmptyTasks from \"./EmptyTasks\";\r\n\r\nimport RegularShowEnjoy from \"../../images/Mordecai-Rigby-enjoying.png\";\r\nimport CreateTag from \"../Tag Manager/CreateTag\";\r\n\r\nfunction Tasks() {\r\n  const tasksData = JSON.parse(localStorage.getItem(\"tasksData\") || \"[]\");\r\n  const [tasks, setTasks] = useState([...tasksData]);\r\n\r\n  const pendingTasks = tasksData.filter((task) => {\r\n    if (task.task_isCompleted == false) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  const submitTaskHandle = function (Data) {\r\n    setTasks([...Data]);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-section\">\r\n        <header className=\"task-section__header\">\r\n          <h2 className=\"heading\">Tasks</h2>\r\n          <Link to=\"/task-manager/tasks/create-task\" className=\"add-task\">\r\n            <h4>New Task</h4>\r\n            <AddIcon className=\"add-task__icon\" />\r\n          </Link>\r\n        </header>\r\n\r\n        <Switch>\r\n          <Route path=\"/task-manager/tasks/create-task\">\r\n            <CreateTask submitTaskHandle={submitTaskHandle} tasks={tasks} />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {pendingTasks.length == 0 ? (\r\n          <EmptyTasks\r\n            image={RegularShowEnjoy}\r\n            text=\"You have no tasks for now. Go and have some fun :)\"\r\n            alt=\"Moredecai and Rigby enjoying\"\r\n          />\r\n        ) : (\r\n          <ul className=\"task-list\">\r\n            {tasks.map((task) => {\r\n              if (task.task_isCompleted == false) {\r\n                return (\r\n                  <TaskCard\r\n                    key={task.task_id}\r\n                    task={task}\r\n                    tasks={tasks}\r\n                    setTasks={setTasks}\r\n                  />\r\n                );\r\n              }\r\n              return \"\";\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-working.8610382c.png\";","import React, { Component, useState } from \"react\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport EmptyTasks from \"./EmptyTasks\";\r\n\r\nimport RegularShowWork from \"../../images/Mordecai-Rigby-working.png\";\r\n\r\nfunction CompletedTasks() {\r\n  const tasksData = JSON.parse(localStorage.getItem(\"tasksData\") || \"[]\");\r\n  const [tasks, setTasks] = useState([...tasksData]);\r\n\r\n  const completedTasks = tasksData.filter((task) => {\r\n    if (task.task_isCompleted == true) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"task-section\">\r\n      <header className=\"task-section__header\">\r\n        <h2 className=\"heading\">Completed Tasks</h2>\r\n      </header>\r\n      {completedTasks.length == 0 ? (\r\n        <EmptyTasks\r\n          image={RegularShowWork}\r\n          text=\"You haven't completed any tasks. Now get back to work ;)\"\r\n          alt=\"Moredecai and Rigby Working\"\r\n        />\r\n      ) : (\r\n        <ul className=\"task-list\">\r\n          {completedTasks.map((task) => {\r\n            return (\r\n              <TaskCard\r\n                key={task.task_id}\r\n                task={task}\r\n                tasks={tasks}\r\n                setTasks={setTasks}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompletedTasks;\r\n","import React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction TagCard({ name, colour, id, tagData, setTagData }) {\r\n  const deleteTagHandle = function () {\r\n    const newTagData = tagData.filter(function (tag) {\r\n      if (tag.id !== id) {\r\n        return tag;\r\n      }\r\n    });\r\n    setTagData([...newTagData]);\r\n    localStorage.setItem(\"tagsData\", JSON.stringify(newTagData));\r\n  };\r\n\r\n  const colorStyles = {\r\n    backgroundColor: colour,\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-card\">\r\n      <div className=\"tag-card__colour\" style={colorStyles}></div>\r\n      <h3 className=\"tag-card__name\">{name}</h3>\r\n      <div className=\"tag-card__close\">\r\n        <CloseIcon\r\n          className=\"tag-card__close__icon\"\r\n          onClick={deleteTagHandle}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-pointing.e3f7fdfd.png\";","import React, { Component, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateTag from \"./CreateTag\";\r\nimport TagCard from \"./TagCard\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\n\r\nimport RegularShowPoint from \"../../images/Mordecai-Rigby-pointing.png\";\r\n\r\nfunction Tags() {\r\n  const [tagColour, setTagColour] = useState(\"#000\");\r\n  const [tagName, setTagName] = useState(\"\");\r\n\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n  const [tagData, setTagData] = useState([...tagsData]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-section\">\r\n        <header className=\"task-section__header\">\r\n          <h2 className=\"heading\">Tags</h2>\r\n          <Link to=\"/task-manager/tags/create-tag\" className=\"add-task\">\r\n            <h4>New Tag</h4>\r\n            <AddIcon className=\"add-task__icon\" />\r\n          </Link>\r\n        </header>\r\n        <p className=\"warning\">\r\n          Recommended that you don't delete any tags and you choose a dark\r\n          colour\r\n        </p>\r\n\r\n        <Switch>\r\n          <Route path=\"/task-manager/tags/create-tag\">\r\n            <CreateTag\r\n              tagColour={tagColour}\r\n              setTagColour={setTagColour}\r\n              tagName={tagName}\r\n              setTagName={setTagName}\r\n              setTagData={setTagData}\r\n              tagData={tagData}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {tagsData.length === 0 ? (\r\n          <EmptyTasks\r\n            image={RegularShowPoint}\r\n            text=\"C'mon, create tags so you can track your tasks and be more productive :O\"\r\n            alt=\"Moredecai and Rigby Pointing\"\r\n          />\r\n        ) : (\r\n          <div className=\"tag-gallery\">\r\n            {tagData.map(function (data) {\r\n              return (\r\n                <TagCard\r\n                  name={data.name}\r\n                  colour={data.colour}\r\n                  id={data.id}\r\n                  setTagData={setTagData}\r\n                  tagData={tagData}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Tags;\r\n","import React, { Component } from \"react\";\r\nimport TaskNavBar from \"./TaskNavBar\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Tasks from \"./Tasks\";\r\nimport CompletedTasks from \"./CompletedTasks\";\r\nimport Tags from \"../Tag Manager/Tags\";\r\n\r\nfunction TaskManager() {\r\n  return (\r\n    <Router>\r\n      <div className=\"task-manager\">\r\n        <TaskNavBar />\r\n        <Switch>\r\n          <Route path=\"/task-manager/tasks\" component={Tasks} />\r\n          <Route\r\n            path=\"/task-manager/completed-tasks\"\r\n            component={CompletedTasks}\r\n          />\r\n          <Route path=\"/task-manager/tags\" component={Tags} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TaskManager;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction CreateSession({ sessionData, setSessionData }) {\r\n  const tasksData = JSON.parse(\r\n    localStorage.getItem(\"tasksData\") || \"[]\"\r\n  ).filter(function (task) {\r\n    if (task.task_isCompleted === false) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  const sessionInfo = {\r\n    id: Math.random() * 100,\r\n    activeTime: 25,\r\n    shortBreak: 5,\r\n    longBreak: 30,\r\n    intervals: 4,\r\n    isStarted: false,\r\n    isFinished: false,\r\n    currentInterval: 0,\r\n  };\r\n\r\n  const sessionTitleHandle = function (e) {\r\n    sessionInfo.title = e.target.value;\r\n  };\r\n  const sessionActiveTimeHandle = function (e) {\r\n    sessionInfo.activeTime = e.target.value;\r\n  };\r\n  const sessionShortBreakHandle = function (e) {\r\n    sessionInfo.shortBreak = e.target.value;\r\n  };\r\n  const sessionLongBreakHandle = function (e) {\r\n    sessionInfo.longBreak = e.target.value;\r\n  };\r\n  const sessionTaskHandle = function (e) {\r\n    sessionInfo.task = e.target.value;\r\n  };\r\n  const sessionIntervalsHandle = function (e) {\r\n    sessionInfo.intervals = e.target.value;\r\n  };\r\n  const sessionDescriptionHandle = function (e) {\r\n    sessionInfo.description = e.target.value;\r\n  };\r\n\r\n  const optionSelectHandle = function (e) {\r\n    sessionInfo.task_id = e.target.id;\r\n\r\n    tasksData.forEach(function (task) {\r\n      if (task.task_id == e.target.id) {\r\n        sessionInfo.tag = task.task_tag;\r\n      }\r\n    });\r\n  };\r\n\r\n  const sessionSubmitHandle = function () {\r\n    sessionData.push(sessionInfo);\r\n    setSessionData([...sessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(sessionData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-create\">\r\n      <header className=\"session-create__header\">\r\n        <h4 className=\"session-create__heading\">Create Session</h4>\r\n        <Link to=\"/pomodoro/session-manager\">\r\n          <CloseIcon className=\"close-icon\" />\r\n        </Link>\r\n      </header>\r\n\r\n      <form className=\"session-create__form\">\r\n        <label htmlFor=\"stitle\" className=\"session-create__form__label\">\r\n          Session Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"sessiontitle\"\r\n          id=\"stitle\"\r\n          placeholder=\"Your Session Title\"\r\n          className=\"input__text\"\r\n          onChange={sessionTitleHandle}\r\n        />\r\n\r\n        <label htmlFor=\"sstudytime\" className=\"session-create__form__label\">\r\n          Active Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionStudyTime\"\r\n          id=\"sstudytime\"\r\n          className=\"input__number\"\r\n          onChange={sessionActiveTimeHandle}\r\n          defaultValue=\"25\"\r\n          min=\"10\"\r\n          max=\"120\"\r\n        />\r\n\r\n        <label\r\n          htmlFor=\"sshortbreaktime\"\r\n          className=\"session-create__form__label\"\r\n        >\r\n          Short Break Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionShortBreakTime\"\r\n          id=\"sshortbreaktime\"\r\n          className=\"input__number\"\r\n          onChange={sessionShortBreakHandle}\r\n          defaultValue=\"5\"\r\n          min=\"5\"\r\n          max=\"20\"\r\n        />\r\n\r\n        <label htmlFor=\"slongbreaktime\" className=\"session-create__form__label\">\r\n          Long Break Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionLongBreakTime\"\r\n          id=\"slongbreaktime\"\r\n          className=\"input__number\"\r\n          onChange={sessionLongBreakHandle}\r\n          defaultValue=\"30\"\r\n          min=\"20\"\r\n          max=\"60\"\r\n        />\r\n\r\n        <label htmlFor=\"stask\" className=\"session-create__form__label\">\r\n          Task\r\n        </label>\r\n        <select\r\n          name=\"sessiontask\"\r\n          id=\"stask\"\r\n          className=\"session-create__form__select\"\r\n          onChange={sessionTaskHandle}\r\n        >\r\n          <option value=\"\" selected disabled hidden></option>\r\n\r\n          {tasksData.length === 0 ? (\r\n            <option disabled>Create some Tasks</option>\r\n          ) : (\r\n            tasksData.map(function (tasks) {\r\n              return (\r\n                <option\r\n                  value={`${tasks.task_title}`}\r\n                  id={tasks.task_id}\r\n                  onClick={optionSelectHandle}\r\n                >\r\n                  {tasks.task_title}\r\n                </option>\r\n              );\r\n            })\r\n          )}\r\n        </select>\r\n        <label htmlFor=\"sintervals\" className=\"session-create__form__label\">\r\n          Number of Intervals\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"sessionintervals\"\r\n          id=\"sintervals\"\r\n          className=\"input__number\"\r\n          onChange={sessionIntervalsHandle}\r\n          defaultValue=\"4\"\r\n          min=\"1\"\r\n          max=\"12\"\r\n        />\r\n\r\n        <label htmlFor=\"tdescription\" className=\"session-create__form__label\">\r\n          Description\r\n        </label>\r\n        <textarea\r\n          name=\"sessiondescription\"\r\n          id=\"tdescription\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"Description for your Session...\"\r\n          className=\"session-create__form__description\"\r\n          onChange={sessionDescriptionHandle}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input__button\"\r\n          type=\"submit\"\r\n          onClick={sessionSubmitHandle}\r\n        >\r\n          <Link to=\"/pomodoro/session-manager\" class=\"input__button__link\">\r\n            <h4>Create Session</h4>\r\n          </Link>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateSession;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nfunction SessionCard(props) {\r\n  const {\r\n    id,\r\n    activeTime,\r\n    shortBreak,\r\n    longBreak,\r\n    isStarted,\r\n    isFinished,\r\n    title,\r\n    task,\r\n    currentInterval,\r\n    intervals,\r\n    description,\r\n  } = props.session;\r\n\r\n  const [sessionIsStarted, setSessionIsStarted] = useState(\r\n    props.session.isStarted\r\n  );\r\n\r\n  const { sessionData, setSessionData } = props;\r\n\r\n  // to get the details of the current session\r\n  const { currentSession, setCurrentSession } = props;\r\n\r\n  const sessionDeleteHandle = function () {\r\n    const updatedSessionData = sessionData.filter(function (session) {\r\n      if (id !== session.id) {\r\n        return session;\r\n      }\r\n    });\r\n\r\n    setSessionData([...updatedSessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionData));\r\n  };\r\n\r\n  const gotoSessionHandle = function () {\r\n    setSessionIsStarted(true);\r\n\r\n    // need to update sessionIsStarted\r\n    // updates that data in the local storage as well\r\n    const updatedSessionData = sessionData.filter(function (session) {\r\n      if (id === session.id) {\r\n        session.isStarted = true;\r\n      }\r\n      return session;\r\n    });\r\n\r\n    setSessionData([...updatedSessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionData));\r\n\r\n    setCurrentSession(props.session);\r\n  };\r\n\r\n  return (\r\n    <div className=\"session-card\">\r\n      <div className=\"session-card__info\">\r\n        <h4 className=\"session-card__info__name\">{title}</h4>\r\n        <p className=\"session-card__info__task\">{task}</p>\r\n        <p className=\"session-card__info__description\">{description}</p>\r\n      </div>\r\n      <div className=\"session-card__actions\">\r\n        <button\r\n          className=\"session-card__actions__button\"\r\n          onClick={sessionDeleteHandle}\r\n        >\r\n          <DeleteIcon />\r\n        </button>\r\n\r\n        {isFinished === false ? (\r\n          <Link to=\"/pomodoro/timer\">\r\n            <button\r\n              className=\"session-card__actions__button\"\r\n              onClick={gotoSessionHandle}\r\n            >\r\n              <KeyboardArrowRightIcon />\r\n            </button>\r\n          </Link>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n      <div className=\"session-card__status\">\r\n        <div className=\"session-card__status__stat\">\r\n          <p className=\"session-card__status__stat__name\">Status: </p>\r\n          {isFinished === true ? (\r\n            <p className=\"session-card__status__stat__value session-card__status__stat__value--finished \">\r\n              Finished\r\n            </p>\r\n          ) : sessionIsStarted === true ? (\r\n            <p className=\"session-card__status__stat__value session-card__status__stat__value--started \">\r\n              Started\r\n            </p>\r\n          ) : (\r\n            <p className=\"session-card__status__stat__value\">Not Started</p>\r\n          )}\r\n        </div>\r\n        <div className=\"session-card__status__stat\">\r\n          <p className=\"session-card__status__stat__name\">Progress:</p>\r\n          <p className=\"session-card__status__stat__value\">\r\n            {currentInterval}/{intervals}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SessionCard;\r\n","export default __webpack_public_path__ + \"static/media/Rigby-reading.343b8b6a.png\";","import React, { Component } from \"react\";\r\n\r\nexport default class CurrentTask extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      task: props.task,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"current-task\">\r\n        <h3 className=\"current-task__heading\">Current Task</h3>\r\n        <h4 className=\"current-task__name\">{this.state.task}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/start-sound.70f7d22e.wav\";","import React, { Component } from \"react\";\r\n\r\nexport default class CancelButton extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      text: props.text,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <a href=\"javascript:void(0)\" className=\"button button--cancel\">\r\n        {this.state.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class DoneButton extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      text: props.text,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a href=\"javascript:void(0)\" className=\"button button--basic\">\r\n        {this.state.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/end-sound.1154923f.wav\";","import React, { useState, useEffect } from \"react\";\r\nimport ControlButton from \"./ControlButton\";\r\nimport TimeButton from \"./TimeButton\";\r\n\r\nimport StartSound from \"../../sounds/start-sound.wav\";\r\nimport EndSound from \"../../sounds/end-sound.wav\";\r\n\r\nfunction Timer(props) {\r\n  const [minutes, setMinutes] = useState(props.activeTime);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const [currentBlock, setCurrentBlock] = useState(props.currentBlock);\r\n  const [totalBlocks, settotalBlocks] = useState(props.blocks);\r\n\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isReseted, setIsReseted] = useState(true);\r\n\r\n  // total active time for this session\r\n  const [sessionTime, setSessionTime] = useState(0);\r\n\r\n  const { activeTime, shortBreak, longBreak } = props;\r\n  const { currentSession, setCurrentSession } = props;\r\n  const { isSession, setIsSession } = props;\r\n  const { setTimerIsStarted } = props;\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    if (isRunning === true) {\r\n      setTimerIsStarted(true);\r\n      intervalId = setInterval(() => {\r\n        if (seconds === 0) {\r\n          if (minutes !== 0) {\r\n            setMinutes(minutes - 1);\r\n            setSeconds(59);\r\n\r\n            if (isSession === true) {\r\n              setSessionTime(sessionTime + 1);\r\n            }\r\n          } else {\r\n            const endSound = new Audio(EndSound);\r\n            endSound.play();\r\n\r\n            if (isSession === true) {\r\n              currentSession.currentInterval = currentBlock + 1;\r\n              setCurrentSession(currentSession);\r\n              setCurrentBlock((currentBlock) => currentBlock + 1);\r\n              setIsReseted(false);\r\n              setIsSession(false);\r\n\r\n              if (currentBlock + 1 == totalBlocks) {\r\n                currentSession.isFinished = true;\r\n              }\r\n\r\n              // update the tagsData in localstorage, by updating the tag time with sessionTime\r\n              const tagsData = JSON.parse(localStorage.getItem(\"tagsData\"));\r\n              console.log(tagsData);\r\n\r\n              const updatedTagsData = tagsData.map(function (tag) {\r\n                if (tag.name === currentSession.tag) {\r\n                  tag.tagTotalTime = tag.tagTotalTime + sessionTime;\r\n                  setSessionTime(0);\r\n                }\r\n                return tag;\r\n              });\r\n\r\n              localStorage.setItem(\"tagsData\", JSON.stringify(updatedTagsData));\r\n            }\r\n\r\n            console.log(sessionTime);\r\n            setIsRunning(false);\r\n            return;\r\n          }\r\n        } else {\r\n          setSeconds(seconds - 1);\r\n          if (isSession === true) {\r\n            setSessionTime(sessionTime + 1);\r\n          }\r\n        }\r\n\r\n        setCounter((counter) => counter + 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [isRunning, counter]);\r\n\r\n  const startHandle = function () {\r\n    if (currentSession.isFinished !== true && isReseted == true) {\r\n      const startSound = new Audio(StartSound);\r\n      startSound.play();\r\n      setTimeout(() => {\r\n        setIsRunning(true);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const pauseHandle = function () {\r\n    if (currentSession.isFinished !== true) {\r\n      setIsRunning(false);\r\n    }\r\n    console.log(sessionTime);\r\n  };\r\n\r\n  const pomodoroHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(true);\r\n      setMinutes(activeTime);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  const shortBreakHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(false);\r\n      setMinutes(shortBreak);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  const longBreakHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(false);\r\n      setMinutes(longBreak);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <h1 className=\"timer__value\">\r\n        {minutes < 10 ? \"0\" : \"\"}\r\n        {minutes}:{seconds < 10 ? \"0\" : \"\"}\r\n        {seconds}\r\n      </h1>\r\n      <p className=\"timer__session\">\r\n        {currentBlock}/{totalBlocks}\r\n      </p>\r\n      <div className=\"timerpage__controls\">\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"button button--basic\"\r\n          onClick={startHandle}\r\n        >\r\n          Start\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"button button--basic\"\r\n          onClick={pauseHandle}\r\n        >\r\n          Pause\r\n        </a>\r\n      </div>\r\n\r\n      <div class=\"timerpage__buttons\">\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={pomodoroHandle}\r\n        >\r\n          <h4>Pomodoro</h4>\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={shortBreakHandle}\r\n        >\r\n          <h4>Short Break</h4>\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={longBreakHandle}\r\n        >\r\n          <h4>Long Break</h4>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CloseWarningMessage() {\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"close-warning\">\r\n        <p className=\"close-warning__message\">\r\n          Are you sure you want to go back?\r\n        </p>\r\n        <div className=\"close-warning__action\">\r\n          <Link\r\n            to=\"/pomodoro/timer/\"\r\n            className=\"close-warning__action__buttons close-warning__action__buttons--green\"\r\n          >\r\n            Stay Here\r\n          </Link>\r\n          <Link\r\n            to=\"/pomodoro/session-manager\"\r\n            className=\"close-warning__action__buttons close-warning__action__buttons--red\"\r\n          >\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CloseWarningMessage;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CurrentTask from \"./CurrentTask\";\r\nimport Timer from \"./Timer\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport CloseWarningMessage from \"./CloseWarningMessage\";\r\n\r\nfunction TimerPage({ currentSession, setCurrentSession }) {\r\n  useEffect(() => {\r\n    return () => {\r\n      const sessionsData = JSON.parse(\r\n        localStorage.getItem(\"sessionsData\") || \"[]\"\r\n      );\r\n\r\n      const updatedSessionsData = sessionsData.map(function (session) {\r\n        if (currentSession.id === session.id) {\r\n          return currentSession;\r\n        }\r\n        return session;\r\n      });\r\n\r\n      localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionsData));\r\n    };\r\n  }, []);\r\n\r\n  const {\r\n    activeTime,\r\n    shortBreak,\r\n    longBreak,\r\n    currentInterval: currentBlock,\r\n    intervals: blocks,\r\n  } = currentSession;\r\n\r\n  const [isSession, setIsSession] = useState(true);\r\n  const [timerIsStarted, setTimerIsStarted] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"timerpage\">\r\n        <div className=\"timerpage__back\">\r\n          <Link\r\n            to={`${\r\n              timerIsStarted === false\r\n                ? \"/pomodoro/session-manager\"\r\n                : \"/pomodoro/timer/close-message\"\r\n            }`}\r\n          >\r\n            <ArrowBackIosIcon />\r\n          </Link>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route path=\"/pomodoro/timer/close-message\">\r\n            <CloseWarningMessage />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {isSession === true ? (\r\n          <CurrentTask task={currentSession.task} />\r\n        ) : (\r\n          <div className=\"break-time\">\r\n            <h3>Break Time</h3>\r\n            <h4>Time for rest</h4>\r\n          </div>\r\n        )}\r\n        <Timer\r\n          activeTime={activeTime}\r\n          shortBreak={shortBreak}\r\n          longBreak={longBreak}\r\n          currentBlock={currentBlock}\r\n          blocks={blocks}\r\n          currentSession={currentSession}\r\n          setCurrentSession={setCurrentSession}\r\n          isSession={isSession}\r\n          setIsSession={setIsSession}\r\n          setTimerIsStarted={setTimerIsStarted}\r\n        />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TimerPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateSession from \"./CreateSession\";\r\nimport SessionCard from \"./SessionCard\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\nimport RegularShowReading from \"../../images/Rigby-reading.png\";\r\nimport TimerPage from \"../Timer Page/TimerPage\";\r\n\r\nfunction SessionManager({ currentSession, setCurrentSession }) {\r\n  let [sessionData, setSessionData] = useState([]);\r\n  useEffect(() => {\r\n    setSessionData([\r\n      ...JSON.parse(localStorage.getItem(\"sessionsData\") || \"[]\"),\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-manager\">\r\n        <div className=\"task-section\">\r\n          <header className=\"task-section__header\">\r\n            <h2 className=\"heading\">Sessions</h2>\r\n            <Link\r\n              to=\"/pomodoro/session-manager/create-session\"\r\n              className=\"add-task\"\r\n            >\r\n              <h4>New Session</h4>\r\n              <AddIcon className=\"add-task__icon\" />\r\n            </Link>\r\n          </header>\r\n          <Switch>\r\n            <Route path=\"/pomodoro/session-manager/create-session\">\r\n              <CreateSession\r\n                sessionData={sessionData}\r\n                setSessionData={setSessionData}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n          {sessionData.length === 0 ? (\r\n            <EmptyTasks\r\n              image={RegularShowReading}\r\n              text=\"Create a session and let's get productive :D\"\r\n              alt=\"Rigby Reading\"\r\n            />\r\n          ) : (\r\n            sessionData.map(function (session) {\r\n              return (\r\n                <SessionCard\r\n                  session={session}\r\n                  sessionData={sessionData}\r\n                  setSessionData={setSessionData}\r\n                  currentSession={currentSession}\r\n                  setCurrentSession={setCurrentSession}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default SessionManager;\r\n","import React, { useState } from \"react\";\r\nimport SessionManager from \"../Session Manager/SessionManager\";\r\nimport TimerPage from \"../Timer Page/TimerPage\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction Pomodoro() {\r\n  // currentSession stores all the details of the session we click on\r\n  const [currentSession, setCurrentSession] = useState({});\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"pomodoro\">\r\n        <Switch>\r\n          <Route path=\"/pomodoro/session-manager\">\r\n            <SessionManager\r\n              currentSession={currentSession}\r\n              setCurrentSession={setCurrentSession}\r\n            />\r\n          </Route>\r\n          <Route path=\"/pomodoro/timer\">\r\n            <TimerPage\r\n              currentSession={currentSession}\r\n              setCurrentSession={setCurrentSession}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nfunction TagDistribution(props) {\r\n  const [tagLabels, setTagLabels] = useState([]);\r\n  const [tagTime, setTagTime] = useState([]);\r\n  const [tagColours, setTagColours] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const tagData = JSON.parse(localStorage.getItem(\"tagsData\"));\r\n\r\n    setTagLabels(\r\n      tagData.map(function (tag) {\r\n        return tag.name;\r\n      })\r\n    );\r\n\r\n    setTagTime(\r\n      tagData.map(function (tag) {\r\n        return tag.tagTotalTime / 60;\r\n      })\r\n    );\r\n\r\n    setTagColours(\r\n      tagData.map(function (tag) {\r\n        return tag.colour;\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const getTagDetails = function () {};\r\n\r\n  return (\r\n    <div className=\"tag-distribution\">\r\n      {/* {tagData.map(function (tag) {\r\n        return (\r\n          <p>\r\n            {tag.name}, {tag.tagTotalTime}. {tag.colour}\r\n          </p>\r\n        );\r\n      })} */}\r\n      <h1>\r\n        {tagTime[0]}, {tagColours[0]}, {tagLabels[0]}\r\n      </h1>\r\n      <Pie\r\n        height={400}\r\n        width={600}\r\n        data={{\r\n          labels: tagLabels,\r\n          datasets: [\r\n            {\r\n              data: tagTime,\r\n              backgroundColor: tagColours,\r\n              borderColor: tagColours,\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }}\r\n        // data={{\r\n        //   labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n        //   datasets: [\r\n        //     {\r\n        //       label: \"# of Votes\",\r\n        //       data: [12, 19, 3, 5, 2, 3],\r\n        //       backgroundColor: [\r\n        //         \"rgba(255, 99, 132, 0.2)\",\r\n        //         \"rgba(54, 162, 235, 0.2)\",\r\n        //         \"rgba(255, 206, 86, 0.2)\",\r\n        //         \"rgba(75, 192, 192, 0.2)\",\r\n        //         \"rgba(153, 102, 255, 0.2)\",\r\n        //         \"rgba(255, 159, 64, 0.2)\",\r\n        //       ],\r\n        //       borderColor: [\r\n        //         \"rgba(255, 99, 132, 1)\",\r\n        //         \"rgba(54, 162, 235, 1)\",\r\n        //         \"rgba(255, 206, 86, 1)\",\r\n        //         \"rgba(75, 192, 192, 1)\",\r\n        //         \"rgba(153, 102, 255, 1)\",\r\n        //         \"rgba(255, 159, 64, 1)\",\r\n        //       ],\r\n        //       borderWidth: 1,\r\n        //     },\r\n        //   ],\r\n        // }}\r\n        options={{\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: \"top\",\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: \"Chart.js Pie Chart\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagDistribution;\r\n","import React, { useState } from \"react\";\r\nimport TagDistribution from \"./TagDistribution\";\r\n\r\nfunction StatsPage() {\r\n  return (\r\n    <div className=\"task-section\">\r\n      <header className=\"task-section__header\">\r\n        <h2 className=\"heading\">HeHe</h2>\r\n      </header>\r\n\r\n      <TagDistribution />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatsPage;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"../src/css/style.css\";\nimport HomePage from \"./components/Home Page/HomePage\";\nimport MobileNavBar from \"./components/NavBar/MobileNavBar\";\nimport TaskManager from \"./components/Task Manager/TaskManager\";\nimport SessionManager from \"./components/Session Manager/SessionManager\";\nimport Pomodoro from \"./components/Pomodoro/Pomodoro\";\nimport StatsPage from \"./components/Stats Page/StatsPage\";\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <MobileNavBar />\n\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/task-manager\" component={TaskManager} />\n      <Route path=\"/session-manager\" component={SessionManager} />\n      <Route path=\"/pomodoro\" component={Pomodoro} />\n      <Route path=\"/stats\" component={StatsPage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}