{"version":3,"sources":["components/Button.js","images/illustration-working-brown.svg","components/Home Page/HeroBox.js","components/Home Page/HomePage.js","components/NavBar/MobileNavBar.js","components/Task Manager/TaskNavBar.js","components/functions/reverseArray.js","components/Task Manager/Dates.js","components/Task Manager/CreateTask.js","components/Task Manager/TaskCard.js","images/Mordecai-Rigby-enjoying.png","components/Task Manager/EmptyTasks.js","components/Task Manager/Tasks.js","images/Mordecai-Rigby-working.png","components/Task Manager/CompletedTasks.js","components/Tag Manager/CreateTag.js","components/Tag Manager/TagCard.js","images/Mordecai-Rigby-pointing.png","components/Tag Manager/Tags.js","components/Task Manager/TaskManager.js","components/Session Manager/CreateSession.js","components/Session Manager/SessionCard.js","images/Rigby-reading.png","components/Session Manager/SessionManager.js","components/Timer Page/CurrentTask.js","sounds/end-sound.wav","components/Timer Page/ControlButton.js","components/Timer Page/TimeButton.js","sounds/start-sound.wav","components/Timer Page/Timer.js","components/Timer Page/CloseWarningMessage.js","components/Timer Page/TimerPage.js","components/Pomodoro/Pomodoro.js","components/Stats Page/TagDistribution.js","components/Stats Page/StatsCard.js","images/Mordecai-Rigby-benson.png","components/Stats Page/AccuracyMeter.js","components/Stats Page/StatsPage.js","images/illustration-woman-online-mobile.svg","components/NavBar/SideDrawer.js","components/NavBar/Overlay.js","App.js","index.js"],"names":["Button","props","state","handleClick","text","to","href","className","onClick","this","Component","HeroBox","greeting","userName","hour","Date","getHours","setState","src","HeroBoxImage","alt","class","HomePage","useEffect","JSON","parse","localStorage","getItem","length","setItem","stringify","tasks","totalTasks","completedTasks","taskCompletion","avgTaskDuration","taskEstimateAccuracy","time","totalActiveTime","sessions","totalSession","totalIntervals","avgIntervals","days","currentDay","streak","MobileNavBar","sidemenuClickHandle","TaskNavBar","reverseArray","array","reversedArray","reverse","getDate","date","day","String","padStart","month","toLocaleString","n","Number","getOrdinalNum","CreateTask","submitTaskHandle","tagsData","statsData","useState","taskTitle","setTaskTitle","taskTag","setTaskTag","taskEstimate","setTaskEstimate","taskDesc","setTaskDesc","taskTagsData","htmlFor","type","name","id","placeholder","onChange","e","target","value","selected","disabled","hidden","map","tag","cols","rows","preventDefault","obj","task_title","task_tag","task_intervals","task_estimate","task_desc","task_isCompleted","task_startDate","task_endDate","task_id","Math","random","push","toFixed","updatedStatsData","TaskCard","task","tagStyles","forEach","color","colour","setTasks","style","updatedTasks","accuracy","guess","actual","abs","calcAccuracy","newTasks","filter","EmptyTasks","styles","height","width","image","objectFit","Tasks","tasksData","pendingTasks","path","Data","RegularShowEnjoy","CompletedTasks","RegularShowWork","CreateTag","tagColour","setTagColour","tagName","setTagName","setTagData","tagData","newTag","tagTotalTime","TagCard","colorStyles","backgroundColor","newTagData","Tags","RegularShowPoint","data","TaskManager","component","CreateSession","sessionData","setSessionData","sessionInfo","activeTime","shortBreak","longBreak","intervals","isStarted","isFinished","currentInterval","title","defaultValue","min","max","index","selectedIndex","childNodes","getAttribute","taskId","description","SessionCard","session","sessionIsStarted","setSessionIsStarted","setCurrentSession","currentSession","updatedSessionData","SessionManager","RegularShowReading","CurrentTask","Timer","minutes","setMinutes","seconds","setSeconds","counter","setCounter","currentBlock","setCurrentBlock","blocks","totalBlocks","isRunning","setIsRunning","isReseted","setIsReseted","sessionTime","setSessionTime","isSession","setIsSession","setTimerIsStarted","intervalId","setInterval","Audio","EndSound","play","updatedTasksData","updatedTagsData","console","log","toDateString","today","diff","clearInterval","CloseWarningMessage","TimerPage","updatedSessionsData","timerIsStarted","Pomodoro","TagDistribution","tagLabels","setTagLabels","tagTime","setTagTime","tagColours","setTagColours","tagBorderColours","setTagBorderColours","labels","datasets","borderColor","borderWidth","options","responsive","layout","padding","plugins","legend","position","maxWidth","boxWidth","boxHeight","display","StatsCard","AccuracyMeter","num","estimateAccuracy","parseFloat","accuracyData","label","cutout","tooltip","enabled","StatsPage","hasStats","setHasStats","setTaskCompletion","setAvgTaskDuration","totalSessions","setTotalSessions","setAvgIntervals","totalHoursActive","setTotalHoursActive","setEstimateAccuracy","setStreak","iconStyles","fontSize","fill","duration","totalHours","estimateArray","totalAccuracy","reduce","total","currentValue","RegularShowBenson","SideDrawer","activeIconStyles","location","useLocation","pathname","linkClickHandle","ProductivePerson","Overlay","overlayClickHandle","App","sideDrawerStyle","overlayStyle","isSideDrawerOpen","setIsSideDrawerOpen","sideMenuHandle","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fea75f67.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      handleClick: props.handleClick,\r\n      text: props.text,\r\n      to: props.to,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        className=\"button button--basic\"\r\n        onClick={this.state.handleClick}\r\n        to={this.state.to}\r\n      >\r\n        {this.props.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/illustration-working-brown.24887bc9.svg\";","import React, { Component } from \"react\";\r\n\r\nimport HeroBoxImage from \"../../images/illustration-working-brown.svg\";\r\n\r\nexport default class HeroBox extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      greeting: \"\",\r\n      userName: \"Stranger\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var d = new Date();\r\n    const hour = d.getHours();\r\n\r\n    if (hour >= 0 && hour < 12) {\r\n      this.setState({\r\n        greeting: \"Good Morning\",\r\n      });\r\n    } else if (hour >= 12 && hour < 16) {\r\n      this.setState({\r\n        greeting: \"Good Afternoon\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        greeting: \"Good Evening\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero-box\">\r\n        <h3 className=\"greeting\">{this.state.greeting}</h3>\r\n        {/* <h2 className=\"user-name\">{this.state.userName}</h2> */}\r\n        <img\r\n          src={HeroBoxImage}\r\n          alt=\"Girl looking at computer, being productive\"\r\n          className=\"hero-box__image\"\r\n        />\r\n        <p className=\"hero-box__description\">\r\n          Pomodoro will make your work easier and more\r\n          <span class=\"bold-text\"> productive</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../Button\";\r\nimport HeroBox from \"./HeroBox\";\r\n\r\nfunction HomePage() {\r\n  useEffect(() => {\r\n    const tempStatsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\");\r\n    if (tempStatsData.length === 0) {\r\n      const statsData = [\r\n        {\r\n          tasks: {\r\n            totalTasks: 0,\r\n            completedTasks: 0,\r\n            taskCompletion: 0,\r\n            avgTaskDuration: 0,\r\n            taskEstimateAccuracy: [],\r\n          },\r\n          time: {\r\n            totalActiveTime: 0,\r\n          },\r\n          sessions: {\r\n            totalSession: 0,\r\n            totalIntervals: 0,\r\n            avgIntervals: 0,\r\n          },\r\n          days: {\r\n            currentDay: \"-\",\r\n            streak: 1,\r\n          },\r\n        },\r\n      ];\r\n      localStorage.setItem(\"statsData\", JSON.stringify(statsData));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <HeroBox />\r\n      <div class=\"homepage__buttons\">\r\n        <Link to=\"/pomodoro/session-manager\">\r\n          <Button text=\"Start\" />\r\n        </Link>\r\n        <Link to=\"/task-manager/tasks\">\r\n          <Button text=\"View Tasks\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class MobileNavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidemenuClickHandle: props.sidemenuClickHandle,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"mobile-navbar\">\r\n          <div className=\"app-name\">\r\n            <Link to=\"/\">\r\n              <h1>Pomodoro</h1>\r\n            </Link>\r\n          </div>\r\n          <a\r\n            href=\"javascript:void(0)\"\r\n            className=\"hamburger-menu\"\r\n            onClick={this.state.sidemenuClickHandle}\r\n          >\r\n            <img\r\n              src=\"https://img.icons8.com/material-outlined/24/000000/menu--v1.png\"\r\n              alt=\"Hamburger Menu Icon\"\r\n              className=\"hamburger-menu__icon\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class TaskNavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"task-nav-bar\">\r\n        <ul className=\"task-nav-bar__list\">\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/tasks\"\r\n            >\r\n              Tasks\r\n            </Link>\r\n          </li>\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/completed-tasks\"\r\n            >\r\n              Completed\r\n            </Link>\r\n          </li>\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/tags\"\r\n            >\r\n              Tags\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","// a function that takes an array and returns a\r\n// reverse array without affecting the original one\r\n\r\nconst reverseArray = function (array) {\r\n  // a copy of the original array\r\n  const reversedArray = [...array];\r\n\r\n  // reversing the copy array\r\n  reversedArray.reverse();\r\n\r\n  return reversedArray;\r\n};\r\n\r\nexport default reverseArray;\r\n","function getOrdinalNum(day) {\r\n  var n = Number(day);\r\n  return (\r\n    n +\r\n    (n > 0\r\n      ? [\"th\", \"st\", \"nd\", \"rd\"][(n > 3 && n < 21) || n % 10 > 3 ? 0 : n % 10]\r\n      : \"\")\r\n  );\r\n}\r\nconst getDate = function () {\r\n  const date = new Date();\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = date.toLocaleString(\"default\", { month: \"long\" });\r\n  return getOrdinalNum(day) + \", \" + month;\r\n};\r\n\r\nexport { getDate };\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { getDate } from \"./Dates\";\r\n\r\nfunction CreateTask({ tasks, submitTaskHandle }) {\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n  // console.log(statsData);\r\n\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [taskTag, setTaskTag] = useState(\"\");\r\n  const [taskEstimate, setTaskEstimate] = useState(\"\");\r\n  const [taskDesc, setTaskDesc] = useState(\"\");\r\n  const [taskTagsData, setTaskTagsData] = useState([...tagsData]);\r\n\r\n  const taskNameHandle = function (e) {\r\n    setTaskTitle(e.target.value);\r\n  };\r\n\r\n  const taskTagHandle = function (e) {\r\n    setTaskTag(e.target.value);\r\n  };\r\n\r\n  const taskEstimateHandle = function (e) {\r\n    setTaskEstimate(e.target.value);\r\n  };\r\n\r\n  const taskDescHandle = function (e) {\r\n    setTaskDesc(e.target.value);\r\n  };\r\n\r\n  const taskSubmitHandle = function (e) {\r\n    e.preventDefault();\r\n\r\n    const obj = {};\r\n    obj.task_title = taskTitle;\r\n    obj.task_tag = taskTag;\r\n    obj.task_intervals = 0;\r\n    obj.task_estimate = taskEstimate;\r\n    obj.task_desc = taskDesc;\r\n    obj.task_isCompleted = false;\r\n    obj.task_startDate = getDate();\r\n    obj.task_endDate = \"-\";\r\n    obj.task_id = Math.random() * 100;\r\n\r\n    // storing the new task in localStorage\r\n    tasks.push(obj);\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(tasks));\r\n    submitTaskHandle(tasks);\r\n\r\n    // updating stats in localStorage\r\n    statsData.tasks.totalTasks += 1;\r\n    const taskCompletion =\r\n      statsData.tasks.completedTasks / statsData.tasks.totalTasks;\r\n    statsData.tasks.taskCompletion = taskCompletion.toFixed(3);\r\n    const updatedStatsData = [];\r\n    updatedStatsData.push(statsData);\r\n    localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-create\">\r\n      <header className=\"task-create__header\">\r\n        <h4 className=\"task-create__heading\">Create Task</h4>\r\n        <Link to=\"/task-manager/tasks\">\r\n          <CloseIcon className=\"close-icon\" />\r\n        </Link>\r\n      </header>\r\n\r\n      <form className=\"task-create__form\">\r\n        <label htmlFor=\"ttitle\" className=\"task-create__form__label\">\r\n          Task Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"tasktitle\"\r\n          id=\"ttitle\"\r\n          placeholder=\"Your Task Title\"\r\n          className=\"input__text\"\r\n          onChange={taskNameHandle}\r\n        />\r\n        <label htmlFor=\"ttag\" className=\"task-create__form__label\">\r\n          Tag\r\n        </label>\r\n        <select\r\n          name=\"tasktag\"\r\n          id=\"ttag\"\r\n          className=\"task-create__form__select\"\r\n          onChange={taskTagHandle}\r\n        >\r\n          <option value=\"\" selected disabled hidden></option>\r\n\r\n          {taskTagsData.length === 0 ? (\r\n            <option disabled>Make some Tags</option>\r\n          ) : (\r\n            taskTagsData.map(function (tag) {\r\n              return (\r\n                <option value={`${tag.name}`} id={tag.id}>\r\n                  {tag.name}\r\n                </option>\r\n              );\r\n            })\r\n          )}\r\n        </select>\r\n        <label htmlFor=\"testimate\" className=\"task-create__form__label\">\r\n          Estimated Intervals to Complete\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"taskestimate\"\r\n          id=\"testimate\"\r\n          placeholder=\"Intervals\"\r\n          className=\"input__number\"\r\n          onChange={taskEstimateHandle}\r\n        />\r\n\r\n        <label htmlFor=\"tdescription\" className=\"task-create__form__label\">\r\n          Description\r\n        </label>\r\n        <textarea\r\n          name=\"taskdescription\"\r\n          id=\"tdescription\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"Description for your Task...\"\r\n          className=\"task-create__form__description\"\r\n          onChange={taskDescHandle}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input__button\"\r\n          type=\"submit\"\r\n          onClick={taskSubmitHandle}\r\n        >\r\n          <Link to=\"/task-manager/tasks\" class=\"input__button__link\">\r\n            <h4>Create Task</h4>\r\n          </Link>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;\r\n","import React from \"react\";\r\n\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\n\r\nimport { getDate } from \"./Dates\";\r\n\r\nfunction TaskCard(props) {\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\"))[0];\r\n\r\n  const calcAccuracy = function (guess, actual) {\r\n    let accuracy = Math.abs(guess - actual) / actual;\r\n    accuracy = 100 * (1 - accuracy);\r\n    return accuracy;\r\n  };\r\n\r\n  const {\r\n    task_tag,\r\n    task_title,\r\n    task_desc,\r\n    task_intervals,\r\n    task_estimate,\r\n    task_id,\r\n    task_startDate,\r\n    task_endDate,\r\n    task_isCompleted,\r\n  } = props.task;\r\n\r\n  const tagStyles = {};\r\n\r\n  if (tagsData.length !== 0) {\r\n    tagsData.forEach(function (tag) {\r\n      if (tag.name === task_tag) {\r\n        tagStyles.color = tag.colour;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  const { tasks, setTasks } = props;\r\n\r\n  const deleteHandle = function () {\r\n    const newTasks = tasks.filter((task) => task_id !== task.task_id);\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(newTasks));\r\n    setTasks([...newTasks]);\r\n  };\r\n\r\n  const completeHandle = function () {\r\n    const updatedTasks = tasks.map(function (task) {\r\n      if (task_id === task.task_id) {\r\n        task.task_isCompleted = true;\r\n        task.task_endDate = getDate();\r\n      }\r\n      return task;\r\n    });\r\n\r\n    // calculate the accuracy and update it\r\n    // in the statsData in the localStorage\r\n    const accuracy = calcAccuracy(task_intervals, task_estimate);\r\n    statsData.tasks.taskEstimateAccuracy.push(accuracy);\r\n\r\n    // updating completed tasks in localStorage\r\n    statsData.tasks.completedTasks += 1;\r\n    statsData.tasks.taskCompletion =\r\n      statsData.tasks.completedTasks / statsData.tasks.totalTasks;\r\n    const updatedStatsData = [];\r\n    updatedStatsData.push(statsData);\r\n    localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(updatedTasks));\r\n    setTasks([...updatedTasks]);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`task-card ${\r\n        task_isCompleted === true ? \"task-card--completed\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"task-info\">\r\n        <p className=\"task-info__tag\" style={tagStyles}>\r\n          {task_tag}\r\n        </p>\r\n        <h4 className=\"task-info__name\">{task_title}</h4>\r\n        <p className=\"task-info__desc\">{task_desc}</p>\r\n      </div>\r\n      <div className=\"task-card__actions\">\r\n        <button className=\"task-card__actions__button\" onClick={completeHandle}>\r\n          <CheckCircleIcon className=\"task-icon task-icon--done\" />\r\n        </button>\r\n        <button className=\"task-card__actions__button\" onClick={deleteHandle}>\r\n          <DeleteIcon className=\"task-icon task-icon--delete\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"task-card__time\">\r\n        <ScheduleIcon className=\"task-icon--time\" />\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">Est. Intervals</p>\r\n          <p className=\"time-stat__value\">{task_estimate}</p>\r\n        </div>\r\n        <TodayIcon className=\"task-icon--time\" />\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">Start</p>\r\n          <p className=\"time-stat__value\">{task_startDate}</p>\r\n        </div>\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">End</p>\r\n          <p className=\"time-stat__value\">{task_endDate}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-enjoying.89e2f180.png\";","import React from \"react\";\r\n\r\nimport RegularShowEnjoy from \"../../images/Mordecai-Rigby-enjoying.png\";\r\n\r\nfunction EmptyTasks(props) {\r\n  const styles = {\r\n    height: props.height,\r\n    width: props.width,\r\n  };\r\n\r\n  const imageStyles = {\r\n    height: \"100%\",\r\n    width: \"auto\",\r\n    objectFit: \"cover\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"regular-show\" style={styles}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        className=\"regular-show__pic\"\r\n        style={imageStyles}\r\n      />\r\n      <p className=\"regular-show__text\">{props.text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyTasks;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport reverseArray from \"../functions/reverseArray\";\r\n\r\nimport CreateTask from \"./CreateTask\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport EmptyTasks from \"./EmptyTasks\";\r\n\r\nimport RegularShowEnjoy from \"../../images/Mordecai-Rigby-enjoying.png\";\r\n\r\nfunction Tasks() {\r\n  const tasksData = JSON.parse(localStorage.getItem(\"tasksData\") || \"[]\");\r\n  const [tasks, setTasks] = useState([...tasksData]);\r\n\r\n  const pendingTasks = tasksData.filter((task) => {\r\n    if (task.task_isCompleted == false) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  const submitTaskHandle = function (Data) {\r\n    setTasks([...Data]);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-section\">\r\n        <header className=\"task-section__header\">\r\n          <h2 className=\"heading\">Tasks</h2>\r\n          <Link to=\"/task-manager/tasks/create-task\" className=\"add-task\">\r\n            <h4>New Task</h4>\r\n            <AddIcon className=\"add-task__icon\" />\r\n          </Link>\r\n        </header>\r\n\r\n        <Switch>\r\n          <Route path=\"/task-manager/tasks/create-task\">\r\n            <CreateTask submitTaskHandle={submitTaskHandle} tasks={tasks} />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {pendingTasks.length == 0 ? (\r\n          <EmptyTasks\r\n            image={RegularShowEnjoy}\r\n            text=\"You have no tasks for now. Go and have some fun :)\"\r\n            alt=\"Moredecai and Rigby enjoying\"\r\n            height={280}\r\n          />\r\n        ) : (\r\n          <ul className=\"task-list\">\r\n            {reverseArray(tasks).map((task) => {\r\n              if (task.task_isCompleted == false) {\r\n                return (\r\n                  <TaskCard\r\n                    key={task.task_id}\r\n                    task={task}\r\n                    tasks={tasks}\r\n                    setTasks={setTasks}\r\n                  />\r\n                );\r\n              }\r\n              return \"\";\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-working.8610382c.png\";","import React, { Component, useState } from \"react\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport EmptyTasks from \"./EmptyTasks\";\r\n\r\nimport reverseArray from \"../functions/reverseArray\";\r\n\r\nimport RegularShowWork from \"../../images/Mordecai-Rigby-working.png\";\r\n\r\nfunction CompletedTasks() {\r\n  const tasksData = JSON.parse(localStorage.getItem(\"tasksData\") || \"[]\");\r\n  const [tasks, setTasks] = useState([...tasksData]);\r\n\r\n  const completedTasks = tasksData.filter((task) => {\r\n    if (task.task_isCompleted == true) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"task-section\">\r\n      <header className=\"task-section__header\">\r\n        <h2 className=\"heading\">Completed Tasks</h2>\r\n      </header>\r\n      {completedTasks.length == 0 ? (\r\n        <EmptyTasks\r\n          image={RegularShowWork}\r\n          text=\"You haven't completed any tasks. Now get back to work ;)\"\r\n          alt=\"Moredecai and Rigby Working\"\r\n          height={230}\r\n        />\r\n      ) : (\r\n        <ul className=\"task-list\">\r\n          {reverseArray(completedTasks).map((task) => {\r\n            return (\r\n              <TaskCard\r\n                key={task.task_id}\r\n                task={task}\r\n                tasks={tasks}\r\n                setTasks={setTasks}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompletedTasks;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { tagsData, updateTagData } from \"./TagsData\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction CreateTag(props) {\r\n  const { tagColour, setTagColour, tagName, setTagName, setTagData, tagData } =\r\n    props;\r\n\r\n  const tagNameHandle = function (e) {\r\n    setTagName(e.target.value);\r\n  };\r\n\r\n  const tagColourHandle = function (e) {\r\n    setTagColour(e.target.value);\r\n  };\r\n\r\n  const tagSubmitHandle = function () {\r\n    const newTag = {\r\n      name: tagName,\r\n      colour: tagColour,\r\n      id: Math.random() * 100,\r\n      tagTotalTime: 0,\r\n    };\r\n\r\n    tagData.push(newTag);\r\n    localStorage.setItem(\"tagsData\", JSON.stringify(tagData));\r\n    setTagData([...tagData]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-create\">\r\n      <form className=\"tag-create__form\">\r\n        <div className=\"tag-create__data\">\r\n          <label htmlFor=\"tgname\" className=\"tag-create__form__label\">\r\n            Tag Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"TagName\"\r\n            id=\"tgname\"\r\n            className=\"input__text\"\r\n            onChange={tagNameHandle}\r\n          />\r\n          <label htmlFor=\"tgcolour\" className=\"tag-create__form__label\">\r\n            Tag Colour\r\n          </label>\r\n          <div className=\"input__colour\">\r\n            <input\r\n              type=\"color\"\r\n              name=\"TagColour\"\r\n              id=\"tgcolour\"\r\n              className=\"input__colour__picker\"\r\n              onChange={tagColourHandle}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"tag-create__close\">\r\n          <Link to=\"/task-manager/tags\">\r\n            <CloseIcon />\r\n          </Link>\r\n        </div>\r\n        <div className=\"tag-create__submit\">\r\n          <button\r\n            className=\"input__button\"\r\n            type=\"submit\"\r\n            onClick={tagSubmitHandle}\r\n          >\r\n            <Link to=\"/task-manager/tags\" class=\"input__button__link\">\r\n              <h4>Create Tag</h4>\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTag;\r\n","import React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction TagCard({ name, colour, id, tagData, setTagData }) {\r\n  const deleteTagHandle = function () {\r\n    const newTagData = tagData.filter(function (tag) {\r\n      if (tag.id !== id) {\r\n        return tag;\r\n      }\r\n    });\r\n    setTagData([...newTagData]);\r\n    localStorage.setItem(\"tagsData\", JSON.stringify(newTagData));\r\n  };\r\n\r\n  const colorStyles = {\r\n    backgroundColor: colour,\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-card\">\r\n      <div className=\"tag-card__colour\" style={colorStyles}></div>\r\n      <h3 className=\"tag-card__name\">{name}</h3>\r\n      <div className=\"tag-card__close\">\r\n        <CloseIcon\r\n          className=\"tag-card__close__icon\"\r\n          onClick={deleteTagHandle}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-pointing.e3f7fdfd.png\";","import React, { Component, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport reverseArray from \"../functions/reverseArray\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateTag from \"./CreateTag\";\r\nimport TagCard from \"./TagCard\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\n\r\nimport RegularShowPoint from \"../../images/Mordecai-Rigby-pointing.png\";\r\n\r\nfunction Tags() {\r\n  const [tagColour, setTagColour] = useState(\"#000\");\r\n  const [tagName, setTagName] = useState(\"\");\r\n\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n  const [tagData, setTagData] = useState([...tagsData]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-section\">\r\n        <header className=\"task-section__header\">\r\n          <h2 className=\"heading\">Tags</h2>\r\n          <Link to=\"/task-manager/tags/create-tag\" className=\"add-task\">\r\n            <h4>New Tag</h4>\r\n            <AddIcon className=\"add-task__icon\" />\r\n          </Link>\r\n        </header>\r\n        <p className=\"warning\">\r\n          Recommended that you don't delete any tags and you choose a dark\r\n          colour\r\n        </p>\r\n\r\n        <Switch>\r\n          <Route path=\"/task-manager/tags/create-tag\">\r\n            <CreateTag\r\n              tagColour={tagColour}\r\n              setTagColour={setTagColour}\r\n              tagName={tagName}\r\n              setTagName={setTagName}\r\n              setTagData={setTagData}\r\n              tagData={tagData}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {tagsData.length === 0 ? (\r\n          <EmptyTasks\r\n            image={RegularShowPoint}\r\n            text=\"C'mon, create tags so you can track your tasks and be more productive :O\"\r\n            alt=\"Moredecai and Rigby Pointing\"\r\n            height={300}\r\n          />\r\n        ) : (\r\n          <div className=\"tag-gallery\">\r\n            {reverseArray(tagData).map(function (data) {\r\n              return (\r\n                <TagCard\r\n                  name={data.name}\r\n                  colour={data.colour}\r\n                  id={data.id}\r\n                  setTagData={setTagData}\r\n                  tagData={tagData}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Tags;\r\n","import React, { Component } from \"react\";\r\nimport TaskNavBar from \"./TaskNavBar\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Tasks from \"./Tasks\";\r\nimport CompletedTasks from \"./CompletedTasks\";\r\nimport Tags from \"../Tag Manager/Tags\";\r\n\r\nfunction TaskManager() {\r\n  return (\r\n    <Router>\r\n      <div className=\"task-manager\">\r\n        <TaskNavBar />\r\n        <Switch>\r\n          <Route path=\"/task-manager/tasks\" component={Tasks} />\r\n          <Route\r\n            path=\"/task-manager/completed-tasks\"\r\n            component={CompletedTasks}\r\n          />\r\n          <Route path=\"/task-manager/tags\" component={Tags} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TaskManager;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction CreateSession({ sessionData, setSessionData }) {\r\n  // statsData from localStorage\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n\r\n  const tasksData = JSON.parse(\r\n    localStorage.getItem(\"tasksData\") || \"[]\"\r\n  ).filter(function (task) {\r\n    if (task.task_isCompleted === false) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  const sessionInfo = {\r\n    id: Math.random() * 100,\r\n    activeTime: 25,\r\n    shortBreak: 5,\r\n    longBreak: 30,\r\n    intervals: 4,\r\n    isStarted: false,\r\n    isFinished: false,\r\n    currentInterval: 0,\r\n  };\r\n\r\n  const sessionTitleHandle = function (e) {\r\n    sessionInfo.title = e.target.value;\r\n  };\r\n  const sessionActiveTimeHandle = function (e) {\r\n    sessionInfo.activeTime = e.target.value;\r\n  };\r\n  const sessionShortBreakHandle = function (e) {\r\n    sessionInfo.shortBreak = e.target.value;\r\n  };\r\n  const sessionLongBreakHandle = function (e) {\r\n    sessionInfo.longBreak = e.target.value;\r\n  };\r\n  const sessionTaskHandle = function (e) {\r\n    sessionInfo.task = e.target.value;\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var id = optionElement.getAttribute(\"id\");\r\n\r\n    tasksData.forEach(function (task) {\r\n      if (task.task_id == id) {\r\n        sessionInfo.tag = task.task_tag;\r\n        sessionInfo.taskId = task.task_id;\r\n      }\r\n    });\r\n  };\r\n  const sessionIntervalsHandle = function (e) {\r\n    sessionInfo.intervals = e.target.value;\r\n  };\r\n  const sessionDescriptionHandle = function (e) {\r\n    sessionInfo.description = e.target.value;\r\n  };\r\n\r\n  const sessionSubmitHandle = function () {\r\n    sessionData.push(sessionInfo);\r\n    setSessionData([...sessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(sessionData));\r\n\r\n    // update statsData for session in localStorage\r\n    statsData.sessions.totalSession += 1;\r\n    statsData.sessions.totalIntervals += Number(sessionInfo.intervals);\r\n    const avgIntervals =\r\n      statsData.sessions.totalIntervals / statsData.sessions.totalSession;\r\n    statsData.sessions.avgIntervals = avgIntervals.toFixed(1);\r\n\r\n    const updatedStatsData = [];\r\n    updatedStatsData.push(statsData);\r\n    localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-create\">\r\n      <header className=\"session-create__header\">\r\n        <h4 className=\"session-create__heading\">Create Session</h4>\r\n        <Link to=\"/pomodoro/session-manager\">\r\n          <CloseIcon className=\"close-icon\" />\r\n        </Link>\r\n      </header>\r\n\r\n      <form className=\"session-create__form\">\r\n        <label htmlFor=\"stitle\" className=\"session-create__form__label\">\r\n          Session Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"sessiontitle\"\r\n          id=\"stitle\"\r\n          placeholder=\"Your Session Title\"\r\n          className=\"input__text\"\r\n          onChange={sessionTitleHandle}\r\n        />\r\n\r\n        <label htmlFor=\"sstudytime\" className=\"session-create__form__label\">\r\n          Active Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionStudyTime\"\r\n          id=\"sstudytime\"\r\n          className=\"input__number\"\r\n          onChange={sessionActiveTimeHandle}\r\n          defaultValue=\"25\"\r\n          min=\"10\"\r\n          max=\"120\"\r\n        />\r\n\r\n        <label\r\n          htmlFor=\"sshortbreaktime\"\r\n          className=\"session-create__form__label\"\r\n        >\r\n          Short Break Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionShortBreakTime\"\r\n          id=\"sshortbreaktime\"\r\n          className=\"input__number\"\r\n          onChange={sessionShortBreakHandle}\r\n          defaultValue=\"5\"\r\n          min=\"5\"\r\n          max=\"20\"\r\n        />\r\n\r\n        <label htmlFor=\"slongbreaktime\" className=\"session-create__form__label\">\r\n          Long Break Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionLongBreakTime\"\r\n          id=\"slongbreaktime\"\r\n          className=\"input__number\"\r\n          onChange={sessionLongBreakHandle}\r\n          defaultValue=\"30\"\r\n          min=\"20\"\r\n          max=\"60\"\r\n        />\r\n\r\n        <label htmlFor=\"stask\" className=\"session-create__form__label\">\r\n          Task\r\n        </label>\r\n        <select\r\n          name=\"sessiontask\"\r\n          id=\"stask\"\r\n          className=\"session-create__form__select\"\r\n          onChange={sessionTaskHandle}\r\n        >\r\n          <option value=\"\" selected disabled hidden></option>\r\n\r\n          {tasksData.length === 0 ? (\r\n            <option disabled>Create some Tasks</option>\r\n          ) : (\r\n            tasksData.map(function (tasks) {\r\n              return (\r\n                <option value={`${tasks.task_title}`} id={tasks.task_id}>\r\n                  {tasks.task_title}\r\n                </option>\r\n              );\r\n            })\r\n          )}\r\n        </select>\r\n        <label htmlFor=\"sintervals\" className=\"session-create__form__label\">\r\n          Number of Intervals\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"sessionintervals\"\r\n          id=\"sintervals\"\r\n          className=\"input__number\"\r\n          onChange={sessionIntervalsHandle}\r\n          defaultValue=\"4\"\r\n          min=\"1\"\r\n          max=\"12\"\r\n        />\r\n\r\n        <label htmlFor=\"tdescription\" className=\"session-create__form__label\">\r\n          Description\r\n        </label>\r\n        <textarea\r\n          name=\"sessiondescription\"\r\n          id=\"tdescription\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"Description for your Session...\"\r\n          className=\"session-create__form__description\"\r\n          onChange={sessionDescriptionHandle}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input__button\"\r\n          type=\"submit\"\r\n          onClick={sessionSubmitHandle}\r\n        >\r\n          <Link to=\"/pomodoro/session-manager\" class=\"input__button__link\">\r\n            <h4>Create Session</h4>\r\n          </Link>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateSession;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nfunction SessionCard(props) {\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n\r\n  const {\r\n    id,\r\n    activeTime,\r\n    shortBreak,\r\n    longBreak,\r\n    isStarted,\r\n    isFinished,\r\n    title,\r\n    task,\r\n    currentInterval,\r\n    intervals,\r\n    description,\r\n  } = props.session;\r\n\r\n  const [sessionIsStarted, setSessionIsStarted] = useState(\r\n    props.session.isStarted\r\n  );\r\n\r\n  const { sessionData, setSessionData } = props;\r\n\r\n  // to get the details of the current session\r\n  const { currentSession, setCurrentSession } = props;\r\n\r\n  const sessionDeleteHandle = function () {\r\n    const updatedSessionData = sessionData.filter(function (session) {\r\n      if (id !== session.id) {\r\n        return session;\r\n      }\r\n    });\r\n\r\n    setSessionData([...updatedSessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionData));\r\n  };\r\n\r\n  const gotoSessionHandle = function () {\r\n    setSessionIsStarted(true);\r\n\r\n    // need to update sessionIsStarted\r\n    // updates that data in the local storage as well\r\n    const updatedSessionData = sessionData.filter(function (session) {\r\n      if (id === session.id) {\r\n        session.isStarted = true;\r\n      }\r\n      return session;\r\n    });\r\n\r\n    setSessionData([...updatedSessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionData));\r\n\r\n    setCurrentSession(props.session);\r\n  };\r\n\r\n  return (\r\n    <div className=\"session-card\">\r\n      <div className=\"session-card__info\">\r\n        <h4 className=\"session-card__info__name\">{title}</h4>\r\n        <p className=\"session-card__info__task\">{task}</p>\r\n        <p className=\"session-card__info__description\">{description}</p>\r\n      </div>\r\n      <div className=\"session-card__actions\">\r\n        <button\r\n          className=\"session-card__actions__button\"\r\n          onClick={sessionDeleteHandle}\r\n        >\r\n          <DeleteIcon />\r\n        </button>\r\n\r\n        {isFinished === false ? (\r\n          <Link to=\"/pomodoro/timer\">\r\n            <button\r\n              className=\"session-card__actions__button\"\r\n              onClick={gotoSessionHandle}\r\n            >\r\n              <KeyboardArrowRightIcon />\r\n            </button>\r\n          </Link>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n      <div className=\"session-card__status\">\r\n        <div className=\"session-card__status__stat\">\r\n          <p className=\"session-card__status__stat__name\">Status: </p>\r\n          {isFinished === true ? (\r\n            <p className=\"session-card__status__stat__value session-card__status__stat__value--finished \">\r\n              Finished\r\n            </p>\r\n          ) : sessionIsStarted === true ? (\r\n            <p className=\"session-card__status__stat__value session-card__status__stat__value--started \">\r\n              Started\r\n            </p>\r\n          ) : (\r\n            <p className=\"session-card__status__stat__value\">Not Started</p>\r\n          )}\r\n        </div>\r\n        <div className=\"session-card__status__stat\">\r\n          <p className=\"session-card__status__stat__name\">Progress:</p>\r\n          <p className=\"session-card__status__stat__value\">\r\n            {currentInterval}/{intervals}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SessionCard;\r\n","export default __webpack_public_path__ + \"static/media/Rigby-reading.343b8b6a.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport reverseArray from \"../functions/reverseArray\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateSession from \"./CreateSession\";\r\nimport SessionCard from \"./SessionCard\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\n\r\nimport RegularShowReading from \"../../images/Rigby-reading.png\";\r\n\r\nfunction SessionManager({ currentSession, setCurrentSession }) {\r\n  let [sessionData, setSessionData] = useState([]);\r\n  useEffect(() => {\r\n    setSessionData([\r\n      ...JSON.parse(localStorage.getItem(\"sessionsData\") || \"[]\"),\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-manager\">\r\n        <div className=\"task-section\">\r\n          <header className=\"task-section__header\">\r\n            <h2 className=\"heading\">Sessions</h2>\r\n            <Link\r\n              to=\"/pomodoro/session-manager/create-session\"\r\n              className=\"add-task\"\r\n            >\r\n              <h4>New Session</h4>\r\n              <AddIcon className=\"add-task__icon\" />\r\n            </Link>\r\n          </header>\r\n          <Switch>\r\n            <Route path=\"/pomodoro/session-manager/create-session\">\r\n              <CreateSession\r\n                sessionData={sessionData}\r\n                setSessionData={setSessionData}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n          {sessionData.length === 0 ? (\r\n            <EmptyTasks\r\n              image={RegularShowReading}\r\n              text=\"Create a session and let's get productive :D\"\r\n              alt=\"Rigby Reading\"\r\n              height={300}\r\n            />\r\n          ) : (\r\n            <ul class=\"task-list\">\r\n              {reverseArray(sessionData).map(function (session) {\r\n                return (\r\n                  <SessionCard\r\n                    session={session}\r\n                    sessionData={sessionData}\r\n                    setSessionData={setSessionData}\r\n                    currentSession={currentSession}\r\n                    setCurrentSession={setCurrentSession}\r\n                  />\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default SessionManager;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class CurrentTask extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      task: props.task,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"current-task\">\r\n        <h3 className=\"current-task__heading\">Current Task</h3>\r\n        <h4 className=\"current-task__name\">{this.state.task}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/end-sound.1154923f.wav\";","import React, { Component } from \"react\";\r\n\r\nexport default class CancelButton extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      text: props.text,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <a href=\"javascript:void(0)\" className=\"button button--cancel\">\r\n        {this.state.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class DoneButton extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      text: props.text,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a href=\"javascript:void(0)\" className=\"button button--basic\">\r\n        {this.state.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/start-sound.70f7d22e.wav\";","import React, { useState, useEffect } from \"react\";\r\nimport ControlButton from \"./ControlButton\";\r\nimport TimeButton from \"./TimeButton\";\r\n\r\nimport StartSound from \"../../sounds/start-sound.wav\";\r\nimport EndSound from \"../../sounds/end-sound.wav\";\r\n\r\nfunction Timer(props) {\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n  const tasksData = JSON.parse(localStorage.getItem(\"tasksData\") || \"[]\");\r\n\r\n  const [minutes, setMinutes] = useState(props.activeTime);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const [currentBlock, setCurrentBlock] = useState(props.currentBlock);\r\n  const [totalBlocks, settotalBlocks] = useState(props.blocks);\r\n\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isReseted, setIsReseted] = useState(true);\r\n\r\n  // total active time for this session\r\n  const [sessionTime, setSessionTime] = useState(0);\r\n\r\n  const { activeTime, shortBreak, longBreak } = props;\r\n  const { currentSession, setCurrentSession } = props;\r\n  const { isSession, setIsSession } = props;\r\n  const { setTimerIsStarted } = props;\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    if (isRunning === true) {\r\n      setTimerIsStarted(true);\r\n      intervalId = setInterval(() => {\r\n        if (seconds === 0) {\r\n          if (minutes !== 0) {\r\n            setMinutes(minutes - 1);\r\n            setSeconds(59);\r\n\r\n            if (isSession === true) {\r\n              setSessionTime(sessionTime + 1);\r\n            }\r\n          } else {\r\n            const endSound = new Audio(EndSound);\r\n            endSound.play();\r\n\r\n            if (isSession === true) {\r\n              currentSession.currentInterval = currentBlock + 1;\r\n              setCurrentSession(currentSession);\r\n              setCurrentBlock((currentBlock) => currentBlock + 1);\r\n              setIsReseted(false);\r\n              setIsSession(false);\r\n\r\n              if (currentBlock + 1 == totalBlocks) {\r\n                currentSession.isFinished = true;\r\n              }\r\n\r\n              // increase number of intervals for the given task by 1\r\n\r\n              const updatedTasksData = tasksData.map(function (task) {\r\n                if (task.task_id == currentSession.taskId) {\r\n                  task.task_intervals += 1;\r\n                }\r\n                return task;\r\n              });\r\n\r\n              localStorage.setItem(\r\n                \"tasksData\",\r\n                JSON.stringify(updatedTasksData)\r\n              );\r\n\r\n              // update the tagsData in localstorage, by updating the tag time with sessionTime\r\n              const tagsData = JSON.parse(localStorage.getItem(\"tagsData\"));\r\n\r\n              const updatedTagsData = tagsData.map(function (tag) {\r\n                console.log(tag, currentSession);\r\n                if (tag.name === currentSession.tag) {\r\n                  // updating totalActiveTime in localStorage\r\n                  statsData.time.totalActiveTime += sessionTime;\r\n\r\n                  // checking for streaks\r\n                  let currentDay = statsData.days.currentDay;\r\n                  if (currentDay == \"-\") {\r\n                    const d = new Date();\r\n                    currentDay = d.toDateString();\r\n                    statsData.days.currentDay = currentDay;\r\n                  } else {\r\n                    const d = new Date();\r\n                    const today = d.toDateString();\r\n                    const diff = Date.parse(today) - Date.parse(currentDay);\r\n                    if (today !== currentDay) {\r\n                      if (diff <= 86400000) {\r\n                        statsData.days.streak += 1;\r\n                      } else {\r\n                        statsData.days.streak = 0;\r\n                      }\r\n                      statsData.days.currentDay = today;\r\n                    }\r\n                  }\r\n\r\n                  const updatedStatsData = [];\r\n                  updatedStatsData.push(statsData);\r\n                  localStorage.setItem(\r\n                    \"statsData\",\r\n                    JSON.stringify(updatedStatsData)\r\n                  );\r\n\r\n                  tag.tagTotalTime = tag.tagTotalTime + sessionTime;\r\n                  setSessionTime(0);\r\n                }\r\n                return tag;\r\n              });\r\n\r\n              localStorage.setItem(\"tagsData\", JSON.stringify(updatedTagsData));\r\n            }\r\n\r\n            setIsRunning(false);\r\n            return;\r\n          }\r\n        } else {\r\n          setSeconds(seconds - 1);\r\n          if (isSession === true) {\r\n            setSessionTime(sessionTime + 1);\r\n          }\r\n        }\r\n\r\n        setCounter((counter) => counter + 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [isRunning, counter]);\r\n\r\n  const startHandle = function () {\r\n    if (currentSession.isFinished !== true && isReseted == true) {\r\n      setIsRunning(true);\r\n    }\r\n  };\r\n\r\n  const pauseHandle = function () {\r\n    if (currentSession.isFinished !== true) {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  const pomodoroHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(true);\r\n      setMinutes(activeTime);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  const shortBreakHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(false);\r\n      setMinutes(shortBreak);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  const longBreakHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(false);\r\n      setMinutes(longBreak);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <h1 className=\"timer__value\">\r\n        {minutes < 10 ? \"0\" : \"\"}\r\n        {minutes}:{seconds < 10 ? \"0\" : \"\"}\r\n        {seconds}\r\n      </h1>\r\n      <p className=\"timer__session\">\r\n        {currentBlock}/{totalBlocks}\r\n      </p>\r\n      <div className=\"timerpage__controls\">\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"button button--basic\"\r\n          onClick={startHandle}\r\n        >\r\n          Start\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"button button--basic\"\r\n          onClick={pauseHandle}\r\n        >\r\n          Pause\r\n        </a>\r\n      </div>\r\n\r\n      <div class=\"timerpage__buttons\">\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={pomodoroHandle}\r\n        >\r\n          <h4>Pomodoro</h4>\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={shortBreakHandle}\r\n        >\r\n          <h4>Short Break</h4>\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={longBreakHandle}\r\n        >\r\n          <h4>Long Break</h4>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CloseWarningMessage() {\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"close-warning\">\r\n        <p className=\"close-warning__message\">\r\n          Are you sure you want to go back?\r\n        </p>\r\n        <div className=\"close-warning__action\">\r\n          <Link\r\n            to=\"/pomodoro/timer/\"\r\n            className=\"close-warning__action__buttons close-warning__action__buttons--green\"\r\n          >\r\n            Stay Here\r\n          </Link>\r\n          <Link\r\n            to=\"/pomodoro/session-manager\"\r\n            className=\"close-warning__action__buttons close-warning__action__buttons--red\"\r\n          >\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CloseWarningMessage;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CurrentTask from \"./CurrentTask\";\r\nimport Timer from \"./Timer\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport CloseWarningMessage from \"./CloseWarningMessage\";\r\n\r\nfunction TimerPage({ currentSession, setCurrentSession }) {\r\n  useEffect(() => {\r\n    return () => {\r\n      const sessionsData = JSON.parse(\r\n        localStorage.getItem(\"sessionsData\") || \"[]\"\r\n      );\r\n\r\n      const updatedSessionsData = sessionsData.map(function (session) {\r\n        if (currentSession.id === session.id) {\r\n          return currentSession;\r\n        }\r\n        return session;\r\n      });\r\n\r\n      localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionsData));\r\n    };\r\n  }, []);\r\n\r\n  const {\r\n    activeTime,\r\n    shortBreak,\r\n    longBreak,\r\n    currentInterval: currentBlock,\r\n    intervals: blocks,\r\n  } = currentSession;\r\n\r\n  const [isSession, setIsSession] = useState(true);\r\n  const [timerIsStarted, setTimerIsStarted] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"timerpage\">\r\n        <div className=\"timerpage__back\">\r\n          <Link\r\n            to={`${\r\n              timerIsStarted === false\r\n                ? \"/pomodoro/session-manager\"\r\n                : \"/pomodoro/timer/close-message\"\r\n            }`}\r\n          >\r\n            <ArrowBackIosIcon />\r\n          </Link>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route path=\"/pomodoro/timer/close-message\">\r\n            <CloseWarningMessage />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {isSession === true ? (\r\n          <CurrentTask task={currentSession.task} />\r\n        ) : (\r\n          <div className=\"break-time\">\r\n            <h3>Break Time</h3>\r\n            <h4>Time for rest</h4>\r\n          </div>\r\n        )}\r\n        <Timer\r\n          activeTime={activeTime}\r\n          shortBreak={shortBreak}\r\n          longBreak={longBreak}\r\n          currentBlock={currentBlock}\r\n          blocks={blocks}\r\n          currentSession={currentSession}\r\n          setCurrentSession={setCurrentSession}\r\n          isSession={isSession}\r\n          setIsSession={setIsSession}\r\n          setTimerIsStarted={setTimerIsStarted}\r\n        />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TimerPage;\r\n","import React, { useState } from \"react\";\r\nimport SessionManager from \"../Session Manager/SessionManager\";\r\nimport TimerPage from \"../Timer Page/TimerPage\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction Pomodoro() {\r\n  // currentSession stores all the details of the session we click on\r\n  const [currentSession, setCurrentSession] = useState({});\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"pomodoro\">\r\n        <Switch>\r\n          <Route path=\"/pomodoro/session-manager\">\r\n            <SessionManager\r\n              currentSession={currentSession}\r\n              setCurrentSession={setCurrentSession}\r\n            />\r\n          </Route>\r\n          <Route path=\"/pomodoro/timer\">\r\n            <TimerPage\r\n              currentSession={currentSession}\r\n              setCurrentSession={setCurrentSession}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n","import { layouts } from \"chart.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction TagDistribution(props) {\r\n  const [tagLabels, setTagLabels] = useState([]);\r\n  const [tagTime, setTagTime] = useState([]);\r\n  const [tagColours, setTagColours] = useState([]);\r\n  const [tagBorderColours, setTagBorderColours] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const tagData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n\r\n    setTagLabels(\r\n      tagData.map(function (tag) {\r\n        return tag.name;\r\n      })\r\n    );\r\n\r\n    setTagTime(\r\n      tagData.map(function (tag) {\r\n        return tag.tagTotalTime / 60;\r\n      })\r\n    );\r\n\r\n    setTagColours(\r\n      tagData.map(function (tag) {\r\n        return tag.colour + \"cc\";\r\n      })\r\n    );\r\n    setTagBorderColours(\r\n      tagData.map(function (tag) {\r\n        return tag.colour;\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tag-distribution\">\r\n      <Doughnut\r\n        // defaults={{\r\n        //   layout: {\r\n        //     padding: 10,\r\n        //   },\r\n        // }}\r\n        height={250}\r\n        width={250}\r\n        data={{\r\n          labels: tagLabels,\r\n          datasets: [\r\n            {\r\n              data: tagTime,\r\n              backgroundColor: tagColours,\r\n              borderColor: tagBorderColours,\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }}\r\n        // data={{\r\n        //   labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n        //   datasets: [\r\n        //     {\r\n        //       label: \"# of Votes\",\r\n        //       data: [12, 19, 3, 5, 2, 3],\r\n        //       backgroundColor: [\r\n        //         \"rgba(255, 99, 132, 0.2)\",\r\n        //         \"rgba(54, 162, 235, 0.2)\",\r\n        //         \"rgba(255, 206, 86, 0.2)\",\r\n        //         \"rgba(75, 192, 192, 0.2)\",\r\n        //         \"rgba(153, 102, 255, 0.2)\",\r\n        //         \"rgba(255, 159, 64, 0.2)\",\r\n        //       ],\r\n        //       borderColor: [\r\n        //         \"rgba(255, 99, 132, 1)\",\r\n        //         \"rgba(54, 162, 235, 1)\",\r\n        //         \"rgba(255, 206, 86, 1)\",\r\n        //         \"rgba(75, 192, 192, 1)\",\r\n        //         \"rgba(153, 102, 255, 1)\",\r\n        //         \"rgba(255, 159, 64, 1)\",\r\n        //       ],\r\n        //       borderWidth: 1,\r\n        //     },\r\n        //   ],\r\n        // }}\r\n        options={{\r\n          responsive: false,\r\n          layout: {\r\n            padding: 0,\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              position: \"top\",\r\n              maxWidth: 120,\r\n              labels: {\r\n                boxWidth: 10,\r\n                boxHeight: 10,\r\n              },\r\n            },\r\n            title: {\r\n              display: false,\r\n              text: \"Tag Distribution\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagDistribution;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction StatsCard(props) {\r\n  return (\r\n    <div className=\"stat\">\r\n      <p className=\"stat__name\">{props.name}</p>\r\n      <h3 className=\"stat__value\">{props.value}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatsCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-benson.e45f5f0f.png\";","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction AccuracyMeter(props) {\r\n  useEffect(() => {\r\n    const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n  }, []);\r\n\r\n  const num = props.estimateAccuracy;\r\n  const accuracy = parseFloat(num).toFixed(2);\r\n  const accuracyData = [accuracy, 100 - accuracy];\r\n\r\n  let color;\r\n  let transparentColor = \"rgba(255, 99, 132, 0)\";\r\n\r\n  if (accuracy >= 90) {\r\n    color = \"rgba(75, 192, 192, 1)\";\r\n  }\r\n  if (accuracy >= 50 && accuracy < 90) {\r\n    color = \"rgba(255, 159, 64, 1)\";\r\n  }\r\n  if (accuracy < 50) {\r\n    color = \"rgba(255, 99, 132, 1)\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"accuracy-meter\">\r\n      <h1 className=\"accuracy-meter__value\">\r\n        {accuracy}\r\n        {accuracy == \"N/A\" ? \"\" : \"%\"}\r\n      </h1>\r\n      <Doughnut\r\n        // defaults={{\r\n        //   layout: {\r\n        //     padding: 10,\r\n        //   },\r\n        // }}\r\n        height={250}\r\n        width={250}\r\n        // data={{\r\n        //   labels: tagLabels,\r\n        //   datasets: [\r\n        //     {\r\n        //       data: tagTime,\r\n        //       backgroundColor: tagColours,\r\n        //       borderColor: tagBorderColours,\r\n        //       borderWidth: 1,\r\n        //     },\r\n        //   ],\r\n        // }}\r\n        data={{\r\n          labels: [\"\", \"\"],\r\n          datasets: [\r\n            {\r\n              label: \"# of Votes\",\r\n              data: accuracyData,\r\n              backgroundColor: [color, transparentColor],\r\n              borderColor: [\"#e6e6e6\"],\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          cutout: 90,\r\n          responsive: false,\r\n          layout: {\r\n            padding: 0,\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n              position: \"top\",\r\n              maxWidth: 120,\r\n              labels: {\r\n                boxWidth: 10,\r\n                boxHeight: 10,\r\n              },\r\n            },\r\n            tooltip: {\r\n              enabled: false,\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccuracyMeter;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport TagDistribution from \"./TagDistribution\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\nimport StatsCard from \"./StatsCard\";\r\n\r\nimport RegularShowBenson from \"../../images/Mordecai-Rigby-benson.png\";\r\n\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport TimelapseIcon from \"@material-ui/icons/Timelapse\";\r\nimport PieChartIcon from \"@material-ui/icons/PieChart\";\r\nimport AccuracyMeter from \"./AccuracyMeter\";\r\nimport TrackChangesIcon from \"@material-ui/icons/TrackChanges\";\r\n\r\nfunction StatsPage() {\r\n  const [hasStats, setHasStats] = useState(true);\r\n\r\n  const [taskCompletion, setTaskCompletion] = useState(\"-\");\r\n  const [avgTaskDuration, setAvgTaskDuration] = useState(\"-\");\r\n  const [totalSessions, setTotalSessions] = useState(\"-\");\r\n  const [avgIntervals, setAvgIntervals] = useState(\"-\");\r\n  const [totalHoursActive, setTotalHoursActive] = useState(\"-\");\r\n  const [estimateAccuracy, setEstimateAccuracy] = useState(\"N/A\");\r\n  const [streak, setStreak] = useState(0);\r\n\r\n  const iconStyles = {\r\n    fontSize: 19,\r\n    fill: \"#b8b8b8\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n    if (statsData.time.totalActiveTime == 0) {\r\n      setHasStats(false);\r\n    }\r\n  }, []);\r\n\r\n  // for getting the statsData from localStorage once the page loads\r\n  useEffect(() => {\r\n    const statsData = JSON.parse(localStorage.getItem(\"statsData\") || [])[0];\r\n    if (statsData.tasks.taskCompletion != 0) {\r\n      const num = statsData.tasks.taskCompletion * 100;\r\n      setTaskCompletion(num.toFixed(1));\r\n    }\r\n    if (statsData.tasks.completedTasks != 0) {\r\n      let duration =\r\n        statsData.time.totalActiveTime / statsData.tasks.completedTasks;\r\n      duration = duration / 3600;\r\n\r\n      statsData.tasks.avgTaskDuration = duration;\r\n\r\n      if (duration < 1) {\r\n        setAvgTaskDuration(duration.toFixed(2));\r\n      } else {\r\n        setAvgTaskDuration(duration.toFixed(1));\r\n      }\r\n    }\r\n    if (statsData.time.totalActiveTime != 0) {\r\n      const totalHours = statsData.time.totalActiveTime / 3600;\r\n\r\n      if (totalHours < 1) {\r\n        setTotalHoursActive(totalHours.toFixed(2));\r\n      } else {\r\n        setTotalHoursActive(totalHours.toFixed(1));\r\n      }\r\n    }\r\n\r\n    if (statsData.sessions.totalSession != 0) {\r\n      setTotalSessions(statsData.sessions.totalSession);\r\n      setAvgIntervals(statsData.sessions.avgIntervals);\r\n    }\r\n\r\n    if (statsData.days.streak != 0) {\r\n      setStreak(statsData.days.streak);\r\n    }\r\n\r\n    // for estimate accuracy\r\n    if (statsData.tasks.taskEstimateAccuracy.length !== 0) {\r\n      const estimateArray = statsData.tasks.taskEstimateAccuracy;\r\n      const totalAccuracy =\r\n        estimateArray.reduce(function (total, currentValue) {\r\n          return total + currentValue;\r\n        }, 0) / estimateArray.length;\r\n      setEstimateAccuracy(totalAccuracy);\r\n    }\r\n\r\n    const updatedStatsData = [];\r\n    updatedStatsData.push(statsData);\r\n    localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"task-section\">\r\n      <header className=\"task-section__header\">\r\n        <h2 className=\"heading\">Stats</h2>\r\n      </header>\r\n\r\n      {hasStats === true ? (\r\n        <div className=\"stats-grid\">\r\n          <div className=\"stats-card\" id=\"tag-distribution\">\r\n            <header className=\"stats-card__header\">\r\n              <PieChartIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">Tag Distribution</h2>\r\n            </header>\r\n            <TagDistribution />\r\n          </div>\r\n\r\n          <div className=\"stats-card\" id=\"tasks-stats\">\r\n            <header className=\"stats-card__header\">\r\n              <AssignmentTurnedInIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">Tasks</h2>\r\n            </header>\r\n            <StatsCard\r\n              name=\"Task Completion\"\r\n              value={`${taskCompletion}${taskCompletion === \"-\" ? \"\" : \"%\"}`}\r\n            />\r\n            <StatsCard\r\n              name=\"Avg. Task Duration\"\r\n              value={`${avgTaskDuration}${\r\n                avgTaskDuration === \"-\" ? \"\" : \" hrs\"\r\n              }`}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"stats-card\" id=\"session-stats\">\r\n            <header className=\"stats-card__header\">\r\n              <MenuBookIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">Sessions</h2>\r\n            </header>\r\n            <StatsCard name=\"Total Sessions\" value={totalSessions} />\r\n            <StatsCard name=\"Avg. Intervals\" value={avgIntervals} />\r\n          </div>\r\n\r\n          <div className=\"stats-card\" id=\"activity-stats\">\r\n            <header className=\"stats-card__header\">\r\n              <TimelapseIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">Activity</h2>\r\n            </header>\r\n            <StatsCard\r\n              name=\"Total Hours Active\"\r\n              value={`${totalHoursActive}${\r\n                totalHoursActive === \"-\" ? \"\" : \" hrs\"\r\n              }`}\r\n            />\r\n            <StatsCard\r\n              name=\"Day Streak\"\r\n              value={`${streak} day${streak == 1 ? \"\" : \"s\"}`}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"stats-card\" id=\"interval-estimate\">\r\n            <header className=\"stats-card__header\">\r\n              <TrackChangesIcon style={iconStyles} />\r\n              <h2 className=\"stats-card__header__heading\">\r\n                Interval Estimation Accuracy\r\n              </h2>\r\n            </header>\r\n            <p className=\"stats-card__header__info\">\r\n              How accurately you can guess the number of intervals required for\r\n              completing a task\r\n            </p>\r\n            <AccuracyMeter estimateAccuracy={estimateAccuracy} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <EmptyTasks\r\n          image={RegularShowBenson}\r\n          text=\"Your stats will appear once you start completing your tasks :P\"\r\n          alt=\"Benson wants you to do your job\"\r\n          height={300}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatsPage;\r\n","export default __webpack_public_path__ + \"static/media/illustration-woman-online-mobile.0ec5a893.svg\";","import React from \"react\";\r\nimport { Link, NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\n\r\nimport ProductivePerson from \"../../images/illustration-woman-online-mobile.svg\";\r\n\r\nfunction SideDrawer(props) {\r\n  const iconStyles = {\r\n    fontSize: 21,\r\n    fill: \"#707070\",\r\n  };\r\n\r\n  const activeIconStyles = {\r\n    fontSize: 21,\r\n    fill: \"#3d3d3d\",\r\n  };\r\n\r\n  const location = useLocation().pathname;\r\n  console.log(location);\r\n\r\n  return (\r\n    <div className={`side-drawer ${props.styles}`}>\r\n      <h1 className=\"side-drawer__heading\">Menu</h1>\r\n      <ul className=\"side-drawer__list\">\r\n        <li className=\"side-drawer__list__item\">\r\n          <HomeIcon style={location == \"/\" ? activeIconStyles : iconStyles} />\r\n          <Link to=\"/\">\r\n            <a\r\n              className={`side-drawer__list__item__link ${\r\n                location == \"/\" ? \"side-drawer__list__item__link--active\" : \"\"\r\n              }`}\r\n              onClick={props.linkClickHandle}\r\n            >\r\n              Home\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li className=\"side-drawer__list__item\">\r\n          <MenuBookIcon\r\n            style={\r\n              location == \"/pomodoro/session-manager\"\r\n                ? activeIconStyles\r\n                : iconStyles\r\n            }\r\n          />\r\n          <Link to=\"/pomodoro/session-manager\">\r\n            <a\r\n              className={`side-drawer__list__item__link ${\r\n                location == \"/pomodoro/session-manager\"\r\n                  ? \"side-drawer__list__item__link--active\"\r\n                  : \"\"\r\n              }`}\r\n              onClick={props.linkClickHandle}\r\n            >\r\n              Sessions\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li className=\"side-drawer__list__item\">\r\n          <ListAltIcon\r\n            style={\r\n              location == \"/task-manager/tasks\" ||\r\n              location == \"/task-manager/completed-tasks\"\r\n                ? activeIconStyles\r\n                : iconStyles\r\n            }\r\n          />\r\n          <Link to=\"/task-manager/tasks\">\r\n            <a\r\n              className={`side-drawer__list__item__link ${\r\n                location == \"/task-manager/tasks\" ||\r\n                location == \"/task-manager/completed-tasks\"\r\n                  ? \"side-drawer__list__item__link--active\"\r\n                  : \"\"\r\n              }`}\r\n              onClick={props.linkClickHandle}\r\n            >\r\n              Tasks\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li className=\"side-drawer__list__item\">\r\n          <LocalOfferIcon\r\n            style={\r\n              location == \"/task-manager/tags\" ? activeIconStyles : iconStyles\r\n            }\r\n          />\r\n          <Link to=\"/task-manager/tags\">\r\n            <a\r\n              className={`side-drawer__list__item__link ${\r\n                location == \"/task-manager/tags\"\r\n                  ? \"side-drawer__list__item__link--active\"\r\n                  : \"\"\r\n              }`}\r\n              onClick={props.linkClickHandle}\r\n            >\r\n              Tags\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li className=\"side-drawer__list__item\">\r\n          <BarChartIcon\r\n            style={location == \"/stats\" ? activeIconStyles : iconStyles}\r\n          />\r\n          <Link to=\"/stats\">\r\n            <a\r\n              className={`side-drawer__list__item__link ${\r\n                location == \"/stats\"\r\n                  ? \"side-drawer__list__item__link--active\"\r\n                  : \"\"\r\n              }`}\r\n              onClick={props.linkClickHandle}\r\n            >\r\n              Stats\r\n            </a>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <div className=\"empty-space\"></div>\r\n      <img\r\n        src={ProductivePerson}\r\n        alt=\"Woman looking at big screen\"\r\n        className=\"side-drawer__image\"\r\n      />\r\n      <h1 className=\"side-drawer__name\">Pomodoro</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import React from \"react\";\r\n\r\nfunction Overlay(props) {\r\n  return (\r\n    <div\r\n      className={`overlay ${props.styles}`}\r\n      onClick={props.overlayClickHandle}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default Overlay;\r\n","import React, { Component, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"../src/css/style.css\";\nimport HomePage from \"./components/Home Page/HomePage\";\nimport MobileNavBar from \"./components/NavBar/MobileNavBar\";\nimport TaskManager from \"./components/Task Manager/TaskManager\";\nimport SessionManager from \"./components/Session Manager/SessionManager\";\nimport Pomodoro from \"./components/Pomodoro/Pomodoro\";\nimport StatsPage from \"./components/Stats Page/StatsPage\";\nimport SideDrawer from \"./components/NavBar/SideDrawer\";\nimport Overlay from \"./components/NavBar/Overlay\";\n\nfunction App() {\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\n\n  const sideMenuHandle = function () {\n    const val = !isSideDrawerOpen;\n    setIsSideDrawerOpen(val);\n  };\n\n  const sidemenuClickHandle = function () {\n    sideMenuHandle();\n  };\n\n  const linkClickHandle = function () {\n    sideMenuHandle();\n  };\n\n  const overlayClickHandle = function () {\n    sideMenuHandle();\n  };\n\n  let sideDrawerStyle;\n  let overlayStyle;\n\n  if (isSideDrawerOpen === true) {\n    sideDrawerStyle = \"side-drawer--open\";\n    overlayStyle = \"overlay--open\";\n  } else if (isSideDrawerOpen === false) {\n    sideDrawerStyle = \"side-drawer--close\";\n    overlayStyle = \"overlay--close\";\n  }\n\n  return (\n    <div className=\"main\">\n      <SideDrawer styles={sideDrawerStyle} linkClickHandle={linkClickHandle} />\n      <Overlay overlayClickHandle={overlayClickHandle} styles={overlayStyle} />\n\n      <MobileNavBar sidemenuClickHandle={sidemenuClickHandle} />\n\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/task-manager\" component={TaskManager} />\n      <Route path=\"/session-manager\" component={SessionManager} />\n      <Route path=\"/pomodoro\" component={Pomodoro} />\n      <Route path=\"/stats\" component={StatsPage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}