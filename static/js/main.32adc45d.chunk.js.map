{"version":3,"sources":["components/Button.js","images/illustration-working-brown.svg","components/Home Page/HeroBox.js","components/Home Page/HomePage.js","components/NavBar/MobileNavBar.js","components/Task Manager/TaskNavBar.js","components/Task Manager/Dates.js","components/Task Manager/CreateTask.js","components/Task Manager/TaskCard.js","images/Mordecai-Rigby-enjoying.png","components/Task Manager/EmptyTasks.js","components/Tag Manager/CreateTag.js","components/Task Manager/Tasks.js","images/Mordecai-Rigby-working.png","components/Task Manager/CompletedTasks.js","components/Tag Manager/TagCard.js","images/Mordecai-Rigby-pointing.png","components/Tag Manager/Tags.js","components/Task Manager/TaskManager.js","components/Session Manager/CreateSession.js","components/Session Manager/SessionCard.js","components/Timer Page/CurrentTask.js","sounds/end-sound.wav","components/Timer Page/ControlButton.js","components/Timer Page/TimeButton.js","sounds/start-sound.wav","components/Timer Page/Timer.js","components/Timer Page/CloseWarningMessage.js","components/Timer Page/TimerPage.js","images/Rigby-reading.png","components/Session Manager/SessionManager.js","components/Pomodoro/Pomodoro.js","components/Stats Page/TagDistribution.js","components/Stats Page/StatsCard.js","images/Mordecai-Rigby-benson.png","components/Stats Page/StatsPage.js","App.js","index.js"],"names":["Button","props","state","handleClick","text","to","href","className","onClick","this","Component","HeroBox","greeting","userName","hour","Date","getHours","setState","src","HeroBoxImage","alt","class","HomePage","useEffect","JSON","parse","localStorage","getItem","length","setItem","stringify","tasks","totalTasks","completedTasks","taskCompletion","avgTaskDuration","time","totalActiveTime","MobileNavBar","TaskNavBar","getDate","date","day","String","padStart","month","toLocaleString","n","Number","getOrdinalNum","CreateTask","submitTaskHandle","tagsData","statsData","useState","taskTitle","setTaskTitle","taskTag","setTaskTag","taskEstimate","setTaskEstimate","taskDesc","setTaskDesc","taskTagsData","htmlFor","type","name","id","placeholder","onChange","e","target","value","selected","disabled","hidden","map","tag","cols","rows","preventDefault","obj","task_title","task_tag","task_estimate","task_desc","task_isCompleted","task_startDate","task_endDate","task_id","Math","random","push","toFixed","updatedStatsData","TaskCard","task","tagStyles","forEach","color","colour","setTasks","style","updatedTasks","newTasks","filter","EmptyTasks","styles","height","width","image","objectFit","CreateTag","tagColour","setTagColour","tagName","setTagName","setTagData","tagData","newTag","tagTotalTime","Tasks","tasksData","pendingTasks","path","Data","RegularShowEnjoy","CompletedTasks","RegularShowWork","TagCard","colorStyles","backgroundColor","newTagData","Tags","RegularShowPoint","data","TaskManager","component","CreateSession","sessionData","setSessionData","sessionInfo","activeTime","shortBreak","longBreak","intervals","isStarted","isFinished","currentInterval","title","defaultValue","min","max","index","selectedIndex","childNodes","getAttribute","description","SessionCard","session","sessionIsStarted","setSessionIsStarted","setCurrentSession","currentSession","updatedSessionData","CurrentTask","Timer","minutes","setMinutes","seconds","setSeconds","counter","setCounter","currentBlock","setCurrentBlock","blocks","totalBlocks","isRunning","setIsRunning","isReseted","setIsReseted","sessionTime","setSessionTime","isSession","setIsSession","setTimerIsStarted","intervalId","setInterval","Audio","EndSound","play","updatedTagsData","console","log","clearInterval","CloseWarningMessage","TimerPage","updatedSessionsData","timerIsStarted","SessionManager","RegularShowReading","Pomodoro","TagDistribution","tagLabels","setTagLabels","tagTime","setTagTime","tagColours","setTagColours","tagBorderColours","setTagBorderColours","labels","datasets","borderColor","borderWidth","options","responsive","layout","padding","plugins","legend","position","maxWidth","boxWidth","boxHeight","display","StatsCard","StatsPage","hasStats","setHasStats","setTaskCompletion","setAvgTaskDuration","iconStyles","fontSize","fill","num","duration","RegularShowBenson","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32adc45d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      handleClick: props.handleClick,\r\n      text: props.text,\r\n      to: props.to,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        className=\"button button--basic\"\r\n        onClick={this.state.handleClick}\r\n        to={this.state.to}\r\n      >\r\n        {this.props.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/illustration-working-brown.24887bc9.svg\";","import React, { Component } from \"react\";\r\n\r\nimport HeroBoxImage from \"../../images/illustration-working-brown.svg\";\r\n\r\nexport default class HeroBox extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      greeting: \"\",\r\n      userName: \"Stranger\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var d = new Date();\r\n    const hour = d.getHours();\r\n\r\n    if (hour >= 0 && hour < 12) {\r\n      this.setState({\r\n        greeting: \"Good Morning\",\r\n      });\r\n    } else if (hour >= 12 && hour < 16) {\r\n      this.setState({\r\n        greeting: \"Good Afternoon\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        greeting: \"Good Evening\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero-box\">\r\n        <h3 className=\"greeting\">{this.state.greeting}</h3>\r\n        <h2 className=\"user-name\">{this.state.userName}</h2>\r\n        <img\r\n          src={HeroBoxImage}\r\n          alt=\"Girl looking at computer, being productive\"\r\n          className=\"hero-box__image\"\r\n        />\r\n        <p className=\"hero-box__description\">\r\n          Pomodoro will make your work easier and more\r\n          <span class=\"bold-text\"> productive</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../Button\";\r\nimport HeroBox from \"./HeroBox\";\r\n\r\nfunction HomePage() {\r\n  useEffect(() => {\r\n    const tempStatsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\");\r\n    if (tempStatsData.length === 0) {\r\n      const statsData = [\r\n        {\r\n          tasks: {\r\n            totalTasks: 0,\r\n            completedTasks: 0,\r\n            taskCompletion: 0,\r\n            avgTaskDuration: 0,\r\n          },\r\n          time: {\r\n            totalActiveTime: 0,\r\n          },\r\n        },\r\n      ];\r\n      localStorage.setItem(\"statsData\", JSON.stringify(statsData));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <HeroBox />\r\n      <div class=\"homepage__buttons\">\r\n        <Link to=\"/pomodoro/session-manager\">\r\n          <Button text=\"Start\" />\r\n        </Link>\r\n        <Link to=\"/task-manager/tasks\">\r\n          <Button text=\"View Tasks\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class MobileNavBar extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"mobile-navbar\">\r\n          <div className=\"app-name\">\r\n            <Link to=\"/\">\r\n              <h1>Pomodoro</h1>\r\n            </Link>\r\n          </div>\r\n          <Link to=\"/stats\" className=\"hamburger-menu\">\r\n            <img\r\n              src=\"https://img.icons8.com/material-outlined/24/000000/menu--v1.png\"\r\n              alt=\"Hamburger Menu Icon\"\r\n              className=\"hamburger-menu__icon\"\r\n            />\r\n          </Link>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class TaskNavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"task-nav-bar\">\r\n        <ul className=\"task-nav-bar__list\">\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/tasks\"\r\n            >\r\n              Tasks\r\n            </Link>\r\n          </li>\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/completed-tasks\"\r\n            >\r\n              Completed\r\n            </Link>\r\n          </li>\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/task-manager/tags\"\r\n            >\r\n              Tags\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","function getOrdinalNum(day) {\r\n  var n = Number(day);\r\n  return (\r\n    n +\r\n    (n > 0\r\n      ? [\"th\", \"st\", \"nd\", \"rd\"][(n > 3 && n < 21) || n % 10 > 3 ? 0 : n % 10]\r\n      : \"\")\r\n  );\r\n}\r\nconst getDate = function () {\r\n  const date = new Date();\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = date.toLocaleString(\"default\", { month: \"long\" });\r\n  return getOrdinalNum(day) + \", \" + month;\r\n};\r\n\r\nexport { getDate };\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { getDate } from \"./Dates\";\r\n\r\nfunction CreateTask({ tasks, submitTaskHandle }) {\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n  // console.log(statsData);\r\n\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [taskTag, setTaskTag] = useState(\"\");\r\n  const [taskEstimate, setTaskEstimate] = useState(\"\");\r\n  const [taskDesc, setTaskDesc] = useState(\"\");\r\n  const [taskTagsData, setTaskTagsData] = useState([...tagsData]);\r\n\r\n  const taskNameHandle = function (e) {\r\n    setTaskTitle(e.target.value);\r\n  };\r\n\r\n  const taskTagHandle = function (e) {\r\n    setTaskTag(e.target.value);\r\n  };\r\n\r\n  const taskEstimateHandle = function (e) {\r\n    setTaskEstimate(e.target.value);\r\n  };\r\n\r\n  const taskDescHandle = function (e) {\r\n    setTaskDesc(e.target.value);\r\n  };\r\n\r\n  const taskSubmitHandle = function (e) {\r\n    e.preventDefault();\r\n\r\n    const obj = {};\r\n    obj.task_title = taskTitle;\r\n    obj.task_tag = taskTag;\r\n    obj.task_estimate = taskEstimate;\r\n    obj.task_desc = taskDesc;\r\n    obj.task_isCompleted = false;\r\n    obj.task_startDate = getDate();\r\n    obj.task_endDate = \"-\";\r\n    obj.task_id = Math.random() * 100;\r\n\r\n    // storing the new task in localStorage\r\n    tasks.push(obj);\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(tasks));\r\n    submitTaskHandle(tasks);\r\n\r\n    // updating stats in localStorage\r\n    statsData.tasks.totalTasks += 1;\r\n    const taskCompletion =\r\n      statsData.tasks.completedTasks / statsData.tasks.totalTasks;\r\n    statsData.tasks.taskCompletion = taskCompletion.toFixed(3);\r\n    const updatedStatsData = [];\r\n    updatedStatsData.push(statsData);\r\n    localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-create\">\r\n      <header className=\"task-create__header\">\r\n        <h4 className=\"task-create__heading\">Create Task</h4>\r\n        <Link to=\"/task-manager/tasks\">\r\n          <CloseIcon className=\"close-icon\" />\r\n        </Link>\r\n      </header>\r\n\r\n      <form className=\"task-create__form\">\r\n        <label htmlFor=\"ttitle\" className=\"task-create__form__label\">\r\n          Task Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"tasktitle\"\r\n          id=\"ttitle\"\r\n          placeholder=\"Your Task Title\"\r\n          className=\"input__text\"\r\n          onChange={taskNameHandle}\r\n        />\r\n        <label htmlFor=\"ttag\" className=\"task-create__form__label\">\r\n          Tag\r\n        </label>\r\n        <select\r\n          name=\"tasktag\"\r\n          id=\"ttag\"\r\n          className=\"task-create__form__select\"\r\n          onChange={taskTagHandle}\r\n        >\r\n          <option value=\"\" selected disabled hidden></option>\r\n\r\n          {taskTagsData.length === 0 ? (\r\n            <option disabled>Make some Tags</option>\r\n          ) : (\r\n            taskTagsData.map(function (tag) {\r\n              return (\r\n                <option value={`${tag.name}`} id={tag.id}>\r\n                  {tag.name}\r\n                </option>\r\n              );\r\n            })\r\n          )}\r\n        </select>\r\n        <label htmlFor=\"testimate\" className=\"task-create__form__label\">\r\n          Estimated Intervals to Complete\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"taskestimate\"\r\n          id=\"testimate\"\r\n          placeholder=\"Intervals\"\r\n          className=\"input__number\"\r\n          onChange={taskEstimateHandle}\r\n        />\r\n\r\n        <label htmlFor=\"tdescription\" className=\"task-create__form__label\">\r\n          Description\r\n        </label>\r\n        <textarea\r\n          name=\"taskdescription\"\r\n          id=\"tdescription\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"Description for your Task...\"\r\n          className=\"task-create__form__description\"\r\n          onChange={taskDescHandle}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input__button\"\r\n          type=\"submit\"\r\n          onClick={taskSubmitHandle}\r\n        >\r\n          <Link to=\"/task-manager/tasks\" class=\"input__button__link\">\r\n            <h4>Create Task</h4>\r\n          </Link>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;\r\n","import React from \"react\";\r\n\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\n\r\nimport { getDate } from \"./Dates\";\r\n\r\nfunction TaskCard(props) {\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\"))[0];\r\n\r\n  const {\r\n    task_tag,\r\n    task_title,\r\n    task_desc,\r\n    task_estimate,\r\n    task_id,\r\n    task_startDate,\r\n    task_endDate,\r\n    task_isCompleted,\r\n  } = props.task;\r\n\r\n  const tagStyles = {};\r\n\r\n  if (tagsData.length !== 0) {\r\n    tagsData.forEach(function (tag) {\r\n      if (tag.name === task_tag) {\r\n        tagStyles.color = tag.colour;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  const { tasks, setTasks } = props;\r\n\r\n  const deleteHandle = function () {\r\n    const newTasks = tasks.filter((task) => task_id !== task.task_id);\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(newTasks));\r\n    setTasks([...newTasks]);\r\n  };\r\n\r\n  const completeHandle = function () {\r\n    const updatedTasks = tasks.map(function (task) {\r\n      if (task_id === task.task_id) {\r\n        task.task_isCompleted = true;\r\n        task.task_endDate = getDate();\r\n      }\r\n      return task;\r\n    });\r\n\r\n    // updating completed tasks in localStorage\r\n    statsData.tasks.completedTasks += 1;\r\n    statsData.tasks.taskCompletion =\r\n      statsData.tasks.completedTasks / statsData.tasks.totalTasks;\r\n    const updatedStatsData = [];\r\n    updatedStatsData.push(statsData);\r\n    localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(updatedTasks));\r\n    setTasks([...updatedTasks]);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`task-card ${\r\n        task_isCompleted === true ? \"task-card--completed\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"task-info\">\r\n        <p className=\"task-info__tag\" style={tagStyles}>\r\n          {task_tag}\r\n        </p>\r\n        <h4 className=\"task-info__name\">{task_title}</h4>\r\n        <p className=\"task-info__desc\">{task_desc}</p>\r\n      </div>\r\n      <div className=\"task-card__actions\">\r\n        <button className=\"task-card__actions__button\" onClick={completeHandle}>\r\n          <CheckCircleIcon className=\"task-icon task-icon--done\" />\r\n        </button>\r\n        <button className=\"task-card__actions__button\" onClick={deleteHandle}>\r\n          <DeleteIcon className=\"task-icon task-icon--delete\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"task-card__time\">\r\n        <ScheduleIcon className=\"task-icon--time\" />\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">Estimated Time</p>\r\n          <p className=\"time-stat__value\">{task_estimate} mins</p>\r\n        </div>\r\n        <TodayIcon className=\"task-icon--time\" />\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">Start</p>\r\n          <p className=\"time-stat__value\">{task_startDate}</p>\r\n        </div>\r\n        <div className=\"time-stat\">\r\n          <p className=\"time-stat__name\">End</p>\r\n          <p className=\"time-stat__value\">{task_endDate}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-enjoying.89e2f180.png\";","import React from \"react\";\r\n\r\nimport RegularShowEnjoy from \"../../images/Mordecai-Rigby-enjoying.png\";\r\n\r\nfunction EmptyTasks(props) {\r\n  const styles = {\r\n    height: props.height,\r\n    width: props.width,\r\n  };\r\n\r\n  const imageStyles = {\r\n    height: \"100%\",\r\n    width: \"auto\",\r\n    objectFit: \"cover\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"regular-show\" style={styles}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        className=\"regular-show__pic\"\r\n        style={imageStyles}\r\n      />\r\n      <p className=\"regular-show__text\">{props.text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyTasks;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { tagsData, updateTagData } from \"./TagsData\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction CreateTag(props) {\r\n  const { tagColour, setTagColour, tagName, setTagName, setTagData, tagData } =\r\n    props;\r\n\r\n  const tagNameHandle = function (e) {\r\n    setTagName(e.target.value);\r\n  };\r\n\r\n  const tagColourHandle = function (e) {\r\n    setTagColour(e.target.value);\r\n  };\r\n\r\n  const tagSubmitHandle = function () {\r\n    const newTag = {\r\n      name: tagName,\r\n      colour: tagColour,\r\n      id: Math.random() * 100,\r\n      tagTotalTime: 0,\r\n    };\r\n\r\n    tagData.push(newTag);\r\n    localStorage.setItem(\"tagsData\", JSON.stringify(tagData));\r\n    setTagData([...tagData]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-create\">\r\n      <form className=\"tag-create__form\">\r\n        <div className=\"tag-create__data\">\r\n          <label htmlFor=\"tgname\" className=\"tag-create__form__label\">\r\n            Tag Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"TagName\"\r\n            id=\"tgname\"\r\n            className=\"input__text\"\r\n            onChange={tagNameHandle}\r\n          />\r\n          <label htmlFor=\"tgcolour\" className=\"tag-create__form__label\">\r\n            Tag Colour\r\n          </label>\r\n          <div className=\"input__colour\">\r\n            <input\r\n              type=\"color\"\r\n              name=\"TagColour\"\r\n              id=\"tgcolour\"\r\n              className=\"input__colour__picker\"\r\n              onChange={tagColourHandle}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"tag-create__close\">\r\n          <Link to=\"/task-manager/tags\">\r\n            <CloseIcon />\r\n          </Link>\r\n        </div>\r\n        <div className=\"tag-create__submit\">\r\n          <button\r\n            className=\"input__button\"\r\n            type=\"submit\"\r\n            onClick={tagSubmitHandle}\r\n          >\r\n            <Link to=\"/task-manager/tags\" class=\"input__button__link\">\r\n              <h4>Create Tag</h4>\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTag;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CreateTask from \"./CreateTask\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport EmptyTasks from \"./EmptyTasks\";\r\n\r\nimport RegularShowEnjoy from \"../../images/Mordecai-Rigby-enjoying.png\";\r\nimport CreateTag from \"../Tag Manager/CreateTag\";\r\n\r\nfunction Tasks() {\r\n  const tasksData = JSON.parse(localStorage.getItem(\"tasksData\") || \"[]\");\r\n  const [tasks, setTasks] = useState([...tasksData]);\r\n\r\n  const pendingTasks = tasksData.filter((task) => {\r\n    if (task.task_isCompleted == false) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  const submitTaskHandle = function (Data) {\r\n    setTasks([...Data]);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-section\">\r\n        <header className=\"task-section__header\">\r\n          <h2 className=\"heading\">Tasks</h2>\r\n          <Link to=\"/task-manager/tasks/create-task\" className=\"add-task\">\r\n            <h4>New Task</h4>\r\n            <AddIcon className=\"add-task__icon\" />\r\n          </Link>\r\n        </header>\r\n\r\n        <Switch>\r\n          <Route path=\"/task-manager/tasks/create-task\">\r\n            <CreateTask submitTaskHandle={submitTaskHandle} tasks={tasks} />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {pendingTasks.length == 0 ? (\r\n          <EmptyTasks\r\n            image={RegularShowEnjoy}\r\n            text=\"You have no tasks for now. Go and have some fun :)\"\r\n            alt=\"Moredecai and Rigby enjoying\"\r\n            height={280}\r\n          />\r\n        ) : (\r\n          <ul className=\"task-list\">\r\n            {tasks.map((task) => {\r\n              if (task.task_isCompleted == false) {\r\n                return (\r\n                  <TaskCard\r\n                    key={task.task_id}\r\n                    task={task}\r\n                    tasks={tasks}\r\n                    setTasks={setTasks}\r\n                  />\r\n                );\r\n              }\r\n              return \"\";\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-working.8610382c.png\";","import React, { Component, useState } from \"react\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport EmptyTasks from \"./EmptyTasks\";\r\n\r\nimport RegularShowWork from \"../../images/Mordecai-Rigby-working.png\";\r\n\r\nfunction CompletedTasks() {\r\n  const tasksData = JSON.parse(localStorage.getItem(\"tasksData\") || \"[]\");\r\n  const [tasks, setTasks] = useState([...tasksData]);\r\n\r\n  const completedTasks = tasksData.filter((task) => {\r\n    if (task.task_isCompleted == true) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"task-section\">\r\n      <header className=\"task-section__header\">\r\n        <h2 className=\"heading\">Completed Tasks</h2>\r\n      </header>\r\n      {completedTasks.length == 0 ? (\r\n        <EmptyTasks\r\n          image={RegularShowWork}\r\n          text=\"You haven't completed any tasks. Now get back to work ;)\"\r\n          alt=\"Moredecai and Rigby Working\"\r\n          height={230}\r\n        />\r\n      ) : (\r\n        <ul className=\"task-list\">\r\n          {completedTasks.map((task) => {\r\n            return (\r\n              <TaskCard\r\n                key={task.task_id}\r\n                task={task}\r\n                tasks={tasks}\r\n                setTasks={setTasks}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompletedTasks;\r\n","import React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction TagCard({ name, colour, id, tagData, setTagData }) {\r\n  const deleteTagHandle = function () {\r\n    const newTagData = tagData.filter(function (tag) {\r\n      if (tag.id !== id) {\r\n        return tag;\r\n      }\r\n    });\r\n    setTagData([...newTagData]);\r\n    localStorage.setItem(\"tagsData\", JSON.stringify(newTagData));\r\n  };\r\n\r\n  const colorStyles = {\r\n    backgroundColor: colour,\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-card\">\r\n      <div className=\"tag-card__colour\" style={colorStyles}></div>\r\n      <h3 className=\"tag-card__name\">{name}</h3>\r\n      <div className=\"tag-card__close\">\r\n        <CloseIcon\r\n          className=\"tag-card__close__icon\"\r\n          onClick={deleteTagHandle}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-pointing.e3f7fdfd.png\";","import React, { Component, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateTag from \"./CreateTag\";\r\nimport TagCard from \"./TagCard\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\n\r\nimport RegularShowPoint from \"../../images/Mordecai-Rigby-pointing.png\";\r\n\r\nfunction Tags() {\r\n  const [tagColour, setTagColour] = useState(\"#000\");\r\n  const [tagName, setTagName] = useState(\"\");\r\n\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n  const [tagData, setTagData] = useState([...tagsData]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-section\">\r\n        <header className=\"task-section__header\">\r\n          <h2 className=\"heading\">Tags</h2>\r\n          <Link to=\"/task-manager/tags/create-tag\" className=\"add-task\">\r\n            <h4>New Tag</h4>\r\n            <AddIcon className=\"add-task__icon\" />\r\n          </Link>\r\n        </header>\r\n        <p className=\"warning\">\r\n          Recommended that you don't delete any tags and you choose a dark\r\n          colour\r\n        </p>\r\n\r\n        <Switch>\r\n          <Route path=\"/task-manager/tags/create-tag\">\r\n            <CreateTag\r\n              tagColour={tagColour}\r\n              setTagColour={setTagColour}\r\n              tagName={tagName}\r\n              setTagName={setTagName}\r\n              setTagData={setTagData}\r\n              tagData={tagData}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {tagsData.length === 0 ? (\r\n          <EmptyTasks\r\n            image={RegularShowPoint}\r\n            text=\"C'mon, create tags so you can track your tasks and be more productive :O\"\r\n            alt=\"Moredecai and Rigby Pointing\"\r\n            height={300}\r\n          />\r\n        ) : (\r\n          <div className=\"tag-gallery\">\r\n            {tagData.map(function (data) {\r\n              return (\r\n                <TagCard\r\n                  name={data.name}\r\n                  colour={data.colour}\r\n                  id={data.id}\r\n                  setTagData={setTagData}\r\n                  tagData={tagData}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Tags;\r\n","import React, { Component } from \"react\";\r\nimport TaskNavBar from \"./TaskNavBar\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Tasks from \"./Tasks\";\r\nimport CompletedTasks from \"./CompletedTasks\";\r\nimport Tags from \"../Tag Manager/Tags\";\r\n\r\nfunction TaskManager() {\r\n  return (\r\n    <Router>\r\n      <div className=\"task-manager\">\r\n        <TaskNavBar />\r\n        <Switch>\r\n          <Route path=\"/task-manager/tasks\" component={Tasks} />\r\n          <Route\r\n            path=\"/task-manager/completed-tasks\"\r\n            component={CompletedTasks}\r\n          />\r\n          <Route path=\"/task-manager/tags\" component={Tags} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TaskManager;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction CreateSession({ sessionData, setSessionData }) {\r\n  const tasksData = JSON.parse(\r\n    localStorage.getItem(\"tasksData\") || \"[]\"\r\n  ).filter(function (task) {\r\n    if (task.task_isCompleted === false) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  const sessionInfo = {\r\n    id: Math.random() * 100,\r\n    activeTime: 25,\r\n    shortBreak: 5,\r\n    longBreak: 30,\r\n    intervals: 4,\r\n    isStarted: false,\r\n    isFinished: false,\r\n    currentInterval: 0,\r\n  };\r\n\r\n  const sessionTitleHandle = function (e) {\r\n    sessionInfo.title = e.target.value;\r\n  };\r\n  const sessionActiveTimeHandle = function (e) {\r\n    sessionInfo.activeTime = e.target.value;\r\n  };\r\n  const sessionShortBreakHandle = function (e) {\r\n    sessionInfo.shortBreak = e.target.value;\r\n  };\r\n  const sessionLongBreakHandle = function (e) {\r\n    sessionInfo.longBreak = e.target.value;\r\n  };\r\n  const sessionTaskHandle = function (e) {\r\n    sessionInfo.task = e.target.value;\r\n    var index = e.target.selectedIndex;\r\n    var optionElement = e.target.childNodes[index];\r\n    var id = optionElement.getAttribute(\"id\");\r\n\r\n    tasksData.forEach(function (task) {\r\n      if (task.task_id == id) {\r\n        sessionInfo.tag = task.task_tag;\r\n      }\r\n    });\r\n  };\r\n  const sessionIntervalsHandle = function (e) {\r\n    sessionInfo.intervals = e.target.value;\r\n  };\r\n  const sessionDescriptionHandle = function (e) {\r\n    sessionInfo.description = e.target.value;\r\n  };\r\n\r\n  const sessionSubmitHandle = function () {\r\n    sessionData.push(sessionInfo);\r\n    setSessionData([...sessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(sessionData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-create\">\r\n      <header className=\"session-create__header\">\r\n        <h4 className=\"session-create__heading\">Create Session</h4>\r\n        <Link to=\"/pomodoro/session-manager\">\r\n          <CloseIcon className=\"close-icon\" />\r\n        </Link>\r\n      </header>\r\n\r\n      <form className=\"session-create__form\">\r\n        <label htmlFor=\"stitle\" className=\"session-create__form__label\">\r\n          Session Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"sessiontitle\"\r\n          id=\"stitle\"\r\n          placeholder=\"Your Session Title\"\r\n          className=\"input__text\"\r\n          onChange={sessionTitleHandle}\r\n        />\r\n\r\n        <label htmlFor=\"sstudytime\" className=\"session-create__form__label\">\r\n          Active Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionStudyTime\"\r\n          id=\"sstudytime\"\r\n          className=\"input__number\"\r\n          onChange={sessionActiveTimeHandle}\r\n          defaultValue=\"25\"\r\n          min=\"10\"\r\n          max=\"120\"\r\n        />\r\n\r\n        <label\r\n          htmlFor=\"sshortbreaktime\"\r\n          className=\"session-create__form__label\"\r\n        >\r\n          Short Break Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionShortBreakTime\"\r\n          id=\"sshortbreaktime\"\r\n          className=\"input__number\"\r\n          onChange={sessionShortBreakHandle}\r\n          defaultValue=\"5\"\r\n          min=\"5\"\r\n          max=\"20\"\r\n        />\r\n\r\n        <label htmlFor=\"slongbreaktime\" className=\"session-create__form__label\">\r\n          Long Break Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionLongBreakTime\"\r\n          id=\"slongbreaktime\"\r\n          className=\"input__number\"\r\n          onChange={sessionLongBreakHandle}\r\n          defaultValue=\"30\"\r\n          min=\"20\"\r\n          max=\"60\"\r\n        />\r\n\r\n        <label htmlFor=\"stask\" className=\"session-create__form__label\">\r\n          Task\r\n        </label>\r\n        <select\r\n          name=\"sessiontask\"\r\n          id=\"stask\"\r\n          className=\"session-create__form__select\"\r\n          onChange={sessionTaskHandle}\r\n        >\r\n          <option value=\"\" selected disabled hidden></option>\r\n\r\n          {tasksData.length === 0 ? (\r\n            <option disabled>Create some Tasks</option>\r\n          ) : (\r\n            tasksData.map(function (tasks) {\r\n              return (\r\n                <option value={`${tasks.task_title}`} id={tasks.task_id}>\r\n                  {tasks.task_title}\r\n                </option>\r\n              );\r\n            })\r\n          )}\r\n        </select>\r\n        <label htmlFor=\"sintervals\" className=\"session-create__form__label\">\r\n          Number of Intervals\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"sessionintervals\"\r\n          id=\"sintervals\"\r\n          className=\"input__number\"\r\n          onChange={sessionIntervalsHandle}\r\n          defaultValue=\"4\"\r\n          min=\"1\"\r\n          max=\"12\"\r\n        />\r\n\r\n        <label htmlFor=\"tdescription\" className=\"session-create__form__label\">\r\n          Description\r\n        </label>\r\n        <textarea\r\n          name=\"sessiondescription\"\r\n          id=\"tdescription\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"Description for your Session...\"\r\n          className=\"session-create__form__description\"\r\n          onChange={sessionDescriptionHandle}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input__button\"\r\n          type=\"submit\"\r\n          onClick={sessionSubmitHandle}\r\n        >\r\n          <Link to=\"/pomodoro/session-manager\" class=\"input__button__link\">\r\n            <h4>Create Session</h4>\r\n          </Link>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateSession;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nfunction SessionCard(props) {\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n\r\n  const {\r\n    id,\r\n    activeTime,\r\n    shortBreak,\r\n    longBreak,\r\n    isStarted,\r\n    isFinished,\r\n    title,\r\n    task,\r\n    currentInterval,\r\n    intervals,\r\n    description,\r\n  } = props.session;\r\n\r\n  const [sessionIsStarted, setSessionIsStarted] = useState(\r\n    props.session.isStarted\r\n  );\r\n\r\n  const { sessionData, setSessionData } = props;\r\n\r\n  // to get the details of the current session\r\n  const { currentSession, setCurrentSession } = props;\r\n\r\n  const sessionDeleteHandle = function () {\r\n    const updatedSessionData = sessionData.filter(function (session) {\r\n      if (id !== session.id) {\r\n        return session;\r\n      }\r\n    });\r\n\r\n    setSessionData([...updatedSessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionData));\r\n  };\r\n\r\n  const gotoSessionHandle = function () {\r\n    setSessionIsStarted(true);\r\n\r\n    // need to update sessionIsStarted\r\n    // updates that data in the local storage as well\r\n    const updatedSessionData = sessionData.filter(function (session) {\r\n      if (id === session.id) {\r\n        session.isStarted = true;\r\n      }\r\n      return session;\r\n    });\r\n\r\n    setSessionData([...updatedSessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionData));\r\n\r\n    setCurrentSession(props.session);\r\n  };\r\n\r\n  return (\r\n    <div className=\"session-card\">\r\n      <div className=\"session-card__info\">\r\n        <h4 className=\"session-card__info__name\">{title}</h4>\r\n        <p className=\"session-card__info__task\">{task}</p>\r\n        <p className=\"session-card__info__description\">{description}</p>\r\n      </div>\r\n      <div className=\"session-card__actions\">\r\n        <button\r\n          className=\"session-card__actions__button\"\r\n          onClick={sessionDeleteHandle}\r\n        >\r\n          <DeleteIcon />\r\n        </button>\r\n\r\n        {isFinished === false ? (\r\n          <Link to=\"/pomodoro/timer\">\r\n            <button\r\n              className=\"session-card__actions__button\"\r\n              onClick={gotoSessionHandle}\r\n            >\r\n              <KeyboardArrowRightIcon />\r\n            </button>\r\n          </Link>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n      <div className=\"session-card__status\">\r\n        <div className=\"session-card__status__stat\">\r\n          <p className=\"session-card__status__stat__name\">Status: </p>\r\n          {isFinished === true ? (\r\n            <p className=\"session-card__status__stat__value session-card__status__stat__value--finished \">\r\n              Finished\r\n            </p>\r\n          ) : sessionIsStarted === true ? (\r\n            <p className=\"session-card__status__stat__value session-card__status__stat__value--started \">\r\n              Started\r\n            </p>\r\n          ) : (\r\n            <p className=\"session-card__status__stat__value\">Not Started</p>\r\n          )}\r\n        </div>\r\n        <div className=\"session-card__status__stat\">\r\n          <p className=\"session-card__status__stat__name\">Progress:</p>\r\n          <p className=\"session-card__status__stat__value\">\r\n            {currentInterval}/{intervals}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SessionCard;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class CurrentTask extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      task: props.task,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"current-task\">\r\n        <h3 className=\"current-task__heading\">Current Task</h3>\r\n        <h4 className=\"current-task__name\">{this.state.task}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/end-sound.1154923f.wav\";","import React, { Component } from \"react\";\r\n\r\nexport default class CancelButton extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      text: props.text,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <a href=\"javascript:void(0)\" className=\"button button--cancel\">\r\n        {this.state.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class DoneButton extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      text: props.text,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a href=\"javascript:void(0)\" className=\"button button--basic\">\r\n        {this.state.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/start-sound.70f7d22e.wav\";","import React, { useState, useEffect } from \"react\";\r\nimport ControlButton from \"./ControlButton\";\r\nimport TimeButton from \"./TimeButton\";\r\n\r\nimport StartSound from \"../../sounds/start-sound.wav\";\r\nimport EndSound from \"../../sounds/end-sound.wav\";\r\n\r\nfunction Timer(props) {\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n\r\n  const [minutes, setMinutes] = useState(props.activeTime);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const [currentBlock, setCurrentBlock] = useState(props.currentBlock);\r\n  const [totalBlocks, settotalBlocks] = useState(props.blocks);\r\n\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isReseted, setIsReseted] = useState(true);\r\n\r\n  // total active time for this session\r\n  const [sessionTime, setSessionTime] = useState(0);\r\n\r\n  const { activeTime, shortBreak, longBreak } = props;\r\n  const { currentSession, setCurrentSession } = props;\r\n  const { isSession, setIsSession } = props;\r\n  const { setTimerIsStarted } = props;\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    if (isRunning === true) {\r\n      setTimerIsStarted(true);\r\n      intervalId = setInterval(() => {\r\n        if (seconds === 0) {\r\n          if (minutes !== 0) {\r\n            setMinutes(minutes - 1);\r\n            setSeconds(59);\r\n\r\n            if (isSession === true) {\r\n              setSessionTime(sessionTime + 1);\r\n            }\r\n          } else {\r\n            const endSound = new Audio(EndSound);\r\n            endSound.play();\r\n\r\n            if (isSession === true) {\r\n              currentSession.currentInterval = currentBlock + 1;\r\n              setCurrentSession(currentSession);\r\n              setCurrentBlock((currentBlock) => currentBlock + 1);\r\n              setIsReseted(false);\r\n              setIsSession(false);\r\n\r\n              if (currentBlock + 1 == totalBlocks) {\r\n                currentSession.isFinished = true;\r\n              }\r\n\r\n              // update the tagsData in localstorage, by updating the tag time with sessionTime\r\n              const tagsData = JSON.parse(localStorage.getItem(\"tagsData\"));\r\n\r\n              const updatedTagsData = tagsData.map(function (tag) {\r\n                console.log(tag, currentSession);\r\n                if (tag.name === currentSession.tag) {\r\n                  // updating totalActiveTime in localStorage\r\n                  statsData.time.totalActiveTime += sessionTime;\r\n                  const updatedStatsData = [];\r\n                  updatedStatsData.push(statsData);\r\n                  localStorage.setItem(\r\n                    \"statsData\",\r\n                    JSON.stringify(updatedStatsData)\r\n                  );\r\n\r\n                  tag.tagTotalTime = tag.tagTotalTime + sessionTime;\r\n                  setSessionTime(0);\r\n                }\r\n                return tag;\r\n              });\r\n\r\n              localStorage.setItem(\"tagsData\", JSON.stringify(updatedTagsData));\r\n            }\r\n\r\n            setIsRunning(false);\r\n            return;\r\n          }\r\n        } else {\r\n          setSeconds(seconds - 1);\r\n          if (isSession === true) {\r\n            setSessionTime(sessionTime + 1);\r\n          }\r\n        }\r\n\r\n        setCounter((counter) => counter + 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [isRunning, counter]);\r\n\r\n  const startHandle = function () {\r\n    if (currentSession.isFinished !== true && isReseted == true) {\r\n      setIsRunning(true);\r\n    }\r\n  };\r\n\r\n  const pauseHandle = function () {\r\n    if (currentSession.isFinished !== true) {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  const pomodoroHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(true);\r\n      setMinutes(activeTime);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  const shortBreakHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(false);\r\n      setMinutes(shortBreak);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  const longBreakHandle = function () {\r\n    if (isRunning === false) {\r\n      setIsSession(false);\r\n      setMinutes(longBreak);\r\n      setSeconds(0);\r\n      setIsReseted(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <h1 className=\"timer__value\">\r\n        {minutes < 10 ? \"0\" : \"\"}\r\n        {minutes}:{seconds < 10 ? \"0\" : \"\"}\r\n        {seconds}\r\n      </h1>\r\n      <p className=\"timer__session\">\r\n        {currentBlock}/{totalBlocks}\r\n      </p>\r\n      <div className=\"timerpage__controls\">\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"button button--basic\"\r\n          onClick={startHandle}\r\n        >\r\n          Start\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"button button--basic\"\r\n          onClick={pauseHandle}\r\n        >\r\n          Pause\r\n        </a>\r\n      </div>\r\n\r\n      <div class=\"timerpage__buttons\">\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={pomodoroHandle}\r\n        >\r\n          <h4>Pomodoro</h4>\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={shortBreakHandle}\r\n        >\r\n          <h4>Short Break</h4>\r\n        </a>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"pomodoro-controls\"\r\n          onClick={longBreakHandle}\r\n        >\r\n          <h4>Long Break</h4>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CloseWarningMessage() {\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"close-warning\">\r\n        <p className=\"close-warning__message\">\r\n          Are you sure you want to go back?\r\n        </p>\r\n        <div className=\"close-warning__action\">\r\n          <Link\r\n            to=\"/pomodoro/timer/\"\r\n            className=\"close-warning__action__buttons close-warning__action__buttons--green\"\r\n          >\r\n            Stay Here\r\n          </Link>\r\n          <Link\r\n            to=\"/pomodoro/session-manager\"\r\n            className=\"close-warning__action__buttons close-warning__action__buttons--red\"\r\n          >\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CloseWarningMessage;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CurrentTask from \"./CurrentTask\";\r\nimport Timer from \"./Timer\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport CloseWarningMessage from \"./CloseWarningMessage\";\r\n\r\nfunction TimerPage({ currentSession, setCurrentSession }) {\r\n  useEffect(() => {\r\n    return () => {\r\n      const sessionsData = JSON.parse(\r\n        localStorage.getItem(\"sessionsData\") || \"[]\"\r\n      );\r\n\r\n      const updatedSessionsData = sessionsData.map(function (session) {\r\n        if (currentSession.id === session.id) {\r\n          return currentSession;\r\n        }\r\n        return session;\r\n      });\r\n\r\n      localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionsData));\r\n    };\r\n  }, []);\r\n\r\n  const {\r\n    activeTime,\r\n    shortBreak,\r\n    longBreak,\r\n    currentInterval: currentBlock,\r\n    intervals: blocks,\r\n  } = currentSession;\r\n\r\n  const [isSession, setIsSession] = useState(true);\r\n  const [timerIsStarted, setTimerIsStarted] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"timerpage\">\r\n        <div className=\"timerpage__back\">\r\n          <Link\r\n            to={`${\r\n              timerIsStarted === false\r\n                ? \"/pomodoro/session-manager\"\r\n                : \"/pomodoro/timer/close-message\"\r\n            }`}\r\n          >\r\n            <ArrowBackIosIcon />\r\n          </Link>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route path=\"/pomodoro/timer/close-message\">\r\n            <CloseWarningMessage />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {isSession === true ? (\r\n          <CurrentTask task={currentSession.task} />\r\n        ) : (\r\n          <div className=\"break-time\">\r\n            <h3>Break Time</h3>\r\n            <h4>Time for rest</h4>\r\n          </div>\r\n        )}\r\n        <Timer\r\n          activeTime={activeTime}\r\n          shortBreak={shortBreak}\r\n          longBreak={longBreak}\r\n          currentBlock={currentBlock}\r\n          blocks={blocks}\r\n          currentSession={currentSession}\r\n          setCurrentSession={setCurrentSession}\r\n          isSession={isSession}\r\n          setIsSession={setIsSession}\r\n          setTimerIsStarted={setTimerIsStarted}\r\n        />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default TimerPage;\r\n","export default __webpack_public_path__ + \"static/media/Rigby-reading.343b8b6a.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateSession from \"./CreateSession\";\r\nimport SessionCard from \"./SessionCard\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\nimport TimerPage from \"../Timer Page/TimerPage\";\r\n\r\nimport RegularShowReading from \"../../images/Rigby-reading.png\";\r\n\r\nfunction SessionManager({ currentSession, setCurrentSession }) {\r\n  let [sessionData, setSessionData] = useState([]);\r\n  useEffect(() => {\r\n    setSessionData([\r\n      ...JSON.parse(localStorage.getItem(\"sessionsData\") || \"[]\"),\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-manager\">\r\n        <div className=\"task-section\">\r\n          <header className=\"task-section__header\">\r\n            <h2 className=\"heading\">Sessions</h2>\r\n            <Link\r\n              to=\"/pomodoro/session-manager/create-session\"\r\n              className=\"add-task\"\r\n            >\r\n              <h4>New Session</h4>\r\n              <AddIcon className=\"add-task__icon\" />\r\n            </Link>\r\n          </header>\r\n          <Switch>\r\n            <Route path=\"/pomodoro/session-manager/create-session\">\r\n              <CreateSession\r\n                sessionData={sessionData}\r\n                setSessionData={setSessionData}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n          {sessionData.length === 0 ? (\r\n            <EmptyTasks\r\n              image={RegularShowReading}\r\n              text=\"Create a session and let's get productive :D\"\r\n              alt=\"Rigby Reading\"\r\n              height={300}\r\n            />\r\n          ) : (\r\n            sessionData.map(function (session) {\r\n              return (\r\n                <SessionCard\r\n                  session={session}\r\n                  sessionData={sessionData}\r\n                  setSessionData={setSessionData}\r\n                  currentSession={currentSession}\r\n                  setCurrentSession={setCurrentSession}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default SessionManager;\r\n","import React, { useState } from \"react\";\r\nimport SessionManager from \"../Session Manager/SessionManager\";\r\nimport TimerPage from \"../Timer Page/TimerPage\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction Pomodoro() {\r\n  // currentSession stores all the details of the session we click on\r\n  const [currentSession, setCurrentSession] = useState({});\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"pomodoro\">\r\n        <Switch>\r\n          <Route path=\"/pomodoro/session-manager\">\r\n            <SessionManager\r\n              currentSession={currentSession}\r\n              setCurrentSession={setCurrentSession}\r\n            />\r\n          </Route>\r\n          <Route path=\"/pomodoro/timer\">\r\n            <TimerPage\r\n              currentSession={currentSession}\r\n              setCurrentSession={setCurrentSession}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n","import { layouts } from \"chart.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction TagDistribution(props) {\r\n  const [tagLabels, setTagLabels] = useState([]);\r\n  const [tagTime, setTagTime] = useState([]);\r\n  const [tagColours, setTagColours] = useState([]);\r\n  const [tagBorderColours, setTagBorderColours] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const tagData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n\r\n    setTagLabels(\r\n      tagData.map(function (tag) {\r\n        return tag.name;\r\n      })\r\n    );\r\n\r\n    setTagTime(\r\n      tagData.map(function (tag) {\r\n        return tag.tagTotalTime / 60;\r\n      })\r\n    );\r\n\r\n    setTagColours(\r\n      tagData.map(function (tag) {\r\n        return tag.colour + \"cc\";\r\n      })\r\n    );\r\n    setTagBorderColours(\r\n      tagData.map(function (tag) {\r\n        return tag.colour;\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tag-distribution\">\r\n      <Doughnut\r\n        // defaults={{\r\n        //   layout: {\r\n        //     padding: 10,\r\n        //   },\r\n        // }}\r\n        height={250}\r\n        width={250}\r\n        data={{\r\n          labels: tagLabels,\r\n          datasets: [\r\n            {\r\n              data: tagTime,\r\n              backgroundColor: tagColours,\r\n              borderColor: tagBorderColours,\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }}\r\n        // data={{\r\n        //   labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n        //   datasets: [\r\n        //     {\r\n        //       label: \"# of Votes\",\r\n        //       data: [12, 19, 3, 5, 2, 3],\r\n        //       backgroundColor: [\r\n        //         \"rgba(255, 99, 132, 0.2)\",\r\n        //         \"rgba(54, 162, 235, 0.2)\",\r\n        //         \"rgba(255, 206, 86, 0.2)\",\r\n        //         \"rgba(75, 192, 192, 0.2)\",\r\n        //         \"rgba(153, 102, 255, 0.2)\",\r\n        //         \"rgba(255, 159, 64, 0.2)\",\r\n        //       ],\r\n        //       borderColor: [\r\n        //         \"rgba(255, 99, 132, 1)\",\r\n        //         \"rgba(54, 162, 235, 1)\",\r\n        //         \"rgba(255, 206, 86, 1)\",\r\n        //         \"rgba(75, 192, 192, 1)\",\r\n        //         \"rgba(153, 102, 255, 1)\",\r\n        //         \"rgba(255, 159, 64, 1)\",\r\n        //       ],\r\n        //       borderWidth: 1,\r\n        //     },\r\n        //   ],\r\n        // }}\r\n        options={{\r\n          responsive: false,\r\n          layout: {\r\n            padding: 0,\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              position: \"top\",\r\n              maxWidth: 120,\r\n              labels: {\r\n                boxWidth: 10,\r\n                boxHeight: 10,\r\n              },\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: \"Tag Distribution\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagDistribution;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction StatsCard(props) {\r\n  return (\r\n    <div className=\"stat\">\r\n      <p className=\"stat__name\">{props.name}</p>\r\n      <h3 className=\"stat__value\">{props.value}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatsCard;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-benson.e45f5f0f.png\";","import React, { useState, useEffect } from \"react\";\r\n\r\nimport TagDistribution from \"./TagDistribution\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\nimport StatsCard from \"./StatsCard\";\r\n\r\nimport RegularShowBenson from \"../../images/Mordecai-Rigby-benson.png\";\r\n\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport TimelapseIcon from \"@material-ui/icons/Timelapse\";\r\n\r\nfunction StatsPage() {\r\n  const statsData = JSON.parse(localStorage.getItem(\"statsData\") || \"[]\")[0];\r\n\r\n  const [hasStats, setHasStats] = useState(true);\r\n\r\n  const [taskCompletion, setTaskCompletion] = useState(\"-\");\r\n  const [avgTaskDuration, setAvgTaskDuration] = useState(\"-\");\r\n\r\n  const iconStyles = {\r\n    fontSize: 23,\r\n    fill: \"#b8b8b8\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n    if (tagsData.length === 0) {\r\n      setHasStats(false);\r\n    }\r\n  }, []);\r\n\r\n  // for getting the statsData from localStorage once the page loads\r\n  useEffect(() => {\r\n    const statsData = JSON.parse(localStorage.getItem(\"statsData\") || [])[0];\r\n    if (statsData.tasks.taskCompletion != 0) {\r\n      const num = statsData.tasks.taskCompletion * 100;\r\n      setTaskCompletion(num.toFixed(1));\r\n    }\r\n    if (statsData.tasks.completedTasks != 0) {\r\n      let duration =\r\n        statsData.time.totalActiveTime / statsData.tasks.completedTasks;\r\n      duration = duration / 3600;\r\n\r\n      statsData.tasks.avgTaskDuration = duration;\r\n\r\n      if (duration < 1) {\r\n        setAvgTaskDuration(duration.toFixed(2));\r\n      } else {\r\n        setAvgTaskDuration(duration.toFixed(1));\r\n      }\r\n    }\r\n\r\n    const updatedStatsData = [];\r\n    updatedStatsData.push(statsData);\r\n    localStorage.setItem(\"statsData\", JSON.stringify(updatedStatsData));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"task-section\">\r\n      <header className=\"task-section__header\">\r\n        <h2 className=\"heading\">Stats</h2>\r\n      </header>\r\n\r\n      {hasStats === true ? (\r\n        <TagDistribution />\r\n      ) : (\r\n        <EmptyTasks\r\n          image={RegularShowBenson}\r\n          text=\"Your stats will appear once you start completing your tasks :P\"\r\n          alt=\"Benson wants you to do your job\"\r\n          height={300}\r\n        />\r\n      )}\r\n\r\n      <div className=\"stats-card\">\r\n        <header className=\"stats-card__header\">\r\n          <AssignmentTurnedInIcon style={iconStyles} />\r\n          <h2 className=\"stats-card__header__heading\">Tasks</h2>\r\n        </header>\r\n        <StatsCard\r\n          name=\"Task Completion\"\r\n          value={`${taskCompletion}${taskCompletion === \"-\" ? \"\" : \"%\"}`}\r\n        />\r\n        <StatsCard\r\n          name=\"Avg. Task Duration\"\r\n          value={`${avgTaskDuration}${avgTaskDuration === \"-\" ? \"\" : \"hrs\"}`}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"stats-card\">\r\n        <header className=\"stats-card__header\">\r\n          <MenuBookIcon style={iconStyles} />\r\n          <h2 className=\"stats-card__header__heading\">Sessions</h2>\r\n        </header>\r\n        <StatsCard name=\"Total Sessions\" value=\"12\" />\r\n        <StatsCard name=\"Avg. Intervals\" value=\"4.7\" />\r\n      </div>\r\n\r\n      <div className=\"stats-card\">\r\n        <header className=\"stats-card__header\">\r\n          <TimelapseIcon style={iconStyles} />\r\n          <h2 className=\"stats-card__header__heading\">Activity</h2>\r\n        </header>\r\n        <StatsCard name=\"Total Hours Active\" value=\"14 hrs\" />\r\n        <StatsCard name=\"Day Streak\" value=\"5 Days\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatsPage;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"../src/css/style.css\";\nimport HomePage from \"./components/Home Page/HomePage\";\nimport MobileNavBar from \"./components/NavBar/MobileNavBar\";\nimport TaskManager from \"./components/Task Manager/TaskManager\";\nimport SessionManager from \"./components/Session Manager/SessionManager\";\nimport Pomodoro from \"./components/Pomodoro/Pomodoro\";\nimport StatsPage from \"./components/Stats Page/StatsPage\";\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <MobileNavBar />\n\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/task-manager\" component={TaskManager} />\n      <Route path=\"/session-manager\" component={SessionManager} />\n      <Route path=\"/pomodoro\" component={Pomodoro} />\n      <Route path=\"/stats\" component={StatsPage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}