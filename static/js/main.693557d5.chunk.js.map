{"version":3,"sources":["components/Button.js","images/illustration-working-brown.svg","components/Home Page/HeroBox.js","components/Home Page/HomePage.js","components/NavBar/MobileNavBar.js","components/Timer Page/CancelButton.js","components/Timer Page/ControlButton.js","components/Timer Page/CurrentTask.js","components/Timer Page/DoneButton.js","components/Timer Page/Timer.js","components/Timer Page/TimerPage.js","components/Task Manager/TaskNavBar.js","components/Task Manager/CreateTask.js","images/Mordecai-Rigby-enjoying.png","components/Task Manager/EmptyTasks.js","images/Mordecai-Rigby-working.png","images/Mordecai-Rigby-pointing.png","components/Task Manager/TaskManager.js","components/Session Manager/CreateSession.js","components/Session Manager/SessionCard.js","images/Rigby-reading.png","components/Session Manager/SessionManager.js","App.js","index.js"],"names":["Button","props","state","handleClick","text","to","href","className","onClick","this","Component","HeroBox","src","HeroBoxImage","alt","class","HomePage","MobileNavBar","Timer","useState","minutes","setMinutes","seconds","setSeconds","currentSession","setCurrentSession","totalSession","useEffect","interval","setInterval","clearInterval","TimerPage","CreateTask","EmptyTasks","image","TaskManager","CreateSession","sessionData","setSessionData","console","log","tasksData","JSON","parse","localStorage","getItem","filter","task","task_isCompleted","sessionInfo","id","Math","random","activeTime","shortBreak","longBreak","intervals","isStarted","isFinished","currentInterval","htmlFor","type","name","placeholder","onChange","e","title","target","value","defaultValue","min","max","selected","disabled","hidden","length","map","tasks","task_title","task_id","cols","rows","description","push","setItem","stringify","SessionCard","session","isFinised","updatedSessionData","SessionManager","path","RegularShowReading","App","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.693557d5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      handleClick: props.handleClick,\r\n      text: props.text,\r\n      to: props.to,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        className=\"button button--basic\"\r\n        onClick={this.state.handleClick}\r\n        to={this.state.to}\r\n      >\r\n        {this.props.text}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/illustration-working-brown.24887bc9.svg\";","import React, { Component } from \"react\";\r\n\r\nimport HeroBoxImage from \"../../images/illustration-working-brown.svg\";\r\n\r\nexport default class HeroBox extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"hero-box\">\r\n        <h3 className=\"greeting\">Good Morning</h3>\r\n        <h2 className=\"user-name\">Nithin</h2>\r\n        <img\r\n          src={HeroBoxImage}\r\n          alt=\"Girl looking at computer, being productive\"\r\n          className=\"hero-box__image\"\r\n        />\r\n        <p className=\"hero-box__description\">\r\n          Pomodoro will make your work easier and more\r\n          <span class=\"bold-text\"> productive</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../Button\";\r\nimport HeroBox from \"./HeroBox\";\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <HeroBox />\r\n        <div class=\"homepage__buttons\">\r\n          <Link to=\"/session-manager\">\r\n            <Button text=\"Start\" />\r\n          </Link>\r\n          <Link to=\"/tasks\">\r\n            <Button text=\"View Tasks\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class MobileNavBar extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"mobile-navbar\">\r\n          <div className=\"app-name\">\r\n            <Link to=\"/\">\r\n              <h1>Pomodoro</h1>\r\n            </Link>\r\n          </div>\r\n          <a href=\"javascript:void(0)\" className=\"hamburger-menu\">\r\n            <img\r\n              src=\"https://img.icons8.com/material-outlined/24/000000/menu--v1.png\"\r\n              alt=\"Hamburger Menu Icon\"\r\n              className=\"hamburger-menu__icon\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class CancelButton extends Component {\r\n  render() {\r\n    return (\r\n      <a href=\"javascript:void(0)\" className=\"button button--cancel\">\r\n        Cancel\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ControlButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      current:\r\n        \"https://img.icons8.com/material-outlined/96/ffffff/pause--v1.png\",\r\n      pause: \"https://img.icons8.com/material-outlined/96/ffffff/pause--v1.png\",\r\n      play: \"https://img.icons8.com/material-rounded/96/ffffff/play.png\",\r\n      count: 1,\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const newCurrent = {};\r\n    if (this.state.count % 2 == 1) {\r\n      this.setState({\r\n        current: this.state.play,\r\n        count: 2,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        current: this.state.pause,\r\n        count: 1,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a href=\"javascript:void(0)\" className=\"control-button\">\r\n        <img\r\n          src={this.state.current}\r\n          alt=\"Control Button\"\r\n          className=\"control-button__icon\"\r\n          onClick={this.handleClick}\r\n        />\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class CurrentTask extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"current-task\">\r\n        <h3 className=\"current-task__heading\">Current Task</h3>\r\n        <h4 className=\"current-task__name\">\r\n          Migrate The Database To Production\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class DoneButton extends Component {\r\n  render() {\r\n    return (\r\n      <a href=\"javascript:void(0)\" className=\"button button--done\">\r\n        Done\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ControlButton from \"./ControlButton\";\r\n\r\nfunction Timer() {\r\n  const [minutes, setMinutes] = useState(25);\r\n  const [seconds, setSeconds] = useState(10);\r\n  const [currentSession, setCurrentSession] = useState(0);\r\n  const [totalSession, setTotalSession] = useState(8);\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      clearInterval(interval);\r\n\r\n      if (seconds === 0) {\r\n        if (minutes !== 0) {\r\n          setMinutes(minutes - 1);\r\n          setSeconds(59);\r\n        } else {\r\n          setCurrentSession(currentSession + 1);\r\n          return;\r\n        }\r\n      } else {\r\n        setSeconds(seconds - 1);\r\n      }\r\n    }, 1000);\r\n  }, [seconds]);\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <h1 className=\"timer__value\">\r\n        {minutes < 10 ? \"0\" : \"\"}\r\n        {minutes}:{seconds < 10 ? \"0\" : \"\"}\r\n        {seconds}\r\n      </h1>\r\n      <p className=\"timer__session\">\r\n        {currentSession}/{totalSession}\r\n      </p>\r\n      <button>Start</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from \"react\";\r\nimport MobileNavBar from \"../NavBar/MobileNavBar\";\r\nimport CancelButton from \"./CancelButton\";\r\nimport ControlButton from \"./ControlButton\";\r\nimport CurrentTask from \"./CurrentTask\";\r\nimport DoneButton from \"./DoneButton\";\r\nimport Timer from \"./Timer\";\r\n\r\nexport default class TimerPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"timerpage\">\r\n        {/* <CurrentTask /> */}\r\n        {/* <DoneButton /> */}\r\n        <Timer />\r\n        {/* <ControlButton /> */}\r\n        {/* <CancelButton /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class TaskNavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"task-nav-bar\">\r\n        <ul className=\"task-nav-bar__list\">\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/taskmanager/tasks\"\r\n            >\r\n              Tasks\r\n            </Link>\r\n          </li>\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/taskmanager/completed\"\r\n            >\r\n              Completed\r\n            </Link>\r\n          </li>\r\n          <li className=\"task-nav-bar__list__item\">\r\n            <Link\r\n              href=\"javascript:void(0)\"\r\n              className=\"task-nav-bar__list__item__link\"\r\n              to=\"/taskmanager/tags\"\r\n            >\r\n              Tags\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { getDate } from \"./Dates\";\r\n\r\nfunction CreateTask({ tasks, submitTaskHandle }) {\r\n  const tagsData = JSON.parse(localStorage.getItem(\"tagsData\") || \"[]\");\r\n\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [taskTag, setTaskTag] = useState(\"\");\r\n  const [taskEstimate, setTaskEstimate] = useState(\"\");\r\n  const [taskDesc, setTaskDesc] = useState(\"\");\r\n  const [taskTagsData, setTaskTagsData] = useState([...tagsData]);\r\n\r\n  const taskNameHandle = function (e) {\r\n    setTaskTitle(e.target.value);\r\n  };\r\n\r\n  const taskTagHandle = function (e) {\r\n    console.log(e.target);\r\n    setTaskTag(e.target.value);\r\n  };\r\n\r\n  const taskEstimateHandle = function (e) {\r\n    setTaskEstimate(e.target.value);\r\n  };\r\n\r\n  const taskDescHandle = function (e) {\r\n    setTaskDesc(e.target.value);\r\n  };\r\n\r\n  const taskSubmitHandle = function (e) {\r\n    e.preventDefault();\r\n\r\n    const obj = {};\r\n    obj.task_title = taskTitle;\r\n    obj.task_tag = taskTag;\r\n    obj.task_estimate = taskEstimate;\r\n    obj.task_desc = taskDesc;\r\n    obj.task_isCompleted = false;\r\n    obj.task_startDate = getDate();\r\n    obj.task_endDate = \"-\";\r\n    obj.task_id = Math.random() * 100;\r\n\r\n    tasks.push(obj);\r\n    console.log(tasks);\r\n    localStorage.setItem(\"tasksData\", JSON.stringify(tasks));\r\n    submitTaskHandle(tasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-create\">\r\n      <header className=\"task-create__header\">\r\n        <h4 className=\"task-create__heading\">Create Task</h4>\r\n        <Link to=\"/taskmanager/tasks\">\r\n          <CloseIcon className=\"close-icon\" />\r\n        </Link>\r\n      </header>\r\n\r\n      <form className=\"task-create__form\">\r\n        <label htmlFor=\"ttitle\" className=\"task-create__form__label\">\r\n          Task Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"tasktitle\"\r\n          id=\"ttitle\"\r\n          placeholder=\"Your Task Title\"\r\n          className=\"input__text\"\r\n          onChange={taskNameHandle}\r\n        />\r\n        <label htmlFor=\"ttag\" className=\"task-create__form__label\">\r\n          Tag\r\n        </label>\r\n        <select\r\n          name=\"tasktag\"\r\n          id=\"ttag\"\r\n          className=\"task-create__form__select\"\r\n          onChange={taskTagHandle}\r\n        >\r\n          <option value=\"\" selected disabled hidden></option>\r\n\r\n          {/* {console.log(taskTagsData.length)} */}\r\n\r\n          {taskTagsData.length === 0 ? (\r\n            <option disabled>Make some Tags</option>\r\n          ) : (\r\n            taskTagsData.map(function (tag) {\r\n              return (\r\n                <option value={`${tag.name}`} id={tag.id}>\r\n                  {tag.name}\r\n                </option>\r\n              );\r\n            })\r\n          )}\r\n        </select>\r\n        <label htmlFor=\"testimate\" className=\"task-create__form__label\">\r\n          Estimated Time to Complete\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"taskestimate\"\r\n          id=\"testimate\"\r\n          placeholder=\"Time in Minutes\"\r\n          className=\"input__text\"\r\n          onChange={taskEstimateHandle}\r\n        />\r\n\r\n        <label htmlFor=\"tdescription\" className=\"task-create__form__label\">\r\n          Description\r\n        </label>\r\n        <textarea\r\n          name=\"taskdescription\"\r\n          id=\"tdescription\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"Description for your Task...\"\r\n          className=\"task-create__form__description\"\r\n          onChange={taskDescHandle}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input__button\"\r\n          type=\"submit\"\r\n          onClick={taskSubmitHandle}\r\n        >\r\n          <Link to=\"/taskmanager/tasks\" class=\"input__button__link\">\r\n            <h4>Create Task</h4>\r\n          </Link>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-enjoying.89e2f180.png\";","import React from \"react\";\r\n\r\nimport RegularShowEnjoy from \"../../images/Mordecai-Rigby-enjoying.png\";\r\n\r\nfunction EmptyTasks(props) {\r\n  return (\r\n    <div className=\"regular-show\">\r\n      <img src={props.image} alt={props.alt} className=\"regular-show__pic\" />\r\n      <p className=\"regular-show__text\">{props.text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyTasks;\r\n","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-working.8610382c.png\";","export default __webpack_public_path__ + \"static/media/Mordecai-Rigby-pointing.e3f7fdfd.png\";","import React, { Component } from \"react\";\r\nimport TaskNavBar from \"./TaskNavBar\";\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Tasks from \"./Tasks\";\r\nimport CompletedTasks from \"./CompletedTasks\";\r\nimport Tags from \"../Tag Manager/Tags\";\r\n\r\nfunction TaskManager() {\r\n  return (\r\n    <div className=\"task-manager\">\r\n      {/* <TaskNavBar />\r\n      <Tasks />\r\n      <CompletedTasks />\r\n      <Tags /> */}\r\n      <h1>Hello World</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskManager;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction CreateSession({ sessionData, setSessionData }) {\r\n  console.log(sessionData, setSessionData);\r\n\r\n  const tasksData = JSON.parse(\r\n    localStorage.getItem(\"tasksData\") || \"[]\"\r\n  ).filter(function (task) {\r\n    if (task.task_isCompleted === false) {\r\n      return task;\r\n    }\r\n  });\r\n\r\n  const sessionInfo = {\r\n    id: Math.random() * 100,\r\n    activeTime: 25,\r\n    shortBreak: 5,\r\n    longBreak: 30,\r\n    intervals: 4,\r\n    isStarted: false,\r\n    isFinished: false,\r\n    currentInterval: 0,\r\n  };\r\n\r\n  const sessionTitleHandle = function (e) {\r\n    sessionInfo.title = e.target.value;\r\n  };\r\n  const sessionActiveTimeHandle = function (e) {\r\n    sessionInfo.activeTime = e.target.value;\r\n  };\r\n  const sessionShortBreakHandle = function (e) {\r\n    sessionInfo.shortBreak = e.target.value;\r\n  };\r\n  const sessionLongBreakHandle = function (e) {\r\n    sessionInfo.longBreak = e.target.value;\r\n  };\r\n  const sessionTaskHandle = function (e) {\r\n    sessionInfo.task = e.target.value;\r\n  };\r\n  const sessionIntervalsHandle = function (e) {\r\n    sessionInfo.intervals = e.target.value;\r\n  };\r\n  const sessionDescriptionHandle = function (e) {\r\n    sessionInfo.description = e.target.value;\r\n  };\r\n\r\n  const sessionSubmitHandle = function () {\r\n    sessionData.push(sessionInfo);\r\n    setSessionData([...sessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(sessionData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-create\">\r\n      <header className=\"session-create__header\">\r\n        <h4 className=\"session-create__heading\">Create Session</h4>\r\n        <Link to=\"/Session-Manager\">\r\n          <CloseIcon className=\"close-icon\" />\r\n        </Link>\r\n      </header>\r\n\r\n      <form className=\"session-create__form\">\r\n        <label htmlFor=\"stitle\" className=\"session-create__form__label\">\r\n          Session Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"sessiontitle\"\r\n          id=\"stitle\"\r\n          placeholder=\"Your Session Title\"\r\n          className=\"input__text\"\r\n          onChange={sessionTitleHandle}\r\n        />\r\n\r\n        <label htmlFor=\"sstudytime\" className=\"session-create__form__label\">\r\n          Active Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionStudyTime\"\r\n          id=\"sstudytime\"\r\n          className=\"input__number\"\r\n          onChange={sessionActiveTimeHandle}\r\n          defaultValue=\"25\"\r\n          min=\"10\"\r\n          max=\"120\"\r\n        />\r\n\r\n        <label\r\n          htmlFor=\"sshortbreaktime\"\r\n          className=\"session-create__form__label\"\r\n        >\r\n          Short Break Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionShortBreakTime\"\r\n          id=\"sshortbreaktime\"\r\n          className=\"input__number\"\r\n          onChange={sessionShortBreakHandle}\r\n          defaultValue=\"5\"\r\n          min=\"5\"\r\n          max=\"20\"\r\n        />\r\n\r\n        <label htmlFor=\"slongbreaktime\" className=\"session-create__form__label\">\r\n          Long Break Time <span className=\"light-italic\">(in minutes)</span>\r\n        </label>\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"SessionLongBreakTime\"\r\n          id=\"slongbreaktime\"\r\n          className=\"input__number\"\r\n          onChange={sessionLongBreakHandle}\r\n          defaultValue=\"30\"\r\n          min=\"20\"\r\n          max=\"60\"\r\n        />\r\n\r\n        <label htmlFor=\"stask\" className=\"session-create__form__label\">\r\n          Task\r\n        </label>\r\n        <select\r\n          name=\"sessiontask\"\r\n          id=\"stask\"\r\n          className=\"session-create__form__select\"\r\n          onChange={sessionTaskHandle}\r\n        >\r\n          <option value=\"\" selected disabled hidden></option>\r\n\r\n          {tasksData.length === 0 ? (\r\n            <option disabled>Create some Tasks</option>\r\n          ) : (\r\n            tasksData.map(function (tasks) {\r\n              return (\r\n                <option value={`${tasks.task_title}`} id={tasks.task_id}>\r\n                  {tasks.task_title}\r\n                </option>\r\n              );\r\n            })\r\n          )}\r\n        </select>\r\n        <label htmlFor=\"sintervals\" className=\"session-create__form__label\">\r\n          Number of Intervals\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"sessionintervals\"\r\n          id=\"sintervals\"\r\n          className=\"input__number\"\r\n          onChange={sessionIntervalsHandle}\r\n          defaultValue=\"4\"\r\n          min=\"1\"\r\n          max=\"12\"\r\n        />\r\n\r\n        <label htmlFor=\"tdescription\" className=\"session-create__form__label\">\r\n          Description\r\n        </label>\r\n        <textarea\r\n          name=\"sessiondescription\"\r\n          id=\"tdescription\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"Description for your Session...\"\r\n          className=\"session-create__form__description\"\r\n          onChange={sessionDescriptionHandle}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input__button\"\r\n          type=\"submit\"\r\n          onClick={sessionSubmitHandle}\r\n        >\r\n          <Link to=\"/Session-Manager\" class=\"input__button__link\">\r\n            <h4>Create Session</h4>\r\n          </Link>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateSession;\r\n","import React, { useState } from \"react\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nfunction SessionCard(props) {\r\n  const {\r\n    id,\r\n    isStarted,\r\n    isFinised,\r\n    title,\r\n    task,\r\n    currentInterval,\r\n    intervals,\r\n    description,\r\n  } = props.session;\r\n\r\n  const { sessionData, setSessionData } = props;\r\n\r\n  const sessionDeleteHandle = function () {\r\n    console.log(id);\r\n    console.log(sessionData, setSessionData);\r\n\r\n    const updatedSessionData = sessionData.filter(function (session) {\r\n      if (id !== session.id) {\r\n        return session;\r\n      }\r\n    });\r\n\r\n    setSessionData([...updatedSessionData]);\r\n    localStorage.setItem(\"sessionsData\", JSON.stringify(updatedSessionData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"session-card\">\r\n      <div className=\"session-card__info\">\r\n        <h4 className=\"session-card__info__name\">{title}</h4>\r\n        <p className=\"session-card__info__task\">{task}</p>\r\n        <p className=\"session-card__info__description\">{description}</p>\r\n      </div>\r\n      <div className=\"session-card__actions\">\r\n        <button\r\n          className=\"session-card__actions__button\"\r\n          onClick={sessionDeleteHandle}\r\n        >\r\n          <DeleteIcon />\r\n        </button>\r\n        <button className=\"session-card__actions__button\">\r\n          <KeyboardArrowRightIcon />\r\n        </button>\r\n      </div>\r\n      <div className=\"session-card__status\">\r\n        <div className=\"session-card__status__stat\">\r\n          <p className=\"session-card__status__stat__name\">Status: </p>\r\n          {isFinised === true ? (\r\n            <p className=\"session-card__status__stat__value session-card__status__stat__value--finished \">\r\n              Finished\r\n            </p>\r\n          ) : isStarted === true ? (\r\n            <p className=\"session-card__status__stat__value session-card__status__stat__value--started \">\r\n              Started\r\n            </p>\r\n          ) : (\r\n            <p className=\"session-card__status__stat__value\">Not Started</p>\r\n          )}\r\n        </div>\r\n        <div className=\"session-card__status__stat\">\r\n          <p className=\"session-card__status__stat__name\">Progress:</p>\r\n          <p className=\"session-card__status__stat__value\">\r\n            {currentInterval}/{intervals}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SessionCard;\r\n","export default __webpack_public_path__ + \"static/media/Rigby-reading.343b8b6a.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CreateSession from \"./CreateSession\";\r\nimport SessionCard from \"./SessionCard\";\r\nimport EmptyTasks from \"../Task Manager/EmptyTasks\";\r\nimport RegularShowReading from \"../../images/Rigby-reading.png\";\r\n\r\nfunction SessionManager() {\r\n  const [sessionData, setSessionData] = useState([\r\n    ...JSON.parse(localStorage.getItem(\"sessionsData\") || \"[]\"),\r\n  ]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"task-manager\">\r\n        <div className=\"task-section\">\r\n          <header className=\"task-section__header\">\r\n            <h2 className=\"heading\">Sessions</h2>\r\n            <Link to=\"/Session-Manager/create-tag\" className=\"add-task\">\r\n              <h4>New Session</h4>\r\n              <AddIcon className=\"add-task__icon\" />\r\n            </Link>\r\n          </header>\r\n          <Switch>\r\n            <Route path=\"/Session-Manager/create-tag\">\r\n              <CreateSession\r\n                sessionData={sessionData}\r\n                setSessionData={setSessionData}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n\r\n          {sessionData.length === 0 ? (\r\n            <EmptyTasks\r\n              image={RegularShowReading}\r\n              text=\"Create a session and let's get productive :D\"\r\n              alt=\"Rigby Reading\"\r\n            />\r\n          ) : (\r\n            sessionData.map(function (session) {\r\n              return (\r\n                <SessionCard\r\n                  session={session}\r\n                  sessionData={sessionData}\r\n                  setSessionData={setSessionData}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default SessionManager;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"../src/css/style.css\";\nimport HomePage from \"./components/Home Page/HomePage\";\nimport MobileNavBar from \"./components/NavBar/MobileNavBar\";\nimport TimerPage from \"./components/Timer Page/TimerPage\";\nimport TaskManager from \"./components/Task Manager/TaskManager\";\nimport SessionManager from \"./components/Session Manager/SessionManager\";\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <MobileNavBar />\n\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/tasks\" component={TaskManager} />\n      <Route path=\"/session-manager\" component={SessionManager} />\n      <Route path=\"/timer\" component={TimerPage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}